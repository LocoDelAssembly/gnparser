// Code generated by protoc-gen-go. DO NOT EDIT.
// source: gnparser.proto

package grpc

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Format int32

const (
	Format_Compact Format = 0
	Format_Pretty  Format = 1
	Format_Simple  Format = 2
	Format_Debug   Format = 3
)

var Format_name = map[int32]string{
	0: "Compact",
	1: "Pretty",
	2: "Simple",
	3: "Debug",
}

var Format_value = map[string]int32{
	"Compact": 0,
	"Pretty":  1,
	"Simple":  2,
	"Debug":   3,
}

func (x Format) String() string {
	return proto.EnumName(Format_name, int32(x))
}

func (Format) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_586948aee85e7dfc, []int{0}
}

type Version struct {
	Value                string   `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty"`
	BuildTime            string   `protobuf:"bytes,2,opt,name=build_time,json=buildTime,proto3" json:"build_time,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Version) Reset()         { *m = Version{} }
func (m *Version) String() string { return proto.CompactTextString(m) }
func (*Version) ProtoMessage()    {}
func (*Version) Descriptor() ([]byte, []int) {
	return fileDescriptor_586948aee85e7dfc, []int{0}
}

func (m *Version) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Version.Unmarshal(m, b)
}
func (m *Version) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Version.Marshal(b, m, deterministic)
}
func (m *Version) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Version.Merge(m, src)
}
func (m *Version) XXX_Size() int {
	return xxx_messageInfo_Version.Size(m)
}
func (m *Version) XXX_DiscardUnknown() {
	xxx_messageInfo_Version.DiscardUnknown(m)
}

var xxx_messageInfo_Version proto.InternalMessageInfo

func (m *Version) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

func (m *Version) GetBuildTime() string {
	if m != nil {
		return m.BuildTime
	}
	return ""
}

type Void struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Void) Reset()         { *m = Void{} }
func (m *Void) String() string { return proto.CompactTextString(m) }
func (*Void) ProtoMessage()    {}
func (*Void) Descriptor() ([]byte, []int) {
	return fileDescriptor_586948aee85e7dfc, []int{1}
}

func (m *Void) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Void.Unmarshal(m, b)
}
func (m *Void) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Void.Marshal(b, m, deterministic)
}
func (m *Void) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Void.Merge(m, src)
}
func (m *Void) XXX_Size() int {
	return xxx_messageInfo_Void.Size(m)
}
func (m *Void) XXX_DiscardUnknown() {
	xxx_messageInfo_Void.DiscardUnknown(m)
}

var xxx_messageInfo_Void proto.InternalMessageInfo

type Input struct {
	// Types that are valid to be assigned to Content:
	//	*Input_Format
	//	*Input_Name
	Content              isInput_Content `protobuf_oneof:"content"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *Input) Reset()         { *m = Input{} }
func (m *Input) String() string { return proto.CompactTextString(m) }
func (*Input) ProtoMessage()    {}
func (*Input) Descriptor() ([]byte, []int) {
	return fileDescriptor_586948aee85e7dfc, []int{2}
}

func (m *Input) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Input.Unmarshal(m, b)
}
func (m *Input) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Input.Marshal(b, m, deterministic)
}
func (m *Input) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Input.Merge(m, src)
}
func (m *Input) XXX_Size() int {
	return xxx_messageInfo_Input.Size(m)
}
func (m *Input) XXX_DiscardUnknown() {
	xxx_messageInfo_Input.DiscardUnknown(m)
}

var xxx_messageInfo_Input proto.InternalMessageInfo

type isInput_Content interface {
	isInput_Content()
}

type Input_Format struct {
	Format Format `protobuf:"varint,1,opt,name=format,proto3,enum=grpc.Format,oneof"`
}

type Input_Name struct {
	Name string `protobuf:"bytes,2,opt,name=name,proto3,oneof"`
}

func (*Input_Format) isInput_Content() {}

func (*Input_Name) isInput_Content() {}

func (m *Input) GetContent() isInput_Content {
	if m != nil {
		return m.Content
	}
	return nil
}

func (m *Input) GetFormat() Format {
	if x, ok := m.GetContent().(*Input_Format); ok {
		return x.Format
	}
	return Format_Compact
}

func (m *Input) GetName() string {
	if x, ok := m.GetContent().(*Input_Name); ok {
		return x.Name
	}
	return ""
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*Input) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _Input_OneofMarshaler, _Input_OneofUnmarshaler, _Input_OneofSizer, []interface{}{
		(*Input_Format)(nil),
		(*Input_Name)(nil),
	}
}

func _Input_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*Input)
	// content
	switch x := m.Content.(type) {
	case *Input_Format:
		b.EncodeVarint(1<<3 | proto.WireVarint)
		b.EncodeVarint(uint64(x.Format))
	case *Input_Name:
		b.EncodeVarint(2<<3 | proto.WireBytes)
		b.EncodeStringBytes(x.Name)
	case nil:
	default:
		return fmt.Errorf("Input.Content has unexpected type %T", x)
	}
	return nil
}

func _Input_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*Input)
	switch tag {
	case 1: // content.format
		if wire != proto.WireVarint {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeVarint()
		m.Content = &Input_Format{Format(x)}
		return true, err
	case 2: // content.name
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeStringBytes()
		m.Content = &Input_Name{x}
		return true, err
	default:
		return false, nil
	}
}

func _Input_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*Input)
	// content
	switch x := m.Content.(type) {
	case *Input_Format:
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(x.Format))
	case *Input_Name:
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(len(x.Name)))
		n += len(x.Name)
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

type Name struct {
	Parsed               bool     `protobuf:"varint,1,opt,name=parsed,proto3" json:"parsed,omitempty"`
	Quality              int32    `protobuf:"varint,2,opt,name=quality,proto3" json:"quality,omitempty"`
	Verbatim             string   `protobuf:"bytes,3,opt,name=verbatim,proto3" json:"verbatim,omitempty"`
	Normalized           string   `protobuf:"bytes,4,opt,name=normalized,proto3" json:"normalized,omitempty"`
	CanonicalSimple      string   `protobuf:"bytes,5,opt,name=canonical_simple,json=canonicalSimple,proto3" json:"canonical_simple,omitempty"`
	CanonicalFull        string   `protobuf:"bytes,6,opt,name=canonical_full,json=canonicalFull,proto3" json:"canonical_full,omitempty"`
	Genus                *Entry   `protobuf:"bytes,7,opt,name=genus,proto3" json:"genus,omitempty"`
	Subgenus             *Entry   `protobuf:"bytes,8,opt,name=subgenus,proto3" json:"subgenus,omitempty"`
	Species              *Entry   `protobuf:"bytes,9,opt,name=species,proto3" json:"species,omitempty"`
	Subspicies           *Entry   `protobuf:"bytes,10,opt,name=subspicies,proto3" json:"subspicies,omitempty"`
	Variety              *Entry   `protobuf:"bytes,11,opt,name=variety,proto3" json:"variety,omitempty"`
	Form                 *Entry   `protobuf:"bytes,12,opt,name=form,proto3" json:"form,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Name) Reset()         { *m = Name{} }
func (m *Name) String() string { return proto.CompactTextString(m) }
func (*Name) ProtoMessage()    {}
func (*Name) Descriptor() ([]byte, []int) {
	return fileDescriptor_586948aee85e7dfc, []int{3}
}

func (m *Name) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Name.Unmarshal(m, b)
}
func (m *Name) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Name.Marshal(b, m, deterministic)
}
func (m *Name) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Name.Merge(m, src)
}
func (m *Name) XXX_Size() int {
	return xxx_messageInfo_Name.Size(m)
}
func (m *Name) XXX_DiscardUnknown() {
	xxx_messageInfo_Name.DiscardUnknown(m)
}

var xxx_messageInfo_Name proto.InternalMessageInfo

func (m *Name) GetParsed() bool {
	if m != nil {
		return m.Parsed
	}
	return false
}

func (m *Name) GetQuality() int32 {
	if m != nil {
		return m.Quality
	}
	return 0
}

func (m *Name) GetVerbatim() string {
	if m != nil {
		return m.Verbatim
	}
	return ""
}

func (m *Name) GetNormalized() string {
	if m != nil {
		return m.Normalized
	}
	return ""
}

func (m *Name) GetCanonicalSimple() string {
	if m != nil {
		return m.CanonicalSimple
	}
	return ""
}

func (m *Name) GetCanonicalFull() string {
	if m != nil {
		return m.CanonicalFull
	}
	return ""
}

func (m *Name) GetGenus() *Entry {
	if m != nil {
		return m.Genus
	}
	return nil
}

func (m *Name) GetSubgenus() *Entry {
	if m != nil {
		return m.Subgenus
	}
	return nil
}

func (m *Name) GetSpecies() *Entry {
	if m != nil {
		return m.Species
	}
	return nil
}

func (m *Name) GetSubspicies() *Entry {
	if m != nil {
		return m.Subspicies
	}
	return nil
}

func (m *Name) GetVariety() *Entry {
	if m != nil {
		return m.Variety
	}
	return nil
}

func (m *Name) GetForm() *Entry {
	if m != nil {
		return m.Form
	}
	return nil
}

type Entry struct {
	Value                string   `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty"`
	NormValue            string   `protobuf:"bytes,2,opt,name=norm_value,json=normValue,proto3" json:"norm_value,omitempty"`
	Position             *Pos     `protobuf:"bytes,3,opt,name=position,proto3" json:"position,omitempty"`
	Authors              string   `protobuf:"bytes,4,opt,name=authors,proto3" json:"authors,omitempty"`
	Year                 string   `protobuf:"bytes,5,opt,name=year,proto3" json:"year,omitempty"`
	Score                string   `protobuf:"bytes,6,opt,name=score,proto3" json:"score,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Entry) Reset()         { *m = Entry{} }
func (m *Entry) String() string { return proto.CompactTextString(m) }
func (*Entry) ProtoMessage()    {}
func (*Entry) Descriptor() ([]byte, []int) {
	return fileDescriptor_586948aee85e7dfc, []int{4}
}

func (m *Entry) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Entry.Unmarshal(m, b)
}
func (m *Entry) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Entry.Marshal(b, m, deterministic)
}
func (m *Entry) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Entry.Merge(m, src)
}
func (m *Entry) XXX_Size() int {
	return xxx_messageInfo_Entry.Size(m)
}
func (m *Entry) XXX_DiscardUnknown() {
	xxx_messageInfo_Entry.DiscardUnknown(m)
}

var xxx_messageInfo_Entry proto.InternalMessageInfo

func (m *Entry) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

func (m *Entry) GetNormValue() string {
	if m != nil {
		return m.NormValue
	}
	return ""
}

func (m *Entry) GetPosition() *Pos {
	if m != nil {
		return m.Position
	}
	return nil
}

func (m *Entry) GetAuthors() string {
	if m != nil {
		return m.Authors
	}
	return ""
}

func (m *Entry) GetYear() string {
	if m != nil {
		return m.Year
	}
	return ""
}

func (m *Entry) GetScore() string {
	if m != nil {
		return m.Score
	}
	return ""
}

type Pos struct {
	Start                int32    `protobuf:"varint,1,opt,name=start,proto3" json:"start,omitempty"`
	End                  int32    `protobuf:"varint,2,opt,name=end,proto3" json:"end,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Pos) Reset()         { *m = Pos{} }
func (m *Pos) String() string { return proto.CompactTextString(m) }
func (*Pos) ProtoMessage()    {}
func (*Pos) Descriptor() ([]byte, []int) {
	return fileDescriptor_586948aee85e7dfc, []int{5}
}

func (m *Pos) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Pos.Unmarshal(m, b)
}
func (m *Pos) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Pos.Marshal(b, m, deterministic)
}
func (m *Pos) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Pos.Merge(m, src)
}
func (m *Pos) XXX_Size() int {
	return xxx_messageInfo_Pos.Size(m)
}
func (m *Pos) XXX_DiscardUnknown() {
	xxx_messageInfo_Pos.DiscardUnknown(m)
}

var xxx_messageInfo_Pos proto.InternalMessageInfo

func (m *Pos) GetStart() int32 {
	if m != nil {
		return m.Start
	}
	return 0
}

func (m *Pos) GetEnd() int32 {
	if m != nil {
		return m.End
	}
	return 0
}

type Output struct {
	Value                string   `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty"`
	Error                string   `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Output) Reset()         { *m = Output{} }
func (m *Output) String() string { return proto.CompactTextString(m) }
func (*Output) ProtoMessage()    {}
func (*Output) Descriptor() ([]byte, []int) {
	return fileDescriptor_586948aee85e7dfc, []int{6}
}

func (m *Output) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Output.Unmarshal(m, b)
}
func (m *Output) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Output.Marshal(b, m, deterministic)
}
func (m *Output) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Output.Merge(m, src)
}
func (m *Output) XXX_Size() int {
	return xxx_messageInfo_Output.Size(m)
}
func (m *Output) XXX_DiscardUnknown() {
	xxx_messageInfo_Output.DiscardUnknown(m)
}

var xxx_messageInfo_Output proto.InternalMessageInfo

func (m *Output) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

func (m *Output) GetError() string {
	if m != nil {
		return m.Error
	}
	return ""
}

func init() {
	proto.RegisterEnum("grpc.Format", Format_name, Format_value)
	proto.RegisterType((*Version)(nil), "grpc.Version")
	proto.RegisterType((*Void)(nil), "grpc.Void")
	proto.RegisterType((*Input)(nil), "grpc.Input")
	proto.RegisterType((*Name)(nil), "grpc.Name")
	proto.RegisterType((*Entry)(nil), "grpc.Entry")
	proto.RegisterType((*Pos)(nil), "grpc.Pos")
	proto.RegisterType((*Output)(nil), "grpc.Output")
}

func init() { proto.RegisterFile("gnparser.proto", fileDescriptor_586948aee85e7dfc) }

var fileDescriptor_586948aee85e7dfc = []byte{
	// 563 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x74, 0x53, 0xcd, 0x6f, 0xd3, 0x4e,
	0x10, 0x8d, 0x1b, 0xdb, 0x89, 0x27, 0x6d, 0x7f, 0xd6, 0xa8, 0xfa, 0xc9, 0xaa, 0x04, 0x14, 0x4b,
	0x85, 0x00, 0xa2, 0x42, 0x81, 0x03, 0x27, 0x0e, 0x7c, 0x94, 0x72, 0x29, 0x91, 0x41, 0x11, 0xb7,
	0x6a, 0xed, 0x6c, 0xc3, 0x4a, 0xf6, 0xae, 0xd9, 0x8f, 0x4a, 0xe1, 0x1f, 0xe2, 0xc6, 0xdf, 0x88,
	0xf6, 0x23, 0xa1, 0x52, 0xca, 0x6d, 0xde, 0xbc, 0xa7, 0xf1, 0x78, 0xdf, 0x1b, 0x38, 0x5c, 0xf1,
	0x9e, 0x48, 0x45, 0xe5, 0x59, 0x2f, 0x85, 0x16, 0x18, 0xaf, 0x64, 0xdf, 0x94, 0x6f, 0x60, 0xb4,
	0xa0, 0x52, 0x31, 0xc1, 0xf1, 0x08, 0x92, 0x1b, 0xd2, 0x1a, 0x5a, 0x44, 0x27, 0xd1, 0x34, 0xab,
	0x3c, 0xc0, 0x7b, 0x00, 0xb5, 0x61, 0xed, 0xf2, 0x4a, 0xb3, 0x8e, 0x16, 0x7b, 0x8e, 0xca, 0x5c,
	0xe7, 0x2b, 0xeb, 0x68, 0x99, 0x42, 0xbc, 0x10, 0x6c, 0x59, 0xce, 0x21, 0xf9, 0xc4, 0x7b, 0xa3,
	0xf1, 0x11, 0xa4, 0xd7, 0x42, 0x76, 0x44, 0xbb, 0x31, 0x87, 0xb3, 0xfd, 0x33, 0xfb, 0x9d, 0xb3,
	0x73, 0xd7, 0xbb, 0x18, 0x54, 0x81, 0xc5, 0x23, 0x88, 0x39, 0xd9, 0x4c, 0xbc, 0x18, 0x54, 0x0e,
	0xbd, 0xcd, 0x60, 0xd4, 0x08, 0xae, 0x29, 0xd7, 0xe5, 0xef, 0x21, 0xc4, 0x97, 0xa4, 0xa3, 0xf8,
	0x3f, 0xa4, 0x6e, 0xf1, 0xa5, 0x9b, 0x38, 0xae, 0x02, 0xc2, 0x02, 0x46, 0x3f, 0x0c, 0x69, 0x99,
	0x5e, 0xbb, 0x21, 0x49, 0xb5, 0x81, 0x78, 0x0c, 0xe3, 0x1b, 0x2a, 0x6b, 0xa2, 0x59, 0x57, 0x0c,
	0xdd, 0xc6, 0x5b, 0x8c, 0xf7, 0x01, 0xb8, 0xdd, 0xa0, 0x65, 0x3f, 0xe9, 0xb2, 0x88, 0x1d, 0x7b,
	0xab, 0x83, 0x4f, 0x20, 0x6f, 0x08, 0x17, 0x9c, 0x35, 0xa4, 0xbd, 0x52, 0xac, 0xeb, 0x5b, 0x5a,
	0x24, 0x4e, 0xf5, 0xdf, 0xb6, 0xff, 0xc5, 0xb5, 0xf1, 0x14, 0x0e, 0xff, 0x4a, 0xaf, 0x4d, 0xdb,
	0x16, 0xa9, 0x13, 0x1e, 0x6c, 0xbb, 0xe7, 0xa6, 0x6d, 0xf1, 0x21, 0x24, 0x2b, 0xca, 0x8d, 0x2a,
	0x46, 0x27, 0xd1, 0x74, 0x32, 0x9b, 0xf8, 0x07, 0xf9, 0xc0, 0xb5, 0x5c, 0x57, 0x9e, 0xc1, 0xc7,
	0x30, 0x56, 0xa6, 0xf6, 0xaa, 0xf1, 0xae, 0x6a, 0x4b, 0xe2, 0x29, 0x8c, 0x54, 0x4f, 0x1b, 0x46,
	0x55, 0x91, 0xed, 0xea, 0x36, 0x1c, 0x3e, 0x03, 0x50, 0xa6, 0x56, 0x3d, 0x73, 0x4a, 0xd8, 0x55,
	0xde, 0xa2, 0xed, 0xcc, 0x1b, 0x22, 0x19, 0xd5, 0xeb, 0x62, 0x72, 0xc7, 0xcc, 0xc0, 0xe1, 0x03,
	0x88, 0xad, 0x75, 0xc5, 0xfe, 0xae, 0xc6, 0x11, 0xe5, 0xaf, 0x08, 0x12, 0x87, 0xff, 0x9d, 0x24,
	0xfb, 0xce, 0x57, 0x9e, 0x0a, 0x49, 0xb2, 0x9d, 0x85, 0xa3, 0x4f, 0x61, 0xdc, 0x0b, 0xc5, 0x34,
	0x13, 0xdc, 0x99, 0x36, 0x99, 0x65, 0xfe, 0x1b, 0x73, 0xa1, 0xaa, 0x2d, 0x65, 0x5d, 0x27, 0x46,
	0x7f, 0x17, 0x52, 0x05, 0xf3, 0x36, 0x10, 0x11, 0xe2, 0x35, 0x25, 0x32, 0xb8, 0xe5, 0x6a, 0xbb,
	0x89, 0x6a, 0x84, 0xa4, 0xc1, 0x19, 0x0f, 0xca, 0xe7, 0x30, 0x9c, 0x0b, 0xe5, 0x48, 0x4d, 0xa4,
	0x4f, 0x6a, 0x52, 0x79, 0x80, 0x39, 0x0c, 0x29, 0x5f, 0x86, 0x48, 0xd9, 0xb2, 0x7c, 0x05, 0xe9,
	0x67, 0xa3, 0x6d, 0xb8, 0xef, 0xfe, 0xb1, 0x23, 0x48, 0xa8, 0x94, 0x42, 0x86, 0x7f, 0xf2, 0xe0,
	0xe9, 0x6b, 0x48, 0x7d, 0xe8, 0x71, 0x02, 0xa3, 0x77, 0xa2, 0xeb, 0x49, 0xa3, 0xf3, 0x01, 0x02,
	0xa4, 0x73, 0x49, 0xb5, 0x5e, 0xe7, 0x91, 0xad, 0x7d, 0x94, 0xf2, 0x3d, 0xcc, 0x20, 0x79, 0x4f,
	0x6b, 0xb3, 0xca, 0x87, 0xb3, 0x6f, 0x30, 0xfe, 0x78, 0xe9, 0x6f, 0x15, 0x4b, 0x18, 0x2e, 0xa8,
	0x44, 0xf0, 0x4f, 0x61, 0x4f, 0xed, 0xf8, 0x20, 0xd4, 0xfe, 0x6c, 0xcb, 0x01, 0x4e, 0x21, 0x99,
	0x5b, 0x35, 0x06, 0x53, 0xdc, 0x21, 0x1e, 0x87, 0xc3, 0xf3, 0x9b, 0x97, 0x83, 0x69, 0xf4, 0x22,
	0xaa, 0x53, 0x77, 0xfa, 0x2f, 0xff, 0x04, 0x00, 0x00, 0xff, 0xff, 0x97, 0x6b, 0xf8, 0x81, 0x0c,
	0x04, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// GNparserClient is the client API for GNparser service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type GNparserClient interface {
	Ver(ctx context.Context, in *Void, opts ...grpc.CallOption) (*Version, error)
	Parse(ctx context.Context, opts ...grpc.CallOption) (GNparser_ParseClient, error)
}

type gNparserClient struct {
	cc *grpc.ClientConn
}

func NewGNparserClient(cc *grpc.ClientConn) GNparserClient {
	return &gNparserClient{cc}
}

func (c *gNparserClient) Ver(ctx context.Context, in *Void, opts ...grpc.CallOption) (*Version, error) {
	out := new(Version)
	err := c.cc.Invoke(ctx, "/grpc.GNparser/Ver", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *gNparserClient) Parse(ctx context.Context, opts ...grpc.CallOption) (GNparser_ParseClient, error) {
	stream, err := c.cc.NewStream(ctx, &_GNparser_serviceDesc.Streams[0], "/grpc.GNparser/Parse", opts...)
	if err != nil {
		return nil, err
	}
	x := &gNparserParseClient{stream}
	return x, nil
}

type GNparser_ParseClient interface {
	Send(*Input) error
	Recv() (*Output, error)
	grpc.ClientStream
}

type gNparserParseClient struct {
	grpc.ClientStream
}

func (x *gNparserParseClient) Send(m *Input) error {
	return x.ClientStream.SendMsg(m)
}

func (x *gNparserParseClient) Recv() (*Output, error) {
	m := new(Output)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// GNparserServer is the server API for GNparser service.
type GNparserServer interface {
	Ver(context.Context, *Void) (*Version, error)
	Parse(GNparser_ParseServer) error
}

func RegisterGNparserServer(s *grpc.Server, srv GNparserServer) {
	s.RegisterService(&_GNparser_serviceDesc, srv)
}

func _GNparser_Ver_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Void)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GNparserServer).Ver(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.GNparser/Ver",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GNparserServer).Ver(ctx, req.(*Void))
	}
	return interceptor(ctx, in, info, handler)
}

func _GNparser_Parse_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(GNparserServer).Parse(&gNparserParseServer{stream})
}

type GNparser_ParseServer interface {
	Send(*Output) error
	Recv() (*Input, error)
	grpc.ServerStream
}

type gNparserParseServer struct {
	grpc.ServerStream
}

func (x *gNparserParseServer) Send(m *Output) error {
	return x.ServerStream.SendMsg(m)
}

func (x *gNparserParseServer) Recv() (*Input, error) {
	m := new(Input)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

var _GNparser_serviceDesc = grpc.ServiceDesc{
	ServiceName: "grpc.GNparser",
	HandlerType: (*GNparserServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Ver",
			Handler:    _GNparser_Ver_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "Parse",
			Handler:       _GNparser_Parse_Handler,
			ServerStreams: true,
			ClientStreams: true,
		},
	},
	Metadata: "gnparser.proto",
}
