package grammar

// Code generated by peg grammar.peg DO NOT EDIT.

import (
	"fmt"
	"io"
	"os"
	"sort"
	"strconv"
)

const endSymbol rune = 1114112

/* The rule types inferred from the grammar are below. */
type pegRule uint8

const (
	ruleUnknown pegRule = iota
	ruleSciName
	ruleTail
	ruleName
	ruleHybridFormula
	ruleHybridFormulaFull
	ruleHybridFormulaPart
	ruleNamedHybrid
	ruleNamedSpeciesHybrid
	ruleNamedGenusHybrid
	ruleSingleName
	ruleNameUninomial
	ruleNameApprox
	ruleNameComp
	ruleNameSpecies
	ruleGenusWord
	ruleInfraspGroup
	ruleInfraspEpithet
	ruleSpeciesEpithet
	ruleComparison
	ruleRank
	ruleRankNotho
	ruleRankOtherUncommon
	ruleRankOther
	ruleRankVar
	ruleRankForma
	ruleRankSsp
	ruleRankAgamo
	ruleSubGenusOrSuperspecies
	ruleSubGenus
	ruleUninomialCombo
	ruleUninomialCombo1
	ruleUninomialCombo2
	ruleRankUninomial
	ruleRankUninomialPlain
	ruleRankUninomialNotho
	ruleUninomial
	ruleUninomialWord
	ruleAbbrGenus
	ruleCapWord
	ruleCapWord1
	ruleCapWordWithDash
	ruleUpperAfterDash
	ruleLowerAfterDash
	ruleTwoLetterGenus
	ruleWord
	ruleWord1
	ruleWordStartsWithDigit
	ruleWord2
	ruleWordApostr
	ruleWord4
	ruleMultiDashedWord
	ruleHybridChar
	ruleApproxNameIgnored
	ruleApproximation
	ruleAuthorship
	ruleAuthorshipCombo
	ruleOriginalAuthorship
	ruleOriginalAuthorshipComb
	ruleCombinationAuthorship
	ruleBasionymAuthorshipMissingParens
	ruleMissingParensStart
	ruleMissingParensEnd
	ruleBasionymAuthorshipYearMisformed
	ruleBasionymAuthorship
	ruleBasionymAuthorship1
	ruleBasionymAuthorship2Parens
	ruleAuthorsGroup
	ruleAuthorsTeam
	ruleAuthorSep
	ruleAuthorSep1
	ruleAuthorSep2
	ruleAuthorEx
	ruleAuthorEmend
	ruleAuthor
	ruleAuthor1
	ruleAuthor2
	ruleUnknownAuthor
	ruleAuthorWord
	ruleAuthorEtAl
	ruleAuthorWord2
	ruleAuthorWord3
	ruleAuthorWordSoft
	ruleCapAuthorWord
	ruleAllCapsAuthorWord
	ruleFilius
	ruleAuthorSuffix
	ruleAuthorPrefixGlued
	ruleAuthorPrefix
	ruleAuthorPrefix2
	ruleAuthorPrefix1
	ruleAuthorUpperChar
	ruleAuthorLowerChar
	ruleYear
	ruleYearRange
	ruleYearWithDot
	ruleYearApprox
	ruleYearWithPage
	ruleYearWithParens
	ruleYearWithChar
	ruleYearNum
	ruleNameUpperChar
	ruleUpperCharExtended
	ruleUpperChar
	ruleNameLowerChar
	ruleMiscodedChar
	ruleLowerCharExtended
	ruleLowerChar
	ruleSpaceCharEOI
	ruleNums
	ruleLowerGreek
	ruleLowerASCII
	ruleUpperASCII
	ruleApostrophe
	ruleApostrASCII
	ruleApostrOther
	ruleDash
	ruleSlash
	rule_
	ruleMultipleSpace
	ruleSingleSpace
	ruleOtherSpace
	ruleAction0
)

var rul3s = [...]string{
	"Unknown",
	"SciName",
	"Tail",
	"Name",
	"HybridFormula",
	"HybridFormulaFull",
	"HybridFormulaPart",
	"NamedHybrid",
	"NamedSpeciesHybrid",
	"NamedGenusHybrid",
	"SingleName",
	"NameUninomial",
	"NameApprox",
	"NameComp",
	"NameSpecies",
	"GenusWord",
	"InfraspGroup",
	"InfraspEpithet",
	"SpeciesEpithet",
	"Comparison",
	"Rank",
	"RankNotho",
	"RankOtherUncommon",
	"RankOther",
	"RankVar",
	"RankForma",
	"RankSsp",
	"RankAgamo",
	"SubGenusOrSuperspecies",
	"SubGenus",
	"UninomialCombo",
	"UninomialCombo1",
	"UninomialCombo2",
	"RankUninomial",
	"RankUninomialPlain",
	"RankUninomialNotho",
	"Uninomial",
	"UninomialWord",
	"AbbrGenus",
	"CapWord",
	"CapWord1",
	"CapWordWithDash",
	"UpperAfterDash",
	"LowerAfterDash",
	"TwoLetterGenus",
	"Word",
	"Word1",
	"WordStartsWithDigit",
	"Word2",
	"WordApostr",
	"Word4",
	"MultiDashedWord",
	"HybridChar",
	"ApproxNameIgnored",
	"Approximation",
	"Authorship",
	"AuthorshipCombo",
	"OriginalAuthorship",
	"OriginalAuthorshipComb",
	"CombinationAuthorship",
	"BasionymAuthorshipMissingParens",
	"MissingParensStart",
	"MissingParensEnd",
	"BasionymAuthorshipYearMisformed",
	"BasionymAuthorship",
	"BasionymAuthorship1",
	"BasionymAuthorship2Parens",
	"AuthorsGroup",
	"AuthorsTeam",
	"AuthorSep",
	"AuthorSep1",
	"AuthorSep2",
	"AuthorEx",
	"AuthorEmend",
	"Author",
	"Author1",
	"Author2",
	"UnknownAuthor",
	"AuthorWord",
	"AuthorEtAl",
	"AuthorWord2",
	"AuthorWord3",
	"AuthorWordSoft",
	"CapAuthorWord",
	"AllCapsAuthorWord",
	"Filius",
	"AuthorSuffix",
	"AuthorPrefixGlued",
	"AuthorPrefix",
	"AuthorPrefix2",
	"AuthorPrefix1",
	"AuthorUpperChar",
	"AuthorLowerChar",
	"Year",
	"YearRange",
	"YearWithDot",
	"YearApprox",
	"YearWithPage",
	"YearWithParens",
	"YearWithChar",
	"YearNum",
	"NameUpperChar",
	"UpperCharExtended",
	"UpperChar",
	"NameLowerChar",
	"MiscodedChar",
	"LowerCharExtended",
	"LowerChar",
	"SpaceCharEOI",
	"Nums",
	"LowerGreek",
	"LowerASCII",
	"UpperASCII",
	"Apostrophe",
	"ApostrASCII",
	"ApostrOther",
	"Dash",
	"Slash",
	"_",
	"MultipleSpace",
	"SingleSpace",
	"OtherSpace",
	"Action0",
}

type token32 struct {
	pegRule
	begin, end uint32
}

func (t *token32) String() string {
	return fmt.Sprintf("\x1B[34m%v\x1B[m %v %v", rul3s[t.pegRule], t.begin, t.end)
}

type node32 struct {
	token32
	up, next *node32
}

func (node *node32) print(w io.Writer, pretty bool, buffer string) {
	var print func(node *node32, depth int)
	print = func(node *node32, depth int) {
		for node != nil {
			for c := 0; c < depth; c++ {
				fmt.Fprintf(w, " ")
			}
			rule := rul3s[node.pegRule]
			quote := strconv.Quote(string(([]rune(buffer)[node.begin:node.end])))
			if !pretty {
				fmt.Fprintf(w, "%v %v\n", rule, quote)
			} else {
				fmt.Fprintf(w, "\x1B[34m%v\x1B[m %v\n", rule, quote)
			}
			if node.up != nil {
				print(node.up, depth+1)
			}
			node = node.next
		}
	}
	print(node, 0)
}

func (node *node32) Print(w io.Writer, buffer string) {
	node.print(w, false, buffer)
}

func (node *node32) PrettyPrint(w io.Writer, buffer string) {
	node.print(w, true, buffer)
}

type tokens32 struct {
	tree []token32
}

func (t *tokens32) Trim(length uint32) {
	t.tree = t.tree[:length]
}

func (t *tokens32) Print() {
	for _, token := range t.tree {
		fmt.Println(token.String())
	}
}

func (t *tokens32) AST() *node32 {
	type element struct {
		node *node32
		down *element
	}
	tokens := t.Tokens()
	var stack *element
	for _, token := range tokens {
		if token.begin == token.end {
			continue
		}
		node := &node32{token32: token}
		for stack != nil && stack.node.begin >= token.begin && stack.node.end <= token.end {
			stack.node.next = node.up
			node.up = stack.node
			stack = stack.down
		}
		stack = &element{node: node, down: stack}
	}
	if stack != nil {
		return stack.node
	}
	return nil
}

func (t *tokens32) PrintSyntaxTree(buffer string) {
	t.AST().Print(os.Stdout, buffer)
}

func (t *tokens32) WriteSyntaxTree(w io.Writer, buffer string) {
	t.AST().Print(w, buffer)
}

func (t *tokens32) PrettyPrintSyntaxTree(buffer string) {
	t.AST().PrettyPrint(os.Stdout, buffer)
}

func (t *tokens32) Add(rule pegRule, begin, end, index uint32) {
	tree, i := t.tree, int(index)
	if i >= len(tree) {
		t.tree = append(tree, token32{pegRule: rule, begin: begin, end: end})
		return
	}
	tree[i] = token32{pegRule: rule, begin: begin, end: end}
}

func (t *tokens32) Tokens() []token32 {
	return t.tree
}

type Engine struct {
	BaseEngine

	Buffer string
	buffer []rune
	rules  [123]func() bool
	parse  func(rule ...int) error
	reset  func()
	Pretty bool
	tokens32
}

func (p *Engine) Parse(rule ...int) error {
	return p.parse(rule...)
}

func (p *Engine) Reset() {
	p.reset()
}

type textPosition struct {
	line, symbol int
}

type textPositionMap map[int]textPosition

func translatePositions(buffer []rune, positions []int) textPositionMap {
	length, translations, j, line, symbol := len(positions), make(textPositionMap, len(positions)), 0, 1, 0
	sort.Ints(positions)

search:
	for i, c := range buffer {
		if c == '\n' {
			line, symbol = line+1, 0
		} else {
			symbol++
		}
		if i == positions[j] {
			translations[positions[j]] = textPosition{line, symbol}
			for j++; j < length; j++ {
				if i != positions[j] {
					continue search
				}
			}
			break search
		}
	}

	return translations
}

type parseError struct {
	p   *Engine
	max token32
}

func (e *parseError) Error() string {
	tokens, err := []token32{e.max}, "\n"
	positions, p := make([]int, 2*len(tokens)), 0
	for _, token := range tokens {
		positions[p], p = int(token.begin), p+1
		positions[p], p = int(token.end), p+1
	}
	translations := translatePositions(e.p.buffer, positions)
	format := "parse error near %v (line %v symbol %v - line %v symbol %v):\n%v\n"
	if e.p.Pretty {
		format = "parse error near \x1B[34m%v\x1B[m (line %v symbol %v - line %v symbol %v):\n%v\n"
	}
	for _, token := range tokens {
		begin, end := int(token.begin), int(token.end)
		err += fmt.Sprintf(format,
			rul3s[token.pegRule],
			translations[begin].line, translations[begin].symbol,
			translations[end].line, translations[end].symbol,
			strconv.Quote(string(e.p.buffer[begin:end])))
	}

	return err
}

func (p *Engine) PrintSyntaxTree() {
	if p.Pretty {
		p.tokens32.PrettyPrintSyntaxTree(p.Buffer)
	} else {
		p.tokens32.PrintSyntaxTree(p.Buffer)
	}
}

func (p *Engine) WriteSyntaxTree(w io.Writer) {
	p.tokens32.WriteSyntaxTree(w, p.Buffer)
}

func (p *Engine) Execute() {
	buffer, _buffer, text, begin, end := p.Buffer, p.buffer, "", 0, 0
	for _, token := range p.Tokens() {
		switch token.pegRule {

		case ruleAction0:
			p.AddWarn(YearCharWarn)

		}
	}
	_, _, _, _, _ = buffer, _buffer, text, begin, end
}

func Pretty(pretty bool) func(*Engine) error {
	return func(p *Engine) error {
		p.Pretty = pretty
		return nil
	}
}

func Size(size int) func(*Engine) error {
	return func(p *Engine) error {
		p.tokens32 = tokens32{tree: make([]token32, 0, size)}
		return nil
	}
}
func (p *Engine) Init(options ...func(*Engine) error) error {
	var (
		max                  token32
		position, tokenIndex uint32
		buffer               []rune
	)
	for _, option := range options {
		err := option(p)
		if err != nil {
			return err
		}
	}
	p.reset = func() {
		max = token32{}
		position, tokenIndex = 0, 0

		p.buffer = []rune(p.Buffer)
		if len(p.buffer) == 0 || p.buffer[len(p.buffer)-1] != endSymbol {
			p.buffer = append(p.buffer, endSymbol)
		}
		buffer = p.buffer
	}
	p.reset()

	_rules := p.rules
	tree := p.tokens32
	p.parse = func(rule ...int) error {
		r := 1
		if len(rule) > 0 {
			r = rule[0]
		}
		matches := p.rules[r]()
		p.tokens32 = tree
		if matches {
			p.Trim(tokenIndex)
			return nil
		}
		return &parseError{p, max}
	}

	add := func(rule pegRule, begin uint32) {
		tree.Add(rule, begin, position, tokenIndex)
		tokenIndex++
		if begin != position && position > max.end {
			max = token32{rule, begin, position}
		}
	}

	matchDot := func() bool {
		if buffer[position] != endSymbol {
			position++
			return true
		}
		return false
	}

	/*matchChar := func(c byte) bool {
		if buffer[position] == c {
			position++
			return true
		}
		return false
	}*/

	/*matchRange := func(lower byte, upper byte) bool {
		if c := buffer[position]; c >= lower && c <= upper {
			position++
			return true
		}
		return false
	}*/

	_rules = [...]func() bool{
		nil,
		/* 0 SciName <- <(_? Name Tail !.)> */
		func() bool {
			position0, tokenIndex0 := position, tokenIndex
			{
				position1 := position
				{
					position2, tokenIndex2 := position, tokenIndex
					if !_rules[rule_]() {
						goto l2
					}
					goto l3
				l2:
					position, tokenIndex = position2, tokenIndex2
				}
			l3:
				if !_rules[ruleName]() {
					goto l0
				}
				if !_rules[ruleTail]() {
					goto l0
				}
				{
					position4, tokenIndex4 := position, tokenIndex
					if !matchDot() {
						goto l4
					}
					goto l0
				l4:
					position, tokenIndex = position4, tokenIndex4
				}
				add(ruleSciName, position1)
			}
			return true
		l0:
			position, tokenIndex = position0, tokenIndex0
			return false
		},
		/* 1 Tail <- <((_ / ';' / ',') .*)?> */
		func() bool {
			{
				position6 := position
				{
					position7, tokenIndex7 := position, tokenIndex
					{
						position9, tokenIndex9 := position, tokenIndex
						if !_rules[rule_]() {
							goto l10
						}
						goto l9
					l10:
						position, tokenIndex = position9, tokenIndex9
						if buffer[position] != rune(';') {
							goto l11
						}
						position++
						goto l9
					l11:
						position, tokenIndex = position9, tokenIndex9
						if buffer[position] != rune(',') {
							goto l7
						}
						position++
					}
				l9:
				l12:
					{
						position13, tokenIndex13 := position, tokenIndex
						if !matchDot() {
							goto l13
						}
						goto l12
					l13:
						position, tokenIndex = position13, tokenIndex13
					}
					goto l8
				l7:
					position, tokenIndex = position7, tokenIndex7
				}
			l8:
				add(ruleTail, position6)
			}
			return true
		},
		/* 2 Name <- <(NamedHybrid / HybridFormula / SingleName)> */
		func() bool {
			position14, tokenIndex14 := position, tokenIndex
			{
				position15 := position
				{
					position16, tokenIndex16 := position, tokenIndex
					if !_rules[ruleNamedHybrid]() {
						goto l17
					}
					goto l16
				l17:
					position, tokenIndex = position16, tokenIndex16
					if !_rules[ruleHybridFormula]() {
						goto l18
					}
					goto l16
				l18:
					position, tokenIndex = position16, tokenIndex16
					if !_rules[ruleSingleName]() {
						goto l14
					}
				}
			l16:
				add(ruleName, position15)
			}
			return true
		l14:
			position, tokenIndex = position14, tokenIndex14
			return false
		},
		/* 3 HybridFormula <- <(SingleName (_ (HybridFormulaPart / HybridFormulaFull))+)> */
		func() bool {
			position19, tokenIndex19 := position, tokenIndex
			{
				position20 := position
				if !_rules[ruleSingleName]() {
					goto l19
				}
				if !_rules[rule_]() {
					goto l19
				}
				{
					position23, tokenIndex23 := position, tokenIndex
					if !_rules[ruleHybridFormulaPart]() {
						goto l24
					}
					goto l23
				l24:
					position, tokenIndex = position23, tokenIndex23
					if !_rules[ruleHybridFormulaFull]() {
						goto l19
					}
				}
			l23:
			l21:
				{
					position22, tokenIndex22 := position, tokenIndex
					if !_rules[rule_]() {
						goto l22
					}
					{
						position25, tokenIndex25 := position, tokenIndex
						if !_rules[ruleHybridFormulaPart]() {
							goto l26
						}
						goto l25
					l26:
						position, tokenIndex = position25, tokenIndex25
						if !_rules[ruleHybridFormulaFull]() {
							goto l22
						}
					}
				l25:
					goto l21
				l22:
					position, tokenIndex = position22, tokenIndex22
				}
				add(ruleHybridFormula, position20)
			}
			return true
		l19:
			position, tokenIndex = position19, tokenIndex19
			return false
		},
		/* 4 HybridFormulaFull <- <(HybridChar (_ SingleName)?)> */
		func() bool {
			position27, tokenIndex27 := position, tokenIndex
			{
				position28 := position
				if !_rules[ruleHybridChar]() {
					goto l27
				}
				{
					position29, tokenIndex29 := position, tokenIndex
					if !_rules[rule_]() {
						goto l29
					}
					if !_rules[ruleSingleName]() {
						goto l29
					}
					goto l30
				l29:
					position, tokenIndex = position29, tokenIndex29
				}
			l30:
				add(ruleHybridFormulaFull, position28)
			}
			return true
		l27:
			position, tokenIndex = position27, tokenIndex27
			return false
		},
		/* 5 HybridFormulaPart <- <(HybridChar _ SpeciesEpithet (_ InfraspGroup)?)> */
		func() bool {
			position31, tokenIndex31 := position, tokenIndex
			{
				position32 := position
				if !_rules[ruleHybridChar]() {
					goto l31
				}
				if !_rules[rule_]() {
					goto l31
				}
				if !_rules[ruleSpeciesEpithet]() {
					goto l31
				}
				{
					position33, tokenIndex33 := position, tokenIndex
					if !_rules[rule_]() {
						goto l33
					}
					if !_rules[ruleInfraspGroup]() {
						goto l33
					}
					goto l34
				l33:
					position, tokenIndex = position33, tokenIndex33
				}
			l34:
				add(ruleHybridFormulaPart, position32)
			}
			return true
		l31:
			position, tokenIndex = position31, tokenIndex31
			return false
		},
		/* 6 NamedHybrid <- <(NamedGenusHybrid / NamedSpeciesHybrid)> */
		func() bool {
			position35, tokenIndex35 := position, tokenIndex
			{
				position36 := position
				{
					position37, tokenIndex37 := position, tokenIndex
					if !_rules[ruleNamedGenusHybrid]() {
						goto l38
					}
					goto l37
				l38:
					position, tokenIndex = position37, tokenIndex37
					if !_rules[ruleNamedSpeciesHybrid]() {
						goto l35
					}
				}
			l37:
				add(ruleNamedHybrid, position36)
			}
			return true
		l35:
			position, tokenIndex = position35, tokenIndex35
			return false
		},
		/* 7 NamedSpeciesHybrid <- <(GenusWord (_ SubGenus)? (_ Comparison)? _ HybridChar _? SpeciesEpithet (_ InfraspGroup)?)> */
		func() bool {
			position39, tokenIndex39 := position, tokenIndex
			{
				position40 := position
				if !_rules[ruleGenusWord]() {
					goto l39
				}
				{
					position41, tokenIndex41 := position, tokenIndex
					if !_rules[rule_]() {
						goto l41
					}
					if !_rules[ruleSubGenus]() {
						goto l41
					}
					goto l42
				l41:
					position, tokenIndex = position41, tokenIndex41
				}
			l42:
				{
					position43, tokenIndex43 := position, tokenIndex
					if !_rules[rule_]() {
						goto l43
					}
					if !_rules[ruleComparison]() {
						goto l43
					}
					goto l44
				l43:
					position, tokenIndex = position43, tokenIndex43
				}
			l44:
				if !_rules[rule_]() {
					goto l39
				}
				if !_rules[ruleHybridChar]() {
					goto l39
				}
				{
					position45, tokenIndex45 := position, tokenIndex
					if !_rules[rule_]() {
						goto l45
					}
					goto l46
				l45:
					position, tokenIndex = position45, tokenIndex45
				}
			l46:
				if !_rules[ruleSpeciesEpithet]() {
					goto l39
				}
				{
					position47, tokenIndex47 := position, tokenIndex
					if !_rules[rule_]() {
						goto l47
					}
					if !_rules[ruleInfraspGroup]() {
						goto l47
					}
					goto l48
				l47:
					position, tokenIndex = position47, tokenIndex47
				}
			l48:
				add(ruleNamedSpeciesHybrid, position40)
			}
			return true
		l39:
			position, tokenIndex = position39, tokenIndex39
			return false
		},
		/* 8 NamedGenusHybrid <- <(HybridChar _? SingleName)> */
		func() bool {
			position49, tokenIndex49 := position, tokenIndex
			{
				position50 := position
				if !_rules[ruleHybridChar]() {
					goto l49
				}
				{
					position51, tokenIndex51 := position, tokenIndex
					if !_rules[rule_]() {
						goto l51
					}
					goto l52
				l51:
					position, tokenIndex = position51, tokenIndex51
				}
			l52:
				if !_rules[ruleSingleName]() {
					goto l49
				}
				add(ruleNamedGenusHybrid, position50)
			}
			return true
		l49:
			position, tokenIndex = position49, tokenIndex49
			return false
		},
		/* 9 SingleName <- <(NameComp / NameApprox / NameSpecies / NameUninomial)> */
		func() bool {
			position53, tokenIndex53 := position, tokenIndex
			{
				position54 := position
				{
					position55, tokenIndex55 := position, tokenIndex
					if !_rules[ruleNameComp]() {
						goto l56
					}
					goto l55
				l56:
					position, tokenIndex = position55, tokenIndex55
					if !_rules[ruleNameApprox]() {
						goto l57
					}
					goto l55
				l57:
					position, tokenIndex = position55, tokenIndex55
					if !_rules[ruleNameSpecies]() {
						goto l58
					}
					goto l55
				l58:
					position, tokenIndex = position55, tokenIndex55
					if !_rules[ruleNameUninomial]() {
						goto l53
					}
				}
			l55:
				add(ruleSingleName, position54)
			}
			return true
		l53:
			position, tokenIndex = position53, tokenIndex53
			return false
		},
		/* 10 NameUninomial <- <(UninomialCombo / Uninomial)> */
		func() bool {
			position59, tokenIndex59 := position, tokenIndex
			{
				position60 := position
				{
					position61, tokenIndex61 := position, tokenIndex
					if !_rules[ruleUninomialCombo]() {
						goto l62
					}
					goto l61
				l62:
					position, tokenIndex = position61, tokenIndex61
					if !_rules[ruleUninomial]() {
						goto l59
					}
				}
			l61:
				add(ruleNameUninomial, position60)
			}
			return true
		l59:
			position, tokenIndex = position59, tokenIndex59
			return false
		},
		/* 11 NameApprox <- <(GenusWord (_ SpeciesEpithet)? _ Approximation ApproxNameIgnored)> */
		func() bool {
			position63, tokenIndex63 := position, tokenIndex
			{
				position64 := position
				if !_rules[ruleGenusWord]() {
					goto l63
				}
				{
					position65, tokenIndex65 := position, tokenIndex
					if !_rules[rule_]() {
						goto l65
					}
					if !_rules[ruleSpeciesEpithet]() {
						goto l65
					}
					goto l66
				l65:
					position, tokenIndex = position65, tokenIndex65
				}
			l66:
				if !_rules[rule_]() {
					goto l63
				}
				if !_rules[ruleApproximation]() {
					goto l63
				}
				if !_rules[ruleApproxNameIgnored]() {
					goto l63
				}
				add(ruleNameApprox, position64)
			}
			return true
		l63:
			position, tokenIndex = position63, tokenIndex63
			return false
		},
		/* 12 NameComp <- <(GenusWord _ Comparison (_ SpeciesEpithet)?)> */
		func() bool {
			position67, tokenIndex67 := position, tokenIndex
			{
				position68 := position
				if !_rules[ruleGenusWord]() {
					goto l67
				}
				if !_rules[rule_]() {
					goto l67
				}
				if !_rules[ruleComparison]() {
					goto l67
				}
				{
					position69, tokenIndex69 := position, tokenIndex
					if !_rules[rule_]() {
						goto l69
					}
					if !_rules[ruleSpeciesEpithet]() {
						goto l69
					}
					goto l70
				l69:
					position, tokenIndex = position69, tokenIndex69
				}
			l70:
				add(ruleNameComp, position68)
			}
			return true
		l67:
			position, tokenIndex = position67, tokenIndex67
			return false
		},
		/* 13 NameSpecies <- <(GenusWord (_? (SubGenus / SubGenusOrSuperspecies))? _ SpeciesEpithet (_ InfraspGroup)?)> */
		func() bool {
			position71, tokenIndex71 := position, tokenIndex
			{
				position72 := position
				if !_rules[ruleGenusWord]() {
					goto l71
				}
				{
					position73, tokenIndex73 := position, tokenIndex
					{
						position75, tokenIndex75 := position, tokenIndex
						if !_rules[rule_]() {
							goto l75
						}
						goto l76
					l75:
						position, tokenIndex = position75, tokenIndex75
					}
				l76:
					{
						position77, tokenIndex77 := position, tokenIndex
						if !_rules[ruleSubGenus]() {
							goto l78
						}
						goto l77
					l78:
						position, tokenIndex = position77, tokenIndex77
						if !_rules[ruleSubGenusOrSuperspecies]() {
							goto l73
						}
					}
				l77:
					goto l74
				l73:
					position, tokenIndex = position73, tokenIndex73
				}
			l74:
				if !_rules[rule_]() {
					goto l71
				}
				if !_rules[ruleSpeciesEpithet]() {
					goto l71
				}
				{
					position79, tokenIndex79 := position, tokenIndex
					if !_rules[rule_]() {
						goto l79
					}
					if !_rules[ruleInfraspGroup]() {
						goto l79
					}
					goto l80
				l79:
					position, tokenIndex = position79, tokenIndex79
				}
			l80:
				add(ruleNameSpecies, position72)
			}
			return true
		l71:
			position, tokenIndex = position71, tokenIndex71
			return false
		},
		/* 14 GenusWord <- <((AbbrGenus / UninomialWord) !(_ AuthorWord))> */
		func() bool {
			position81, tokenIndex81 := position, tokenIndex
			{
				position82 := position
				{
					position83, tokenIndex83 := position, tokenIndex
					if !_rules[ruleAbbrGenus]() {
						goto l84
					}
					goto l83
				l84:
					position, tokenIndex = position83, tokenIndex83
					if !_rules[ruleUninomialWord]() {
						goto l81
					}
				}
			l83:
				{
					position85, tokenIndex85 := position, tokenIndex
					if !_rules[rule_]() {
						goto l85
					}
					if !_rules[ruleAuthorWord]() {
						goto l85
					}
					goto l81
				l85:
					position, tokenIndex = position85, tokenIndex85
				}
				add(ruleGenusWord, position82)
			}
			return true
		l81:
			position, tokenIndex = position81, tokenIndex81
			return false
		},
		/* 15 InfraspGroup <- <(InfraspEpithet (_ InfraspEpithet)? (_ InfraspEpithet)?)> */
		func() bool {
			position86, tokenIndex86 := position, tokenIndex
			{
				position87 := position
				if !_rules[ruleInfraspEpithet]() {
					goto l86
				}
				{
					position88, tokenIndex88 := position, tokenIndex
					if !_rules[rule_]() {
						goto l88
					}
					if !_rules[ruleInfraspEpithet]() {
						goto l88
					}
					goto l89
				l88:
					position, tokenIndex = position88, tokenIndex88
				}
			l89:
				{
					position90, tokenIndex90 := position, tokenIndex
					if !_rules[rule_]() {
						goto l90
					}
					if !_rules[ruleInfraspEpithet]() {
						goto l90
					}
					goto l91
				l90:
					position, tokenIndex = position90, tokenIndex90
				}
			l91:
				add(ruleInfraspGroup, position87)
			}
			return true
		l86:
			position, tokenIndex = position86, tokenIndex86
			return false
		},
		/* 16 InfraspEpithet <- <((Rank _?)? !AuthorEx Word (_ Authorship)?)> */
		func() bool {
			position92, tokenIndex92 := position, tokenIndex
			{
				position93 := position
				{
					position94, tokenIndex94 := position, tokenIndex
					if !_rules[ruleRank]() {
						goto l94
					}
					{
						position96, tokenIndex96 := position, tokenIndex
						if !_rules[rule_]() {
							goto l96
						}
						goto l97
					l96:
						position, tokenIndex = position96, tokenIndex96
					}
				l97:
					goto l95
				l94:
					position, tokenIndex = position94, tokenIndex94
				}
			l95:
				{
					position98, tokenIndex98 := position, tokenIndex
					if !_rules[ruleAuthorEx]() {
						goto l98
					}
					goto l92
				l98:
					position, tokenIndex = position98, tokenIndex98
				}
				if !_rules[ruleWord]() {
					goto l92
				}
				{
					position99, tokenIndex99 := position, tokenIndex
					if !_rules[rule_]() {
						goto l99
					}
					if !_rules[ruleAuthorship]() {
						goto l99
					}
					goto l100
				l99:
					position, tokenIndex = position99, tokenIndex99
				}
			l100:
				add(ruleInfraspEpithet, position93)
			}
			return true
		l92:
			position, tokenIndex = position92, tokenIndex92
			return false
		},
		/* 17 SpeciesEpithet <- <(!AuthorEx Word (_? Authorship)?)> */
		func() bool {
			position101, tokenIndex101 := position, tokenIndex
			{
				position102 := position
				{
					position103, tokenIndex103 := position, tokenIndex
					if !_rules[ruleAuthorEx]() {
						goto l103
					}
					goto l101
				l103:
					position, tokenIndex = position103, tokenIndex103
				}
				if !_rules[ruleWord]() {
					goto l101
				}
				{
					position104, tokenIndex104 := position, tokenIndex
					{
						position106, tokenIndex106 := position, tokenIndex
						if !_rules[rule_]() {
							goto l106
						}
						goto l107
					l106:
						position, tokenIndex = position106, tokenIndex106
					}
				l107:
					if !_rules[ruleAuthorship]() {
						goto l104
					}
					goto l105
				l104:
					position, tokenIndex = position104, tokenIndex104
				}
			l105:
				add(ruleSpeciesEpithet, position102)
			}
			return true
		l101:
			position, tokenIndex = position101, tokenIndex101
			return false
		},
		/* 18 Comparison <- <('c' 'f' '.'?)> */
		func() bool {
			position108, tokenIndex108 := position, tokenIndex
			{
				position109 := position
				if buffer[position] != rune('c') {
					goto l108
				}
				position++
				if buffer[position] != rune('f') {
					goto l108
				}
				position++
				{
					position110, tokenIndex110 := position, tokenIndex
					if buffer[position] != rune('.') {
						goto l110
					}
					position++
					goto l111
				l110:
					position, tokenIndex = position110, tokenIndex110
				}
			l111:
				add(ruleComparison, position109)
			}
			return true
		l108:
			position, tokenIndex = position108, tokenIndex108
			return false
		},
		/* 19 Rank <- <((RankForma / RankVar / RankSsp / RankOther / RankOtherUncommon / RankAgamo / RankNotho) (_? LowerGreek ('.' / &SpaceCharEOI))?)> */
		func() bool {
			position112, tokenIndex112 := position, tokenIndex
			{
				position113 := position
				{
					position114, tokenIndex114 := position, tokenIndex
					if !_rules[ruleRankForma]() {
						goto l115
					}
					goto l114
				l115:
					position, tokenIndex = position114, tokenIndex114
					if !_rules[ruleRankVar]() {
						goto l116
					}
					goto l114
				l116:
					position, tokenIndex = position114, tokenIndex114
					if !_rules[ruleRankSsp]() {
						goto l117
					}
					goto l114
				l117:
					position, tokenIndex = position114, tokenIndex114
					if !_rules[ruleRankOther]() {
						goto l118
					}
					goto l114
				l118:
					position, tokenIndex = position114, tokenIndex114
					if !_rules[ruleRankOtherUncommon]() {
						goto l119
					}
					goto l114
				l119:
					position, tokenIndex = position114, tokenIndex114
					if !_rules[ruleRankAgamo]() {
						goto l120
					}
					goto l114
				l120:
					position, tokenIndex = position114, tokenIndex114
					if !_rules[ruleRankNotho]() {
						goto l112
					}
				}
			l114:
				{
					position121, tokenIndex121 := position, tokenIndex
					{
						position123, tokenIndex123 := position, tokenIndex
						if !_rules[rule_]() {
							goto l123
						}
						goto l124
					l123:
						position, tokenIndex = position123, tokenIndex123
					}
				l124:
					if !_rules[ruleLowerGreek]() {
						goto l121
					}
					{
						position125, tokenIndex125 := position, tokenIndex
						if buffer[position] != rune('.') {
							goto l126
						}
						position++
						goto l125
					l126:
						position, tokenIndex = position125, tokenIndex125
						{
							position127, tokenIndex127 := position, tokenIndex
							if !_rules[ruleSpaceCharEOI]() {
								goto l121
							}
							position, tokenIndex = position127, tokenIndex127
						}
					}
				l125:
					goto l122
				l121:
					position, tokenIndex = position121, tokenIndex121
				}
			l122:
				add(ruleRank, position113)
			}
			return true
		l112:
			position, tokenIndex = position112, tokenIndex112
			return false
		},
		/* 20 RankNotho <- <((('n' 'o' 't' 'h' 'o' (('v' 'a' 'r') / ('f' 'o') / 'f' / ('s' 'u' 'b' 's' 'p') / ('s' 's' 'p') / ('s' 'p') / ('m' 'o' 'r' 't' 'h') / ('s' 'u' 'p' 's' 'p') / ('s' 'u'))) / ('n' 'v' 'a' 'r')) ('.' / &SpaceCharEOI))> */
		func() bool {
			position128, tokenIndex128 := position, tokenIndex
			{
				position129 := position
				{
					position130, tokenIndex130 := position, tokenIndex
					if buffer[position] != rune('n') {
						goto l131
					}
					position++
					if buffer[position] != rune('o') {
						goto l131
					}
					position++
					if buffer[position] != rune('t') {
						goto l131
					}
					position++
					if buffer[position] != rune('h') {
						goto l131
					}
					position++
					if buffer[position] != rune('o') {
						goto l131
					}
					position++
					{
						position132, tokenIndex132 := position, tokenIndex
						if buffer[position] != rune('v') {
							goto l133
						}
						position++
						if buffer[position] != rune('a') {
							goto l133
						}
						position++
						if buffer[position] != rune('r') {
							goto l133
						}
						position++
						goto l132
					l133:
						position, tokenIndex = position132, tokenIndex132
						if buffer[position] != rune('f') {
							goto l134
						}
						position++
						if buffer[position] != rune('o') {
							goto l134
						}
						position++
						goto l132
					l134:
						position, tokenIndex = position132, tokenIndex132
						if buffer[position] != rune('f') {
							goto l135
						}
						position++
						goto l132
					l135:
						position, tokenIndex = position132, tokenIndex132
						if buffer[position] != rune('s') {
							goto l136
						}
						position++
						if buffer[position] != rune('u') {
							goto l136
						}
						position++
						if buffer[position] != rune('b') {
							goto l136
						}
						position++
						if buffer[position] != rune('s') {
							goto l136
						}
						position++
						if buffer[position] != rune('p') {
							goto l136
						}
						position++
						goto l132
					l136:
						position, tokenIndex = position132, tokenIndex132
						if buffer[position] != rune('s') {
							goto l137
						}
						position++
						if buffer[position] != rune('s') {
							goto l137
						}
						position++
						if buffer[position] != rune('p') {
							goto l137
						}
						position++
						goto l132
					l137:
						position, tokenIndex = position132, tokenIndex132
						if buffer[position] != rune('s') {
							goto l138
						}
						position++
						if buffer[position] != rune('p') {
							goto l138
						}
						position++
						goto l132
					l138:
						position, tokenIndex = position132, tokenIndex132
						if buffer[position] != rune('m') {
							goto l139
						}
						position++
						if buffer[position] != rune('o') {
							goto l139
						}
						position++
						if buffer[position] != rune('r') {
							goto l139
						}
						position++
						if buffer[position] != rune('t') {
							goto l139
						}
						position++
						if buffer[position] != rune('h') {
							goto l139
						}
						position++
						goto l132
					l139:
						position, tokenIndex = position132, tokenIndex132
						if buffer[position] != rune('s') {
							goto l140
						}
						position++
						if buffer[position] != rune('u') {
							goto l140
						}
						position++
						if buffer[position] != rune('p') {
							goto l140
						}
						position++
						if buffer[position] != rune('s') {
							goto l140
						}
						position++
						if buffer[position] != rune('p') {
							goto l140
						}
						position++
						goto l132
					l140:
						position, tokenIndex = position132, tokenIndex132
						if buffer[position] != rune('s') {
							goto l131
						}
						position++
						if buffer[position] != rune('u') {
							goto l131
						}
						position++
					}
				l132:
					goto l130
				l131:
					position, tokenIndex = position130, tokenIndex130
					if buffer[position] != rune('n') {
						goto l128
					}
					position++
					if buffer[position] != rune('v') {
						goto l128
					}
					position++
					if buffer[position] != rune('a') {
						goto l128
					}
					position++
					if buffer[position] != rune('r') {
						goto l128
					}
					position++
				}
			l130:
				{
					position141, tokenIndex141 := position, tokenIndex
					if buffer[position] != rune('.') {
						goto l142
					}
					position++
					goto l141
				l142:
					position, tokenIndex = position141, tokenIndex141
					{
						position143, tokenIndex143 := position, tokenIndex
						if !_rules[ruleSpaceCharEOI]() {
							goto l128
						}
						position, tokenIndex = position143, tokenIndex143
					}
				}
			l141:
				add(ruleRankNotho, position129)
			}
			return true
		l128:
			position, tokenIndex = position128, tokenIndex128
			return false
		},
		/* 21 RankOtherUncommon <- <(('*' / ('n' 'a' 't' 'i' 'o') / ('n' 'a' 't' '.') / ('n' 'a' 't') / ('f' '.' 's' 'p') / 'α' / ('β' 'β') / 'β' / 'γ' / 'δ' / 'ε' / 'φ' / 'θ' / 'μ' / ('a' '.') / ('b' '.') / ('c' '.') / ('d' '.') / ('e' '.') / ('g' '.') / ('k' '.') / ('m' 'u' 't' '.')) &SpaceCharEOI)> */
		func() bool {
			position144, tokenIndex144 := position, tokenIndex
			{
				position145 := position
				{
					position146, tokenIndex146 := position, tokenIndex
					if buffer[position] != rune('*') {
						goto l147
					}
					position++
					goto l146
				l147:
					position, tokenIndex = position146, tokenIndex146
					if buffer[position] != rune('n') {
						goto l148
					}
					position++
					if buffer[position] != rune('a') {
						goto l148
					}
					position++
					if buffer[position] != rune('t') {
						goto l148
					}
					position++
					if buffer[position] != rune('i') {
						goto l148
					}
					position++
					if buffer[position] != rune('o') {
						goto l148
					}
					position++
					goto l146
				l148:
					position, tokenIndex = position146, tokenIndex146
					if buffer[position] != rune('n') {
						goto l149
					}
					position++
					if buffer[position] != rune('a') {
						goto l149
					}
					position++
					if buffer[position] != rune('t') {
						goto l149
					}
					position++
					if buffer[position] != rune('.') {
						goto l149
					}
					position++
					goto l146
				l149:
					position, tokenIndex = position146, tokenIndex146
					if buffer[position] != rune('n') {
						goto l150
					}
					position++
					if buffer[position] != rune('a') {
						goto l150
					}
					position++
					if buffer[position] != rune('t') {
						goto l150
					}
					position++
					goto l146
				l150:
					position, tokenIndex = position146, tokenIndex146
					if buffer[position] != rune('f') {
						goto l151
					}
					position++
					if buffer[position] != rune('.') {
						goto l151
					}
					position++
					if buffer[position] != rune('s') {
						goto l151
					}
					position++
					if buffer[position] != rune('p') {
						goto l151
					}
					position++
					goto l146
				l151:
					position, tokenIndex = position146, tokenIndex146
					if buffer[position] != rune('α') {
						goto l152
					}
					position++
					goto l146
				l152:
					position, tokenIndex = position146, tokenIndex146
					if buffer[position] != rune('β') {
						goto l153
					}
					position++
					if buffer[position] != rune('β') {
						goto l153
					}
					position++
					goto l146
				l153:
					position, tokenIndex = position146, tokenIndex146
					if buffer[position] != rune('β') {
						goto l154
					}
					position++
					goto l146
				l154:
					position, tokenIndex = position146, tokenIndex146
					if buffer[position] != rune('γ') {
						goto l155
					}
					position++
					goto l146
				l155:
					position, tokenIndex = position146, tokenIndex146
					if buffer[position] != rune('δ') {
						goto l156
					}
					position++
					goto l146
				l156:
					position, tokenIndex = position146, tokenIndex146
					if buffer[position] != rune('ε') {
						goto l157
					}
					position++
					goto l146
				l157:
					position, tokenIndex = position146, tokenIndex146
					if buffer[position] != rune('φ') {
						goto l158
					}
					position++
					goto l146
				l158:
					position, tokenIndex = position146, tokenIndex146
					if buffer[position] != rune('θ') {
						goto l159
					}
					position++
					goto l146
				l159:
					position, tokenIndex = position146, tokenIndex146
					if buffer[position] != rune('μ') {
						goto l160
					}
					position++
					goto l146
				l160:
					position, tokenIndex = position146, tokenIndex146
					if buffer[position] != rune('a') {
						goto l161
					}
					position++
					if buffer[position] != rune('.') {
						goto l161
					}
					position++
					goto l146
				l161:
					position, tokenIndex = position146, tokenIndex146
					if buffer[position] != rune('b') {
						goto l162
					}
					position++
					if buffer[position] != rune('.') {
						goto l162
					}
					position++
					goto l146
				l162:
					position, tokenIndex = position146, tokenIndex146
					if buffer[position] != rune('c') {
						goto l163
					}
					position++
					if buffer[position] != rune('.') {
						goto l163
					}
					position++
					goto l146
				l163:
					position, tokenIndex = position146, tokenIndex146
					if buffer[position] != rune('d') {
						goto l164
					}
					position++
					if buffer[position] != rune('.') {
						goto l164
					}
					position++
					goto l146
				l164:
					position, tokenIndex = position146, tokenIndex146
					if buffer[position] != rune('e') {
						goto l165
					}
					position++
					if buffer[position] != rune('.') {
						goto l165
					}
					position++
					goto l146
				l165:
					position, tokenIndex = position146, tokenIndex146
					if buffer[position] != rune('g') {
						goto l166
					}
					position++
					if buffer[position] != rune('.') {
						goto l166
					}
					position++
					goto l146
				l166:
					position, tokenIndex = position146, tokenIndex146
					if buffer[position] != rune('k') {
						goto l167
					}
					position++
					if buffer[position] != rune('.') {
						goto l167
					}
					position++
					goto l146
				l167:
					position, tokenIndex = position146, tokenIndex146
					if buffer[position] != rune('m') {
						goto l144
					}
					position++
					if buffer[position] != rune('u') {
						goto l144
					}
					position++
					if buffer[position] != rune('t') {
						goto l144
					}
					position++
					if buffer[position] != rune('.') {
						goto l144
					}
					position++
				}
			l146:
				{
					position168, tokenIndex168 := position, tokenIndex
					if !_rules[ruleSpaceCharEOI]() {
						goto l144
					}
					position, tokenIndex = position168, tokenIndex168
				}
				add(ruleRankOtherUncommon, position145)
			}
			return true
		l144:
			position, tokenIndex = position144, tokenIndex144
			return false
		},
		/* 22 RankOther <- <((('m' 'o' 'r' 'p' 'h') / ('c' 'o' 'n' 'v' 'a' 'r') / ('p' 's' 'e' 'u' 'd' 'o' 'v' 'a' 'r') / ('s' 'e' 'c' 't') / ('s' 'e' 'r') / ('s' 'u' 'b' 'v' 'a' 'r') / ('s' 'u' 'b' 'f') / ('r' 'a' 'c' 'e') / ('p' 'v') / ('p' 'a' 't' 'h' 'o' 'v' 'a' 'r') / ('a' 'b' '.' (_? ('n' '.'))?) / ('s' 't')) ('.' / &SpaceCharEOI))> */
		func() bool {
			position169, tokenIndex169 := position, tokenIndex
			{
				position170 := position
				{
					position171, tokenIndex171 := position, tokenIndex
					if buffer[position] != rune('m') {
						goto l172
					}
					position++
					if buffer[position] != rune('o') {
						goto l172
					}
					position++
					if buffer[position] != rune('r') {
						goto l172
					}
					position++
					if buffer[position] != rune('p') {
						goto l172
					}
					position++
					if buffer[position] != rune('h') {
						goto l172
					}
					position++
					goto l171
				l172:
					position, tokenIndex = position171, tokenIndex171
					if buffer[position] != rune('c') {
						goto l173
					}
					position++
					if buffer[position] != rune('o') {
						goto l173
					}
					position++
					if buffer[position] != rune('n') {
						goto l173
					}
					position++
					if buffer[position] != rune('v') {
						goto l173
					}
					position++
					if buffer[position] != rune('a') {
						goto l173
					}
					position++
					if buffer[position] != rune('r') {
						goto l173
					}
					position++
					goto l171
				l173:
					position, tokenIndex = position171, tokenIndex171
					if buffer[position] != rune('p') {
						goto l174
					}
					position++
					if buffer[position] != rune('s') {
						goto l174
					}
					position++
					if buffer[position] != rune('e') {
						goto l174
					}
					position++
					if buffer[position] != rune('u') {
						goto l174
					}
					position++
					if buffer[position] != rune('d') {
						goto l174
					}
					position++
					if buffer[position] != rune('o') {
						goto l174
					}
					position++
					if buffer[position] != rune('v') {
						goto l174
					}
					position++
					if buffer[position] != rune('a') {
						goto l174
					}
					position++
					if buffer[position] != rune('r') {
						goto l174
					}
					position++
					goto l171
				l174:
					position, tokenIndex = position171, tokenIndex171
					if buffer[position] != rune('s') {
						goto l175
					}
					position++
					if buffer[position] != rune('e') {
						goto l175
					}
					position++
					if buffer[position] != rune('c') {
						goto l175
					}
					position++
					if buffer[position] != rune('t') {
						goto l175
					}
					position++
					goto l171
				l175:
					position, tokenIndex = position171, tokenIndex171
					if buffer[position] != rune('s') {
						goto l176
					}
					position++
					if buffer[position] != rune('e') {
						goto l176
					}
					position++
					if buffer[position] != rune('r') {
						goto l176
					}
					position++
					goto l171
				l176:
					position, tokenIndex = position171, tokenIndex171
					if buffer[position] != rune('s') {
						goto l177
					}
					position++
					if buffer[position] != rune('u') {
						goto l177
					}
					position++
					if buffer[position] != rune('b') {
						goto l177
					}
					position++
					if buffer[position] != rune('v') {
						goto l177
					}
					position++
					if buffer[position] != rune('a') {
						goto l177
					}
					position++
					if buffer[position] != rune('r') {
						goto l177
					}
					position++
					goto l171
				l177:
					position, tokenIndex = position171, tokenIndex171
					if buffer[position] != rune('s') {
						goto l178
					}
					position++
					if buffer[position] != rune('u') {
						goto l178
					}
					position++
					if buffer[position] != rune('b') {
						goto l178
					}
					position++
					if buffer[position] != rune('f') {
						goto l178
					}
					position++
					goto l171
				l178:
					position, tokenIndex = position171, tokenIndex171
					if buffer[position] != rune('r') {
						goto l179
					}
					position++
					if buffer[position] != rune('a') {
						goto l179
					}
					position++
					if buffer[position] != rune('c') {
						goto l179
					}
					position++
					if buffer[position] != rune('e') {
						goto l179
					}
					position++
					goto l171
				l179:
					position, tokenIndex = position171, tokenIndex171
					if buffer[position] != rune('p') {
						goto l180
					}
					position++
					if buffer[position] != rune('v') {
						goto l180
					}
					position++
					goto l171
				l180:
					position, tokenIndex = position171, tokenIndex171
					if buffer[position] != rune('p') {
						goto l181
					}
					position++
					if buffer[position] != rune('a') {
						goto l181
					}
					position++
					if buffer[position] != rune('t') {
						goto l181
					}
					position++
					if buffer[position] != rune('h') {
						goto l181
					}
					position++
					if buffer[position] != rune('o') {
						goto l181
					}
					position++
					if buffer[position] != rune('v') {
						goto l181
					}
					position++
					if buffer[position] != rune('a') {
						goto l181
					}
					position++
					if buffer[position] != rune('r') {
						goto l181
					}
					position++
					goto l171
				l181:
					position, tokenIndex = position171, tokenIndex171
					if buffer[position] != rune('a') {
						goto l182
					}
					position++
					if buffer[position] != rune('b') {
						goto l182
					}
					position++
					if buffer[position] != rune('.') {
						goto l182
					}
					position++
					{
						position183, tokenIndex183 := position, tokenIndex
						{
							position185, tokenIndex185 := position, tokenIndex
							if !_rules[rule_]() {
								goto l185
							}
							goto l186
						l185:
							position, tokenIndex = position185, tokenIndex185
						}
					l186:
						if buffer[position] != rune('n') {
							goto l183
						}
						position++
						if buffer[position] != rune('.') {
							goto l183
						}
						position++
						goto l184
					l183:
						position, tokenIndex = position183, tokenIndex183
					}
				l184:
					goto l171
				l182:
					position, tokenIndex = position171, tokenIndex171
					if buffer[position] != rune('s') {
						goto l169
					}
					position++
					if buffer[position] != rune('t') {
						goto l169
					}
					position++
				}
			l171:
				{
					position187, tokenIndex187 := position, tokenIndex
					if buffer[position] != rune('.') {
						goto l188
					}
					position++
					goto l187
				l188:
					position, tokenIndex = position187, tokenIndex187
					{
						position189, tokenIndex189 := position, tokenIndex
						if !_rules[ruleSpaceCharEOI]() {
							goto l169
						}
						position, tokenIndex = position189, tokenIndex189
					}
				}
			l187:
				add(ruleRankOther, position170)
			}
			return true
		l169:
			position, tokenIndex = position169, tokenIndex169
			return false
		},
		/* 23 RankVar <- <((('v' 'a' 'r' 'i' 'e' 't' 'y') / ('[' 'v' 'a' 'r' '.' ']') / ('v' 'a' 'r')) ('.' / &SpaceCharEOI))> */
		func() bool {
			position190, tokenIndex190 := position, tokenIndex
			{
				position191 := position
				{
					position192, tokenIndex192 := position, tokenIndex
					if buffer[position] != rune('v') {
						goto l193
					}
					position++
					if buffer[position] != rune('a') {
						goto l193
					}
					position++
					if buffer[position] != rune('r') {
						goto l193
					}
					position++
					if buffer[position] != rune('i') {
						goto l193
					}
					position++
					if buffer[position] != rune('e') {
						goto l193
					}
					position++
					if buffer[position] != rune('t') {
						goto l193
					}
					position++
					if buffer[position] != rune('y') {
						goto l193
					}
					position++
					goto l192
				l193:
					position, tokenIndex = position192, tokenIndex192
					if buffer[position] != rune('[') {
						goto l194
					}
					position++
					if buffer[position] != rune('v') {
						goto l194
					}
					position++
					if buffer[position] != rune('a') {
						goto l194
					}
					position++
					if buffer[position] != rune('r') {
						goto l194
					}
					position++
					if buffer[position] != rune('.') {
						goto l194
					}
					position++
					if buffer[position] != rune(']') {
						goto l194
					}
					position++
					goto l192
				l194:
					position, tokenIndex = position192, tokenIndex192
					if buffer[position] != rune('v') {
						goto l190
					}
					position++
					if buffer[position] != rune('a') {
						goto l190
					}
					position++
					if buffer[position] != rune('r') {
						goto l190
					}
					position++
				}
			l192:
				{
					position195, tokenIndex195 := position, tokenIndex
					if buffer[position] != rune('.') {
						goto l196
					}
					position++
					goto l195
				l196:
					position, tokenIndex = position195, tokenIndex195
					{
						position197, tokenIndex197 := position, tokenIndex
						if !_rules[ruleSpaceCharEOI]() {
							goto l190
						}
						position, tokenIndex = position197, tokenIndex197
					}
				}
			l195:
				add(ruleRankVar, position191)
			}
			return true
		l190:
			position, tokenIndex = position190, tokenIndex190
			return false
		},
		/* 24 RankForma <- <((('f' 'o' 'r' 'm' 'a') / ('f' 'm' 'a') / ('f' 'o' 'r' 'm') / ('f' 'o') / 'f') ('.' / &SpaceCharEOI))> */
		func() bool {
			position198, tokenIndex198 := position, tokenIndex
			{
				position199 := position
				{
					position200, tokenIndex200 := position, tokenIndex
					if buffer[position] != rune('f') {
						goto l201
					}
					position++
					if buffer[position] != rune('o') {
						goto l201
					}
					position++
					if buffer[position] != rune('r') {
						goto l201
					}
					position++
					if buffer[position] != rune('m') {
						goto l201
					}
					position++
					if buffer[position] != rune('a') {
						goto l201
					}
					position++
					goto l200
				l201:
					position, tokenIndex = position200, tokenIndex200
					if buffer[position] != rune('f') {
						goto l202
					}
					position++
					if buffer[position] != rune('m') {
						goto l202
					}
					position++
					if buffer[position] != rune('a') {
						goto l202
					}
					position++
					goto l200
				l202:
					position, tokenIndex = position200, tokenIndex200
					if buffer[position] != rune('f') {
						goto l203
					}
					position++
					if buffer[position] != rune('o') {
						goto l203
					}
					position++
					if buffer[position] != rune('r') {
						goto l203
					}
					position++
					if buffer[position] != rune('m') {
						goto l203
					}
					position++
					goto l200
				l203:
					position, tokenIndex = position200, tokenIndex200
					if buffer[position] != rune('f') {
						goto l204
					}
					position++
					if buffer[position] != rune('o') {
						goto l204
					}
					position++
					goto l200
				l204:
					position, tokenIndex = position200, tokenIndex200
					if buffer[position] != rune('f') {
						goto l198
					}
					position++
				}
			l200:
				{
					position205, tokenIndex205 := position, tokenIndex
					if buffer[position] != rune('.') {
						goto l206
					}
					position++
					goto l205
				l206:
					position, tokenIndex = position205, tokenIndex205
					{
						position207, tokenIndex207 := position, tokenIndex
						if !_rules[ruleSpaceCharEOI]() {
							goto l198
						}
						position, tokenIndex = position207, tokenIndex207
					}
				}
			l205:
				add(ruleRankForma, position199)
			}
			return true
		l198:
			position, tokenIndex = position198, tokenIndex198
			return false
		},
		/* 25 RankSsp <- <((('s' 's' 'p') / ('s' 'u' 'b' 's' 'p' 'e' 'c') / ('s' 'u' 'b' 's' 'p')) ('.' / &SpaceCharEOI))> */
		func() bool {
			position208, tokenIndex208 := position, tokenIndex
			{
				position209 := position
				{
					position210, tokenIndex210 := position, tokenIndex
					if buffer[position] != rune('s') {
						goto l211
					}
					position++
					if buffer[position] != rune('s') {
						goto l211
					}
					position++
					if buffer[position] != rune('p') {
						goto l211
					}
					position++
					goto l210
				l211:
					position, tokenIndex = position210, tokenIndex210
					if buffer[position] != rune('s') {
						goto l212
					}
					position++
					if buffer[position] != rune('u') {
						goto l212
					}
					position++
					if buffer[position] != rune('b') {
						goto l212
					}
					position++
					if buffer[position] != rune('s') {
						goto l212
					}
					position++
					if buffer[position] != rune('p') {
						goto l212
					}
					position++
					if buffer[position] != rune('e') {
						goto l212
					}
					position++
					if buffer[position] != rune('c') {
						goto l212
					}
					position++
					goto l210
				l212:
					position, tokenIndex = position210, tokenIndex210
					if buffer[position] != rune('s') {
						goto l208
					}
					position++
					if buffer[position] != rune('u') {
						goto l208
					}
					position++
					if buffer[position] != rune('b') {
						goto l208
					}
					position++
					if buffer[position] != rune('s') {
						goto l208
					}
					position++
					if buffer[position] != rune('p') {
						goto l208
					}
					position++
				}
			l210:
				{
					position213, tokenIndex213 := position, tokenIndex
					if buffer[position] != rune('.') {
						goto l214
					}
					position++
					goto l213
				l214:
					position, tokenIndex = position213, tokenIndex213
					{
						position215, tokenIndex215 := position, tokenIndex
						if !_rules[ruleSpaceCharEOI]() {
							goto l208
						}
						position, tokenIndex = position215, tokenIndex215
					}
				}
			l213:
				add(ruleRankSsp, position209)
			}
			return true
		l208:
			position, tokenIndex = position208, tokenIndex208
			return false
		},
		/* 26 RankAgamo <- <((('a' 'g' 'a' 'm' 'o' 's' 'p') / ('a' 'g' 'a' 'm' 'o' 's' 's' 'p') / ('a' 'g' 'a' 'm' 'o' 'v' 'a' 'r')) ('.' / &SpaceCharEOI))> */
		func() bool {
			position216, tokenIndex216 := position, tokenIndex
			{
				position217 := position
				{
					position218, tokenIndex218 := position, tokenIndex
					if buffer[position] != rune('a') {
						goto l219
					}
					position++
					if buffer[position] != rune('g') {
						goto l219
					}
					position++
					if buffer[position] != rune('a') {
						goto l219
					}
					position++
					if buffer[position] != rune('m') {
						goto l219
					}
					position++
					if buffer[position] != rune('o') {
						goto l219
					}
					position++
					if buffer[position] != rune('s') {
						goto l219
					}
					position++
					if buffer[position] != rune('p') {
						goto l219
					}
					position++
					goto l218
				l219:
					position, tokenIndex = position218, tokenIndex218
					if buffer[position] != rune('a') {
						goto l220
					}
					position++
					if buffer[position] != rune('g') {
						goto l220
					}
					position++
					if buffer[position] != rune('a') {
						goto l220
					}
					position++
					if buffer[position] != rune('m') {
						goto l220
					}
					position++
					if buffer[position] != rune('o') {
						goto l220
					}
					position++
					if buffer[position] != rune('s') {
						goto l220
					}
					position++
					if buffer[position] != rune('s') {
						goto l220
					}
					position++
					if buffer[position] != rune('p') {
						goto l220
					}
					position++
					goto l218
				l220:
					position, tokenIndex = position218, tokenIndex218
					if buffer[position] != rune('a') {
						goto l216
					}
					position++
					if buffer[position] != rune('g') {
						goto l216
					}
					position++
					if buffer[position] != rune('a') {
						goto l216
					}
					position++
					if buffer[position] != rune('m') {
						goto l216
					}
					position++
					if buffer[position] != rune('o') {
						goto l216
					}
					position++
					if buffer[position] != rune('v') {
						goto l216
					}
					position++
					if buffer[position] != rune('a') {
						goto l216
					}
					position++
					if buffer[position] != rune('r') {
						goto l216
					}
					position++
				}
			l218:
				{
					position221, tokenIndex221 := position, tokenIndex
					if buffer[position] != rune('.') {
						goto l222
					}
					position++
					goto l221
				l222:
					position, tokenIndex = position221, tokenIndex221
					{
						position223, tokenIndex223 := position, tokenIndex
						if !_rules[ruleSpaceCharEOI]() {
							goto l216
						}
						position, tokenIndex = position223, tokenIndex223
					}
				}
			l221:
				add(ruleRankAgamo, position217)
			}
			return true
		l216:
			position, tokenIndex = position216, tokenIndex216
			return false
		},
		/* 27 SubGenusOrSuperspecies <- <('(' _? NameLowerChar+ _? ')')> */
		func() bool {
			position224, tokenIndex224 := position, tokenIndex
			{
				position225 := position
				if buffer[position] != rune('(') {
					goto l224
				}
				position++
				{
					position226, tokenIndex226 := position, tokenIndex
					if !_rules[rule_]() {
						goto l226
					}
					goto l227
				l226:
					position, tokenIndex = position226, tokenIndex226
				}
			l227:
				if !_rules[ruleNameLowerChar]() {
					goto l224
				}
			l228:
				{
					position229, tokenIndex229 := position, tokenIndex
					if !_rules[ruleNameLowerChar]() {
						goto l229
					}
					goto l228
				l229:
					position, tokenIndex = position229, tokenIndex229
				}
				{
					position230, tokenIndex230 := position, tokenIndex
					if !_rules[rule_]() {
						goto l230
					}
					goto l231
				l230:
					position, tokenIndex = position230, tokenIndex230
				}
			l231:
				if buffer[position] != rune(')') {
					goto l224
				}
				position++
				add(ruleSubGenusOrSuperspecies, position225)
			}
			return true
		l224:
			position, tokenIndex = position224, tokenIndex224
			return false
		},
		/* 28 SubGenus <- <('(' _? UninomialWord _? ')')> */
		func() bool {
			position232, tokenIndex232 := position, tokenIndex
			{
				position233 := position
				if buffer[position] != rune('(') {
					goto l232
				}
				position++
				{
					position234, tokenIndex234 := position, tokenIndex
					if !_rules[rule_]() {
						goto l234
					}
					goto l235
				l234:
					position, tokenIndex = position234, tokenIndex234
				}
			l235:
				if !_rules[ruleUninomialWord]() {
					goto l232
				}
				{
					position236, tokenIndex236 := position, tokenIndex
					if !_rules[rule_]() {
						goto l236
					}
					goto l237
				l236:
					position, tokenIndex = position236, tokenIndex236
				}
			l237:
				if buffer[position] != rune(')') {
					goto l232
				}
				position++
				add(ruleSubGenus, position233)
			}
			return true
		l232:
			position, tokenIndex = position232, tokenIndex232
			return false
		},
		/* 29 UninomialCombo <- <(UninomialCombo1 / UninomialCombo2)> */
		func() bool {
			position238, tokenIndex238 := position, tokenIndex
			{
				position239 := position
				{
					position240, tokenIndex240 := position, tokenIndex
					if !_rules[ruleUninomialCombo1]() {
						goto l241
					}
					goto l240
				l241:
					position, tokenIndex = position240, tokenIndex240
					if !_rules[ruleUninomialCombo2]() {
						goto l238
					}
				}
			l240:
				add(ruleUninomialCombo, position239)
			}
			return true
		l238:
			position, tokenIndex = position238, tokenIndex238
			return false
		},
		/* 30 UninomialCombo1 <- <(UninomialWord _? SubGenus (_? Authorship)?)> */
		func() bool {
			position242, tokenIndex242 := position, tokenIndex
			{
				position243 := position
				if !_rules[ruleUninomialWord]() {
					goto l242
				}
				{
					position244, tokenIndex244 := position, tokenIndex
					if !_rules[rule_]() {
						goto l244
					}
					goto l245
				l244:
					position, tokenIndex = position244, tokenIndex244
				}
			l245:
				if !_rules[ruleSubGenus]() {
					goto l242
				}
				{
					position246, tokenIndex246 := position, tokenIndex
					{
						position248, tokenIndex248 := position, tokenIndex
						if !_rules[rule_]() {
							goto l248
						}
						goto l249
					l248:
						position, tokenIndex = position248, tokenIndex248
					}
				l249:
					if !_rules[ruleAuthorship]() {
						goto l246
					}
					goto l247
				l246:
					position, tokenIndex = position246, tokenIndex246
				}
			l247:
				add(ruleUninomialCombo1, position243)
			}
			return true
		l242:
			position, tokenIndex = position242, tokenIndex242
			return false
		},
		/* 31 UninomialCombo2 <- <(Uninomial _ RankUninomial _ Uninomial)> */
		func() bool {
			position250, tokenIndex250 := position, tokenIndex
			{
				position251 := position
				if !_rules[ruleUninomial]() {
					goto l250
				}
				if !_rules[rule_]() {
					goto l250
				}
				if !_rules[ruleRankUninomial]() {
					goto l250
				}
				if !_rules[rule_]() {
					goto l250
				}
				if !_rules[ruleUninomial]() {
					goto l250
				}
				add(ruleUninomialCombo2, position251)
			}
			return true
		l250:
			position, tokenIndex = position250, tokenIndex250
			return false
		},
		/* 32 RankUninomial <- <(RankUninomialPlain / RankUninomialNotho)> */
		func() bool {
			position252, tokenIndex252 := position, tokenIndex
			{
				position253 := position
				{
					position254, tokenIndex254 := position, tokenIndex
					if !_rules[ruleRankUninomialPlain]() {
						goto l255
					}
					goto l254
				l255:
					position, tokenIndex = position254, tokenIndex254
					if !_rules[ruleRankUninomialNotho]() {
						goto l252
					}
				}
			l254:
				add(ruleRankUninomial, position253)
			}
			return true
		l252:
			position, tokenIndex = position252, tokenIndex252
			return false
		},
		/* 33 RankUninomialPlain <- <((('s' 'e' 'c' 't') / ('s' 'u' 'b' 's' 'e' 'c' 't') / ('t' 'r' 'i' 'b') / ('s' 'u' 'b' 't' 'r' 'i' 'b') / ('s' 'u' 'b' 's' 'e' 'r') / ('s' 'e' 'r') / ('s' 'u' 'b' 'g' 'e' 'n') / ('s' 'u' 'b' 'g') / ('f' 'a' 'm') / ('s' 'u' 'b' 'f' 'a' 'm') / ('s' 'u' 'p' 'e' 'r' 't' 'r' 'i' 'b')) ('.' / &SpaceCharEOI))> */
		func() bool {
			position256, tokenIndex256 := position, tokenIndex
			{
				position257 := position
				{
					position258, tokenIndex258 := position, tokenIndex
					if buffer[position] != rune('s') {
						goto l259
					}
					position++
					if buffer[position] != rune('e') {
						goto l259
					}
					position++
					if buffer[position] != rune('c') {
						goto l259
					}
					position++
					if buffer[position] != rune('t') {
						goto l259
					}
					position++
					goto l258
				l259:
					position, tokenIndex = position258, tokenIndex258
					if buffer[position] != rune('s') {
						goto l260
					}
					position++
					if buffer[position] != rune('u') {
						goto l260
					}
					position++
					if buffer[position] != rune('b') {
						goto l260
					}
					position++
					if buffer[position] != rune('s') {
						goto l260
					}
					position++
					if buffer[position] != rune('e') {
						goto l260
					}
					position++
					if buffer[position] != rune('c') {
						goto l260
					}
					position++
					if buffer[position] != rune('t') {
						goto l260
					}
					position++
					goto l258
				l260:
					position, tokenIndex = position258, tokenIndex258
					if buffer[position] != rune('t') {
						goto l261
					}
					position++
					if buffer[position] != rune('r') {
						goto l261
					}
					position++
					if buffer[position] != rune('i') {
						goto l261
					}
					position++
					if buffer[position] != rune('b') {
						goto l261
					}
					position++
					goto l258
				l261:
					position, tokenIndex = position258, tokenIndex258
					if buffer[position] != rune('s') {
						goto l262
					}
					position++
					if buffer[position] != rune('u') {
						goto l262
					}
					position++
					if buffer[position] != rune('b') {
						goto l262
					}
					position++
					if buffer[position] != rune('t') {
						goto l262
					}
					position++
					if buffer[position] != rune('r') {
						goto l262
					}
					position++
					if buffer[position] != rune('i') {
						goto l262
					}
					position++
					if buffer[position] != rune('b') {
						goto l262
					}
					position++
					goto l258
				l262:
					position, tokenIndex = position258, tokenIndex258
					if buffer[position] != rune('s') {
						goto l263
					}
					position++
					if buffer[position] != rune('u') {
						goto l263
					}
					position++
					if buffer[position] != rune('b') {
						goto l263
					}
					position++
					if buffer[position] != rune('s') {
						goto l263
					}
					position++
					if buffer[position] != rune('e') {
						goto l263
					}
					position++
					if buffer[position] != rune('r') {
						goto l263
					}
					position++
					goto l258
				l263:
					position, tokenIndex = position258, tokenIndex258
					if buffer[position] != rune('s') {
						goto l264
					}
					position++
					if buffer[position] != rune('e') {
						goto l264
					}
					position++
					if buffer[position] != rune('r') {
						goto l264
					}
					position++
					goto l258
				l264:
					position, tokenIndex = position258, tokenIndex258
					if buffer[position] != rune('s') {
						goto l265
					}
					position++
					if buffer[position] != rune('u') {
						goto l265
					}
					position++
					if buffer[position] != rune('b') {
						goto l265
					}
					position++
					if buffer[position] != rune('g') {
						goto l265
					}
					position++
					if buffer[position] != rune('e') {
						goto l265
					}
					position++
					if buffer[position] != rune('n') {
						goto l265
					}
					position++
					goto l258
				l265:
					position, tokenIndex = position258, tokenIndex258
					if buffer[position] != rune('s') {
						goto l266
					}
					position++
					if buffer[position] != rune('u') {
						goto l266
					}
					position++
					if buffer[position] != rune('b') {
						goto l266
					}
					position++
					if buffer[position] != rune('g') {
						goto l266
					}
					position++
					goto l258
				l266:
					position, tokenIndex = position258, tokenIndex258
					if buffer[position] != rune('f') {
						goto l267
					}
					position++
					if buffer[position] != rune('a') {
						goto l267
					}
					position++
					if buffer[position] != rune('m') {
						goto l267
					}
					position++
					goto l258
				l267:
					position, tokenIndex = position258, tokenIndex258
					if buffer[position] != rune('s') {
						goto l268
					}
					position++
					if buffer[position] != rune('u') {
						goto l268
					}
					position++
					if buffer[position] != rune('b') {
						goto l268
					}
					position++
					if buffer[position] != rune('f') {
						goto l268
					}
					position++
					if buffer[position] != rune('a') {
						goto l268
					}
					position++
					if buffer[position] != rune('m') {
						goto l268
					}
					position++
					goto l258
				l268:
					position, tokenIndex = position258, tokenIndex258
					if buffer[position] != rune('s') {
						goto l256
					}
					position++
					if buffer[position] != rune('u') {
						goto l256
					}
					position++
					if buffer[position] != rune('p') {
						goto l256
					}
					position++
					if buffer[position] != rune('e') {
						goto l256
					}
					position++
					if buffer[position] != rune('r') {
						goto l256
					}
					position++
					if buffer[position] != rune('t') {
						goto l256
					}
					position++
					if buffer[position] != rune('r') {
						goto l256
					}
					position++
					if buffer[position] != rune('i') {
						goto l256
					}
					position++
					if buffer[position] != rune('b') {
						goto l256
					}
					position++
				}
			l258:
				{
					position269, tokenIndex269 := position, tokenIndex
					if buffer[position] != rune('.') {
						goto l270
					}
					position++
					goto l269
				l270:
					position, tokenIndex = position269, tokenIndex269
					{
						position271, tokenIndex271 := position, tokenIndex
						if !_rules[ruleSpaceCharEOI]() {
							goto l256
						}
						position, tokenIndex = position271, tokenIndex271
					}
				}
			l269:
				add(ruleRankUninomialPlain, position257)
			}
			return true
		l256:
			position, tokenIndex = position256, tokenIndex256
			return false
		},
		/* 34 RankUninomialNotho <- <('n' 'o' 't' 'h' 'o' _? (('s' 'e' 'c' 't') / ('g' 'e' 'n') / ('s' 'e' 'r') / ('s' 'u' 'b' 'g' 'e' 'e' 'n') / ('s' 'u' 'b' 'g' 'e' 'n') / ('s' 'u' 'b' 'g') / ('s' 'u' 'b' 's' 'e' 'c' 't') / ('s' 'u' 'b' 't' 'r' 'i' 'b')) ('.' / &SpaceCharEOI))> */
		func() bool {
			position272, tokenIndex272 := position, tokenIndex
			{
				position273 := position
				if buffer[position] != rune('n') {
					goto l272
				}
				position++
				if buffer[position] != rune('o') {
					goto l272
				}
				position++
				if buffer[position] != rune('t') {
					goto l272
				}
				position++
				if buffer[position] != rune('h') {
					goto l272
				}
				position++
				if buffer[position] != rune('o') {
					goto l272
				}
				position++
				{
					position274, tokenIndex274 := position, tokenIndex
					if !_rules[rule_]() {
						goto l274
					}
					goto l275
				l274:
					position, tokenIndex = position274, tokenIndex274
				}
			l275:
				{
					position276, tokenIndex276 := position, tokenIndex
					if buffer[position] != rune('s') {
						goto l277
					}
					position++
					if buffer[position] != rune('e') {
						goto l277
					}
					position++
					if buffer[position] != rune('c') {
						goto l277
					}
					position++
					if buffer[position] != rune('t') {
						goto l277
					}
					position++
					goto l276
				l277:
					position, tokenIndex = position276, tokenIndex276
					if buffer[position] != rune('g') {
						goto l278
					}
					position++
					if buffer[position] != rune('e') {
						goto l278
					}
					position++
					if buffer[position] != rune('n') {
						goto l278
					}
					position++
					goto l276
				l278:
					position, tokenIndex = position276, tokenIndex276
					if buffer[position] != rune('s') {
						goto l279
					}
					position++
					if buffer[position] != rune('e') {
						goto l279
					}
					position++
					if buffer[position] != rune('r') {
						goto l279
					}
					position++
					goto l276
				l279:
					position, tokenIndex = position276, tokenIndex276
					if buffer[position] != rune('s') {
						goto l280
					}
					position++
					if buffer[position] != rune('u') {
						goto l280
					}
					position++
					if buffer[position] != rune('b') {
						goto l280
					}
					position++
					if buffer[position] != rune('g') {
						goto l280
					}
					position++
					if buffer[position] != rune('e') {
						goto l280
					}
					position++
					if buffer[position] != rune('e') {
						goto l280
					}
					position++
					if buffer[position] != rune('n') {
						goto l280
					}
					position++
					goto l276
				l280:
					position, tokenIndex = position276, tokenIndex276
					if buffer[position] != rune('s') {
						goto l281
					}
					position++
					if buffer[position] != rune('u') {
						goto l281
					}
					position++
					if buffer[position] != rune('b') {
						goto l281
					}
					position++
					if buffer[position] != rune('g') {
						goto l281
					}
					position++
					if buffer[position] != rune('e') {
						goto l281
					}
					position++
					if buffer[position] != rune('n') {
						goto l281
					}
					position++
					goto l276
				l281:
					position, tokenIndex = position276, tokenIndex276
					if buffer[position] != rune('s') {
						goto l282
					}
					position++
					if buffer[position] != rune('u') {
						goto l282
					}
					position++
					if buffer[position] != rune('b') {
						goto l282
					}
					position++
					if buffer[position] != rune('g') {
						goto l282
					}
					position++
					goto l276
				l282:
					position, tokenIndex = position276, tokenIndex276
					if buffer[position] != rune('s') {
						goto l283
					}
					position++
					if buffer[position] != rune('u') {
						goto l283
					}
					position++
					if buffer[position] != rune('b') {
						goto l283
					}
					position++
					if buffer[position] != rune('s') {
						goto l283
					}
					position++
					if buffer[position] != rune('e') {
						goto l283
					}
					position++
					if buffer[position] != rune('c') {
						goto l283
					}
					position++
					if buffer[position] != rune('t') {
						goto l283
					}
					position++
					goto l276
				l283:
					position, tokenIndex = position276, tokenIndex276
					if buffer[position] != rune('s') {
						goto l272
					}
					position++
					if buffer[position] != rune('u') {
						goto l272
					}
					position++
					if buffer[position] != rune('b') {
						goto l272
					}
					position++
					if buffer[position] != rune('t') {
						goto l272
					}
					position++
					if buffer[position] != rune('r') {
						goto l272
					}
					position++
					if buffer[position] != rune('i') {
						goto l272
					}
					position++
					if buffer[position] != rune('b') {
						goto l272
					}
					position++
				}
			l276:
				{
					position284, tokenIndex284 := position, tokenIndex
					if buffer[position] != rune('.') {
						goto l285
					}
					position++
					goto l284
				l285:
					position, tokenIndex = position284, tokenIndex284
					{
						position286, tokenIndex286 := position, tokenIndex
						if !_rules[ruleSpaceCharEOI]() {
							goto l272
						}
						position, tokenIndex = position286, tokenIndex286
					}
				}
			l284:
				add(ruleRankUninomialNotho, position273)
			}
			return true
		l272:
			position, tokenIndex = position272, tokenIndex272
			return false
		},
		/* 35 Uninomial <- <(UninomialWord (_ Authorship)?)> */
		func() bool {
			position287, tokenIndex287 := position, tokenIndex
			{
				position288 := position
				if !_rules[ruleUninomialWord]() {
					goto l287
				}
				{
					position289, tokenIndex289 := position, tokenIndex
					if !_rules[rule_]() {
						goto l289
					}
					if !_rules[ruleAuthorship]() {
						goto l289
					}
					goto l290
				l289:
					position, tokenIndex = position289, tokenIndex289
				}
			l290:
				add(ruleUninomial, position288)
			}
			return true
		l287:
			position, tokenIndex = position287, tokenIndex287
			return false
		},
		/* 36 UninomialWord <- <(CapWord / TwoLetterGenus)> */
		func() bool {
			position291, tokenIndex291 := position, tokenIndex
			{
				position292 := position
				{
					position293, tokenIndex293 := position, tokenIndex
					if !_rules[ruleCapWord]() {
						goto l294
					}
					goto l293
				l294:
					position, tokenIndex = position293, tokenIndex293
					if !_rules[ruleTwoLetterGenus]() {
						goto l291
					}
				}
			l293:
				add(ruleUninomialWord, position292)
			}
			return true
		l291:
			position, tokenIndex = position291, tokenIndex291
			return false
		},
		/* 37 AbbrGenus <- <(UpperChar LowerChar? '.')> */
		func() bool {
			position295, tokenIndex295 := position, tokenIndex
			{
				position296 := position
				if !_rules[ruleUpperChar]() {
					goto l295
				}
				{
					position297, tokenIndex297 := position, tokenIndex
					if !_rules[ruleLowerChar]() {
						goto l297
					}
					goto l298
				l297:
					position, tokenIndex = position297, tokenIndex297
				}
			l298:
				if buffer[position] != rune('.') {
					goto l295
				}
				position++
				add(ruleAbbrGenus, position296)
			}
			return true
		l295:
			position, tokenIndex = position295, tokenIndex295
			return false
		},
		/* 38 CapWord <- <(CapWordWithDash / CapWord1)> */
		func() bool {
			position299, tokenIndex299 := position, tokenIndex
			{
				position300 := position
				{
					position301, tokenIndex301 := position, tokenIndex
					if !_rules[ruleCapWordWithDash]() {
						goto l302
					}
					goto l301
				l302:
					position, tokenIndex = position301, tokenIndex301
					if !_rules[ruleCapWord1]() {
						goto l299
					}
				}
			l301:
				add(ruleCapWord, position300)
			}
			return true
		l299:
			position, tokenIndex = position299, tokenIndex299
			return false
		},
		/* 39 CapWord1 <- <(NameUpperChar NameLowerChar NameLowerChar+ '?'?)> */
		func() bool {
			position303, tokenIndex303 := position, tokenIndex
			{
				position304 := position
				if !_rules[ruleNameUpperChar]() {
					goto l303
				}
				if !_rules[ruleNameLowerChar]() {
					goto l303
				}
				if !_rules[ruleNameLowerChar]() {
					goto l303
				}
			l305:
				{
					position306, tokenIndex306 := position, tokenIndex
					if !_rules[ruleNameLowerChar]() {
						goto l306
					}
					goto l305
				l306:
					position, tokenIndex = position306, tokenIndex306
				}
				{
					position307, tokenIndex307 := position, tokenIndex
					if buffer[position] != rune('?') {
						goto l307
					}
					position++
					goto l308
				l307:
					position, tokenIndex = position307, tokenIndex307
				}
			l308:
				add(ruleCapWord1, position304)
			}
			return true
		l303:
			position, tokenIndex = position303, tokenIndex303
			return false
		},
		/* 40 CapWordWithDash <- <(CapWord1 Dash (UpperAfterDash / LowerAfterDash))> */
		func() bool {
			position309, tokenIndex309 := position, tokenIndex
			{
				position310 := position
				if !_rules[ruleCapWord1]() {
					goto l309
				}
				if !_rules[ruleDash]() {
					goto l309
				}
				{
					position311, tokenIndex311 := position, tokenIndex
					if !_rules[ruleUpperAfterDash]() {
						goto l312
					}
					goto l311
				l312:
					position, tokenIndex = position311, tokenIndex311
					if !_rules[ruleLowerAfterDash]() {
						goto l309
					}
				}
			l311:
				add(ruleCapWordWithDash, position310)
			}
			return true
		l309:
			position, tokenIndex = position309, tokenIndex309
			return false
		},
		/* 41 UpperAfterDash <- <CapWord1> */
		func() bool {
			position313, tokenIndex313 := position, tokenIndex
			{
				position314 := position
				if !_rules[ruleCapWord1]() {
					goto l313
				}
				add(ruleUpperAfterDash, position314)
			}
			return true
		l313:
			position, tokenIndex = position313, tokenIndex313
			return false
		},
		/* 42 LowerAfterDash <- <Word1> */
		func() bool {
			position315, tokenIndex315 := position, tokenIndex
			{
				position316 := position
				if !_rules[ruleWord1]() {
					goto l315
				}
				add(ruleLowerAfterDash, position316)
			}
			return true
		l315:
			position, tokenIndex = position315, tokenIndex315
			return false
		},
		/* 43 TwoLetterGenus <- <(('C' 'a') / ('E' 'a') / ('G' 'e') / ('I' 'a') / ('I' 'o') / ('I' 'x') / ('L' 'o') / ('O' 'a') / ('R' 'a') / ('T' 'y') / ('U' 'a') / ('A' 'a') / ('J' 'a') / ('Z' 'u') / ('L' 'a') / ('Q' 'u') / ('A' 's') / ('B' 'a'))> */
		func() bool {
			position317, tokenIndex317 := position, tokenIndex
			{
				position318 := position
				{
					position319, tokenIndex319 := position, tokenIndex
					if buffer[position] != rune('C') {
						goto l320
					}
					position++
					if buffer[position] != rune('a') {
						goto l320
					}
					position++
					goto l319
				l320:
					position, tokenIndex = position319, tokenIndex319
					if buffer[position] != rune('E') {
						goto l321
					}
					position++
					if buffer[position] != rune('a') {
						goto l321
					}
					position++
					goto l319
				l321:
					position, tokenIndex = position319, tokenIndex319
					if buffer[position] != rune('G') {
						goto l322
					}
					position++
					if buffer[position] != rune('e') {
						goto l322
					}
					position++
					goto l319
				l322:
					position, tokenIndex = position319, tokenIndex319
					if buffer[position] != rune('I') {
						goto l323
					}
					position++
					if buffer[position] != rune('a') {
						goto l323
					}
					position++
					goto l319
				l323:
					position, tokenIndex = position319, tokenIndex319
					if buffer[position] != rune('I') {
						goto l324
					}
					position++
					if buffer[position] != rune('o') {
						goto l324
					}
					position++
					goto l319
				l324:
					position, tokenIndex = position319, tokenIndex319
					if buffer[position] != rune('I') {
						goto l325
					}
					position++
					if buffer[position] != rune('x') {
						goto l325
					}
					position++
					goto l319
				l325:
					position, tokenIndex = position319, tokenIndex319
					if buffer[position] != rune('L') {
						goto l326
					}
					position++
					if buffer[position] != rune('o') {
						goto l326
					}
					position++
					goto l319
				l326:
					position, tokenIndex = position319, tokenIndex319
					if buffer[position] != rune('O') {
						goto l327
					}
					position++
					if buffer[position] != rune('a') {
						goto l327
					}
					position++
					goto l319
				l327:
					position, tokenIndex = position319, tokenIndex319
					if buffer[position] != rune('R') {
						goto l328
					}
					position++
					if buffer[position] != rune('a') {
						goto l328
					}
					position++
					goto l319
				l328:
					position, tokenIndex = position319, tokenIndex319
					if buffer[position] != rune('T') {
						goto l329
					}
					position++
					if buffer[position] != rune('y') {
						goto l329
					}
					position++
					goto l319
				l329:
					position, tokenIndex = position319, tokenIndex319
					if buffer[position] != rune('U') {
						goto l330
					}
					position++
					if buffer[position] != rune('a') {
						goto l330
					}
					position++
					goto l319
				l330:
					position, tokenIndex = position319, tokenIndex319
					if buffer[position] != rune('A') {
						goto l331
					}
					position++
					if buffer[position] != rune('a') {
						goto l331
					}
					position++
					goto l319
				l331:
					position, tokenIndex = position319, tokenIndex319
					if buffer[position] != rune('J') {
						goto l332
					}
					position++
					if buffer[position] != rune('a') {
						goto l332
					}
					position++
					goto l319
				l332:
					position, tokenIndex = position319, tokenIndex319
					if buffer[position] != rune('Z') {
						goto l333
					}
					position++
					if buffer[position] != rune('u') {
						goto l333
					}
					position++
					goto l319
				l333:
					position, tokenIndex = position319, tokenIndex319
					if buffer[position] != rune('L') {
						goto l334
					}
					position++
					if buffer[position] != rune('a') {
						goto l334
					}
					position++
					goto l319
				l334:
					position, tokenIndex = position319, tokenIndex319
					if buffer[position] != rune('Q') {
						goto l335
					}
					position++
					if buffer[position] != rune('u') {
						goto l335
					}
					position++
					goto l319
				l335:
					position, tokenIndex = position319, tokenIndex319
					if buffer[position] != rune('A') {
						goto l336
					}
					position++
					if buffer[position] != rune('s') {
						goto l336
					}
					position++
					goto l319
				l336:
					position, tokenIndex = position319, tokenIndex319
					if buffer[position] != rune('B') {
						goto l317
					}
					position++
					if buffer[position] != rune('a') {
						goto l317
					}
					position++
				}
			l319:
				add(ruleTwoLetterGenus, position318)
			}
			return true
		l317:
			position, tokenIndex = position317, tokenIndex317
			return false
		},
		/* 44 Word <- <(!((AuthorPrefix / RankUninomial / Approximation / Word4) SpaceCharEOI) (WordApostr / WordStartsWithDigit / MultiDashedWord / Word2 / Word1) &(SpaceCharEOI / '('))> */
		func() bool {
			position337, tokenIndex337 := position, tokenIndex
			{
				position338 := position
				{
					position339, tokenIndex339 := position, tokenIndex
					{
						position340, tokenIndex340 := position, tokenIndex
						if !_rules[ruleAuthorPrefix]() {
							goto l341
						}
						goto l340
					l341:
						position, tokenIndex = position340, tokenIndex340
						if !_rules[ruleRankUninomial]() {
							goto l342
						}
						goto l340
					l342:
						position, tokenIndex = position340, tokenIndex340
						if !_rules[ruleApproximation]() {
							goto l343
						}
						goto l340
					l343:
						position, tokenIndex = position340, tokenIndex340
						if !_rules[ruleWord4]() {
							goto l339
						}
					}
				l340:
					if !_rules[ruleSpaceCharEOI]() {
						goto l339
					}
					goto l337
				l339:
					position, tokenIndex = position339, tokenIndex339
				}
				{
					position344, tokenIndex344 := position, tokenIndex
					if !_rules[ruleWordApostr]() {
						goto l345
					}
					goto l344
				l345:
					position, tokenIndex = position344, tokenIndex344
					if !_rules[ruleWordStartsWithDigit]() {
						goto l346
					}
					goto l344
				l346:
					position, tokenIndex = position344, tokenIndex344
					if !_rules[ruleMultiDashedWord]() {
						goto l347
					}
					goto l344
				l347:
					position, tokenIndex = position344, tokenIndex344
					if !_rules[ruleWord2]() {
						goto l348
					}
					goto l344
				l348:
					position, tokenIndex = position344, tokenIndex344
					if !_rules[ruleWord1]() {
						goto l337
					}
				}
			l344:
				{
					position349, tokenIndex349 := position, tokenIndex
					{
						position350, tokenIndex350 := position, tokenIndex
						if !_rules[ruleSpaceCharEOI]() {
							goto l351
						}
						goto l350
					l351:
						position, tokenIndex = position350, tokenIndex350
						if buffer[position] != rune('(') {
							goto l337
						}
						position++
					}
				l350:
					position, tokenIndex = position349, tokenIndex349
				}
				add(ruleWord, position338)
			}
			return true
		l337:
			position, tokenIndex = position337, tokenIndex337
			return false
		},
		/* 45 Word1 <- <((LowerASCII Dash)? NameLowerChar NameLowerChar+)> */
		func() bool {
			position352, tokenIndex352 := position, tokenIndex
			{
				position353 := position
				{
					position354, tokenIndex354 := position, tokenIndex
					if !_rules[ruleLowerASCII]() {
						goto l354
					}
					if !_rules[ruleDash]() {
						goto l354
					}
					goto l355
				l354:
					position, tokenIndex = position354, tokenIndex354
				}
			l355:
				if !_rules[ruleNameLowerChar]() {
					goto l352
				}
				if !_rules[ruleNameLowerChar]() {
					goto l352
				}
			l356:
				{
					position357, tokenIndex357 := position, tokenIndex
					if !_rules[ruleNameLowerChar]() {
						goto l357
					}
					goto l356
				l357:
					position, tokenIndex = position357, tokenIndex357
				}
				add(ruleWord1, position353)
			}
			return true
		l352:
			position, tokenIndex = position352, tokenIndex352
			return false
		},
		/* 46 WordStartsWithDigit <- <(('1' / '2' / '3' / '4' / '5' / '6' / '7' / '8' / '9') Nums? ('.' / Dash)? NameLowerChar NameLowerChar NameLowerChar NameLowerChar+)> */
		func() bool {
			position358, tokenIndex358 := position, tokenIndex
			{
				position359 := position
				{
					position360, tokenIndex360 := position, tokenIndex
					if buffer[position] != rune('1') {
						goto l361
					}
					position++
					goto l360
				l361:
					position, tokenIndex = position360, tokenIndex360
					if buffer[position] != rune('2') {
						goto l362
					}
					position++
					goto l360
				l362:
					position, tokenIndex = position360, tokenIndex360
					if buffer[position] != rune('3') {
						goto l363
					}
					position++
					goto l360
				l363:
					position, tokenIndex = position360, tokenIndex360
					if buffer[position] != rune('4') {
						goto l364
					}
					position++
					goto l360
				l364:
					position, tokenIndex = position360, tokenIndex360
					if buffer[position] != rune('5') {
						goto l365
					}
					position++
					goto l360
				l365:
					position, tokenIndex = position360, tokenIndex360
					if buffer[position] != rune('6') {
						goto l366
					}
					position++
					goto l360
				l366:
					position, tokenIndex = position360, tokenIndex360
					if buffer[position] != rune('7') {
						goto l367
					}
					position++
					goto l360
				l367:
					position, tokenIndex = position360, tokenIndex360
					if buffer[position] != rune('8') {
						goto l368
					}
					position++
					goto l360
				l368:
					position, tokenIndex = position360, tokenIndex360
					if buffer[position] != rune('9') {
						goto l358
					}
					position++
				}
			l360:
				{
					position369, tokenIndex369 := position, tokenIndex
					if !_rules[ruleNums]() {
						goto l369
					}
					goto l370
				l369:
					position, tokenIndex = position369, tokenIndex369
				}
			l370:
				{
					position371, tokenIndex371 := position, tokenIndex
					{
						position373, tokenIndex373 := position, tokenIndex
						if buffer[position] != rune('.') {
							goto l374
						}
						position++
						goto l373
					l374:
						position, tokenIndex = position373, tokenIndex373
						if !_rules[ruleDash]() {
							goto l371
						}
					}
				l373:
					goto l372
				l371:
					position, tokenIndex = position371, tokenIndex371
				}
			l372:
				if !_rules[ruleNameLowerChar]() {
					goto l358
				}
				if !_rules[ruleNameLowerChar]() {
					goto l358
				}
				if !_rules[ruleNameLowerChar]() {
					goto l358
				}
				if !_rules[ruleNameLowerChar]() {
					goto l358
				}
			l375:
				{
					position376, tokenIndex376 := position, tokenIndex
					if !_rules[ruleNameLowerChar]() {
						goto l376
					}
					goto l375
				l376:
					position, tokenIndex = position376, tokenIndex376
				}
				add(ruleWordStartsWithDigit, position359)
			}
			return true
		l358:
			position, tokenIndex = position358, tokenIndex358
			return false
		},
		/* 47 Word2 <- <(NameLowerChar+ Dash? NameLowerChar+)> */
		func() bool {
			position377, tokenIndex377 := position, tokenIndex
			{
				position378 := position
				if !_rules[ruleNameLowerChar]() {
					goto l377
				}
			l379:
				{
					position380, tokenIndex380 := position, tokenIndex
					if !_rules[ruleNameLowerChar]() {
						goto l380
					}
					goto l379
				l380:
					position, tokenIndex = position380, tokenIndex380
				}
				{
					position381, tokenIndex381 := position, tokenIndex
					if !_rules[ruleDash]() {
						goto l381
					}
					goto l382
				l381:
					position, tokenIndex = position381, tokenIndex381
				}
			l382:
				if !_rules[ruleNameLowerChar]() {
					goto l377
				}
			l383:
				{
					position384, tokenIndex384 := position, tokenIndex
					if !_rules[ruleNameLowerChar]() {
						goto l384
					}
					goto l383
				l384:
					position, tokenIndex = position384, tokenIndex384
				}
				add(ruleWord2, position378)
			}
			return true
		l377:
			position, tokenIndex = position377, tokenIndex377
			return false
		},
		/* 48 WordApostr <- <(NameLowerChar NameLowerChar* Apostrophe Word1)> */
		func() bool {
			position385, tokenIndex385 := position, tokenIndex
			{
				position386 := position
				if !_rules[ruleNameLowerChar]() {
					goto l385
				}
			l387:
				{
					position388, tokenIndex388 := position, tokenIndex
					if !_rules[ruleNameLowerChar]() {
						goto l388
					}
					goto l387
				l388:
					position, tokenIndex = position388, tokenIndex388
				}
				if !_rules[ruleApostrophe]() {
					goto l385
				}
				if !_rules[ruleWord1]() {
					goto l385
				}
				add(ruleWordApostr, position386)
			}
			return true
		l385:
			position, tokenIndex = position385, tokenIndex385
			return false
		},
		/* 49 Word4 <- <(NameLowerChar+ '.' NameLowerChar)> */
		func() bool {
			position389, tokenIndex389 := position, tokenIndex
			{
				position390 := position
				if !_rules[ruleNameLowerChar]() {
					goto l389
				}
			l391:
				{
					position392, tokenIndex392 := position, tokenIndex
					if !_rules[ruleNameLowerChar]() {
						goto l392
					}
					goto l391
				l392:
					position, tokenIndex = position392, tokenIndex392
				}
				if buffer[position] != rune('.') {
					goto l389
				}
				position++
				if !_rules[ruleNameLowerChar]() {
					goto l389
				}
				add(ruleWord4, position390)
			}
			return true
		l389:
			position, tokenIndex = position389, tokenIndex389
			return false
		},
		/* 50 MultiDashedWord <- <(NameLowerChar+ Dash NameLowerChar+ Dash NameLowerChar+ (Dash NameLowerChar+)?)> */
		func() bool {
			position393, tokenIndex393 := position, tokenIndex
			{
				position394 := position
				if !_rules[ruleNameLowerChar]() {
					goto l393
				}
			l395:
				{
					position396, tokenIndex396 := position, tokenIndex
					if !_rules[ruleNameLowerChar]() {
						goto l396
					}
					goto l395
				l396:
					position, tokenIndex = position396, tokenIndex396
				}
				if !_rules[ruleDash]() {
					goto l393
				}
				if !_rules[ruleNameLowerChar]() {
					goto l393
				}
			l397:
				{
					position398, tokenIndex398 := position, tokenIndex
					if !_rules[ruleNameLowerChar]() {
						goto l398
					}
					goto l397
				l398:
					position, tokenIndex = position398, tokenIndex398
				}
				if !_rules[ruleDash]() {
					goto l393
				}
				if !_rules[ruleNameLowerChar]() {
					goto l393
				}
			l399:
				{
					position400, tokenIndex400 := position, tokenIndex
					if !_rules[ruleNameLowerChar]() {
						goto l400
					}
					goto l399
				l400:
					position, tokenIndex = position400, tokenIndex400
				}
				{
					position401, tokenIndex401 := position, tokenIndex
					if !_rules[ruleDash]() {
						goto l401
					}
					if !_rules[ruleNameLowerChar]() {
						goto l401
					}
				l403:
					{
						position404, tokenIndex404 := position, tokenIndex
						if !_rules[ruleNameLowerChar]() {
							goto l404
						}
						goto l403
					l404:
						position, tokenIndex = position404, tokenIndex404
					}
					goto l402
				l401:
					position, tokenIndex = position401, tokenIndex401
				}
			l402:
				add(ruleMultiDashedWord, position394)
			}
			return true
		l393:
			position, tokenIndex = position393, tokenIndex393
			return false
		},
		/* 51 HybridChar <- <'×'> */
		func() bool {
			position405, tokenIndex405 := position, tokenIndex
			{
				position406 := position
				if buffer[position] != rune('×') {
					goto l405
				}
				position++
				add(ruleHybridChar, position406)
			}
			return true
		l405:
			position, tokenIndex = position405, tokenIndex405
			return false
		},
		/* 52 ApproxNameIgnored <- <.*> */
		func() bool {
			{
				position408 := position
			l409:
				{
					position410, tokenIndex410 := position, tokenIndex
					if !matchDot() {
						goto l410
					}
					goto l409
				l410:
					position, tokenIndex = position410, tokenIndex410
				}
				add(ruleApproxNameIgnored, position408)
			}
			return true
		},
		/* 53 Approximation <- <(('s' 'p' '.' _? ('n' 'r' '.')) / ('s' 'p' '.' _? ('a' 'f' 'f' '.')) / ('m' 'o' 'n' 's' 't' '.') / '?' / ((('s' 'p' 'p') / ('n' 'r') / ('s' 'p') / ('a' 'f' 'f') / ('s' 'p' 'e' 'c' 'i' 'e' 's')) (&SpaceCharEOI / '.')))> */
		func() bool {
			position411, tokenIndex411 := position, tokenIndex
			{
				position412 := position
				{
					position413, tokenIndex413 := position, tokenIndex
					if buffer[position] != rune('s') {
						goto l414
					}
					position++
					if buffer[position] != rune('p') {
						goto l414
					}
					position++
					if buffer[position] != rune('.') {
						goto l414
					}
					position++
					{
						position415, tokenIndex415 := position, tokenIndex
						if !_rules[rule_]() {
							goto l415
						}
						goto l416
					l415:
						position, tokenIndex = position415, tokenIndex415
					}
				l416:
					if buffer[position] != rune('n') {
						goto l414
					}
					position++
					if buffer[position] != rune('r') {
						goto l414
					}
					position++
					if buffer[position] != rune('.') {
						goto l414
					}
					position++
					goto l413
				l414:
					position, tokenIndex = position413, tokenIndex413
					if buffer[position] != rune('s') {
						goto l417
					}
					position++
					if buffer[position] != rune('p') {
						goto l417
					}
					position++
					if buffer[position] != rune('.') {
						goto l417
					}
					position++
					{
						position418, tokenIndex418 := position, tokenIndex
						if !_rules[rule_]() {
							goto l418
						}
						goto l419
					l418:
						position, tokenIndex = position418, tokenIndex418
					}
				l419:
					if buffer[position] != rune('a') {
						goto l417
					}
					position++
					if buffer[position] != rune('f') {
						goto l417
					}
					position++
					if buffer[position] != rune('f') {
						goto l417
					}
					position++
					if buffer[position] != rune('.') {
						goto l417
					}
					position++
					goto l413
				l417:
					position, tokenIndex = position413, tokenIndex413
					if buffer[position] != rune('m') {
						goto l420
					}
					position++
					if buffer[position] != rune('o') {
						goto l420
					}
					position++
					if buffer[position] != rune('n') {
						goto l420
					}
					position++
					if buffer[position] != rune('s') {
						goto l420
					}
					position++
					if buffer[position] != rune('t') {
						goto l420
					}
					position++
					if buffer[position] != rune('.') {
						goto l420
					}
					position++
					goto l413
				l420:
					position, tokenIndex = position413, tokenIndex413
					if buffer[position] != rune('?') {
						goto l421
					}
					position++
					goto l413
				l421:
					position, tokenIndex = position413, tokenIndex413
					{
						position422, tokenIndex422 := position, tokenIndex
						if buffer[position] != rune('s') {
							goto l423
						}
						position++
						if buffer[position] != rune('p') {
							goto l423
						}
						position++
						if buffer[position] != rune('p') {
							goto l423
						}
						position++
						goto l422
					l423:
						position, tokenIndex = position422, tokenIndex422
						if buffer[position] != rune('n') {
							goto l424
						}
						position++
						if buffer[position] != rune('r') {
							goto l424
						}
						position++
						goto l422
					l424:
						position, tokenIndex = position422, tokenIndex422
						if buffer[position] != rune('s') {
							goto l425
						}
						position++
						if buffer[position] != rune('p') {
							goto l425
						}
						position++
						goto l422
					l425:
						position, tokenIndex = position422, tokenIndex422
						if buffer[position] != rune('a') {
							goto l426
						}
						position++
						if buffer[position] != rune('f') {
							goto l426
						}
						position++
						if buffer[position] != rune('f') {
							goto l426
						}
						position++
						goto l422
					l426:
						position, tokenIndex = position422, tokenIndex422
						if buffer[position] != rune('s') {
							goto l411
						}
						position++
						if buffer[position] != rune('p') {
							goto l411
						}
						position++
						if buffer[position] != rune('e') {
							goto l411
						}
						position++
						if buffer[position] != rune('c') {
							goto l411
						}
						position++
						if buffer[position] != rune('i') {
							goto l411
						}
						position++
						if buffer[position] != rune('e') {
							goto l411
						}
						position++
						if buffer[position] != rune('s') {
							goto l411
						}
						position++
					}
				l422:
					{
						position427, tokenIndex427 := position, tokenIndex
						{
							position429, tokenIndex429 := position, tokenIndex
							if !_rules[ruleSpaceCharEOI]() {
								goto l428
							}
							position, tokenIndex = position429, tokenIndex429
						}
						goto l427
					l428:
						position, tokenIndex = position427, tokenIndex427
						if buffer[position] != rune('.') {
							goto l411
						}
						position++
					}
				l427:
				}
			l413:
				add(ruleApproximation, position412)
			}
			return true
		l411:
			position, tokenIndex = position411, tokenIndex411
			return false
		},
		/* 54 Authorship <- <((AuthorshipCombo / OriginalAuthorship) &(SpaceCharEOI / ';' / ','))> */
		func() bool {
			position430, tokenIndex430 := position, tokenIndex
			{
				position431 := position
				{
					position432, tokenIndex432 := position, tokenIndex
					if !_rules[ruleAuthorshipCombo]() {
						goto l433
					}
					goto l432
				l433:
					position, tokenIndex = position432, tokenIndex432
					if !_rules[ruleOriginalAuthorship]() {
						goto l430
					}
				}
			l432:
				{
					position434, tokenIndex434 := position, tokenIndex
					{
						position435, tokenIndex435 := position, tokenIndex
						if !_rules[ruleSpaceCharEOI]() {
							goto l436
						}
						goto l435
					l436:
						position, tokenIndex = position435, tokenIndex435
						if buffer[position] != rune(';') {
							goto l437
						}
						position++
						goto l435
					l437:
						position, tokenIndex = position435, tokenIndex435
						if buffer[position] != rune(',') {
							goto l430
						}
						position++
					}
				l435:
					position, tokenIndex = position434, tokenIndex434
				}
				add(ruleAuthorship, position431)
			}
			return true
		l430:
			position, tokenIndex = position430, tokenIndex430
			return false
		},
		/* 55 AuthorshipCombo <- <(OriginalAuthorshipComb (_? CombinationAuthorship)?)> */
		func() bool {
			position438, tokenIndex438 := position, tokenIndex
			{
				position439 := position
				if !_rules[ruleOriginalAuthorshipComb]() {
					goto l438
				}
				{
					position440, tokenIndex440 := position, tokenIndex
					{
						position442, tokenIndex442 := position, tokenIndex
						if !_rules[rule_]() {
							goto l442
						}
						goto l443
					l442:
						position, tokenIndex = position442, tokenIndex442
					}
				l443:
					if !_rules[ruleCombinationAuthorship]() {
						goto l440
					}
					goto l441
				l440:
					position, tokenIndex = position440, tokenIndex440
				}
			l441:
				add(ruleAuthorshipCombo, position439)
			}
			return true
		l438:
			position, tokenIndex = position438, tokenIndex438
			return false
		},
		/* 56 OriginalAuthorship <- <AuthorsGroup> */
		func() bool {
			position444, tokenIndex444 := position, tokenIndex
			{
				position445 := position
				if !_rules[ruleAuthorsGroup]() {
					goto l444
				}
				add(ruleOriginalAuthorship, position445)
			}
			return true
		l444:
			position, tokenIndex = position444, tokenIndex444
			return false
		},
		/* 57 OriginalAuthorshipComb <- <(BasionymAuthorshipYearMisformed / BasionymAuthorship / BasionymAuthorshipMissingParens)> */
		func() bool {
			position446, tokenIndex446 := position, tokenIndex
			{
				position447 := position
				{
					position448, tokenIndex448 := position, tokenIndex
					if !_rules[ruleBasionymAuthorshipYearMisformed]() {
						goto l449
					}
					goto l448
				l449:
					position, tokenIndex = position448, tokenIndex448
					if !_rules[ruleBasionymAuthorship]() {
						goto l450
					}
					goto l448
				l450:
					position, tokenIndex = position448, tokenIndex448
					if !_rules[ruleBasionymAuthorshipMissingParens]() {
						goto l446
					}
				}
			l448:
				add(ruleOriginalAuthorshipComb, position447)
			}
			return true
		l446:
			position, tokenIndex = position446, tokenIndex446
			return false
		},
		/* 58 CombinationAuthorship <- <AuthorsGroup> */
		func() bool {
			position451, tokenIndex451 := position, tokenIndex
			{
				position452 := position
				if !_rules[ruleAuthorsGroup]() {
					goto l451
				}
				add(ruleCombinationAuthorship, position452)
			}
			return true
		l451:
			position, tokenIndex = position451, tokenIndex451
			return false
		},
		/* 59 BasionymAuthorshipMissingParens <- <(MissingParensStart / MissingParensEnd)> */
		func() bool {
			position453, tokenIndex453 := position, tokenIndex
			{
				position454 := position
				{
					position455, tokenIndex455 := position, tokenIndex
					if !_rules[ruleMissingParensStart]() {
						goto l456
					}
					goto l455
				l456:
					position, tokenIndex = position455, tokenIndex455
					if !_rules[ruleMissingParensEnd]() {
						goto l453
					}
				}
			l455:
				add(ruleBasionymAuthorshipMissingParens, position454)
			}
			return true
		l453:
			position, tokenIndex = position453, tokenIndex453
			return false
		},
		/* 60 MissingParensStart <- <('(' _? AuthorsGroup)> */
		func() bool {
			position457, tokenIndex457 := position, tokenIndex
			{
				position458 := position
				if buffer[position] != rune('(') {
					goto l457
				}
				position++
				{
					position459, tokenIndex459 := position, tokenIndex
					if !_rules[rule_]() {
						goto l459
					}
					goto l460
				l459:
					position, tokenIndex = position459, tokenIndex459
				}
			l460:
				if !_rules[ruleAuthorsGroup]() {
					goto l457
				}
				add(ruleMissingParensStart, position458)
			}
			return true
		l457:
			position, tokenIndex = position457, tokenIndex457
			return false
		},
		/* 61 MissingParensEnd <- <(AuthorsGroup _? ')')> */
		func() bool {
			position461, tokenIndex461 := position, tokenIndex
			{
				position462 := position
				if !_rules[ruleAuthorsGroup]() {
					goto l461
				}
				{
					position463, tokenIndex463 := position, tokenIndex
					if !_rules[rule_]() {
						goto l463
					}
					goto l464
				l463:
					position, tokenIndex = position463, tokenIndex463
				}
			l464:
				if buffer[position] != rune(')') {
					goto l461
				}
				position++
				add(ruleMissingParensEnd, position462)
			}
			return true
		l461:
			position, tokenIndex = position461, tokenIndex461
			return false
		},
		/* 62 BasionymAuthorshipYearMisformed <- <('(' _? AuthorsGroup _? ')' (_? ',')? _? Year)> */
		func() bool {
			position465, tokenIndex465 := position, tokenIndex
			{
				position466 := position
				if buffer[position] != rune('(') {
					goto l465
				}
				position++
				{
					position467, tokenIndex467 := position, tokenIndex
					if !_rules[rule_]() {
						goto l467
					}
					goto l468
				l467:
					position, tokenIndex = position467, tokenIndex467
				}
			l468:
				if !_rules[ruleAuthorsGroup]() {
					goto l465
				}
				{
					position469, tokenIndex469 := position, tokenIndex
					if !_rules[rule_]() {
						goto l469
					}
					goto l470
				l469:
					position, tokenIndex = position469, tokenIndex469
				}
			l470:
				if buffer[position] != rune(')') {
					goto l465
				}
				position++
				{
					position471, tokenIndex471 := position, tokenIndex
					{
						position473, tokenIndex473 := position, tokenIndex
						if !_rules[rule_]() {
							goto l473
						}
						goto l474
					l473:
						position, tokenIndex = position473, tokenIndex473
					}
				l474:
					if buffer[position] != rune(',') {
						goto l471
					}
					position++
					goto l472
				l471:
					position, tokenIndex = position471, tokenIndex471
				}
			l472:
				{
					position475, tokenIndex475 := position, tokenIndex
					if !_rules[rule_]() {
						goto l475
					}
					goto l476
				l475:
					position, tokenIndex = position475, tokenIndex475
				}
			l476:
				if !_rules[ruleYear]() {
					goto l465
				}
				add(ruleBasionymAuthorshipYearMisformed, position466)
			}
			return true
		l465:
			position, tokenIndex = position465, tokenIndex465
			return false
		},
		/* 63 BasionymAuthorship <- <(BasionymAuthorship1 / BasionymAuthorship2Parens)> */
		func() bool {
			position477, tokenIndex477 := position, tokenIndex
			{
				position478 := position
				{
					position479, tokenIndex479 := position, tokenIndex
					if !_rules[ruleBasionymAuthorship1]() {
						goto l480
					}
					goto l479
				l480:
					position, tokenIndex = position479, tokenIndex479
					if !_rules[ruleBasionymAuthorship2Parens]() {
						goto l477
					}
				}
			l479:
				add(ruleBasionymAuthorship, position478)
			}
			return true
		l477:
			position, tokenIndex = position477, tokenIndex477
			return false
		},
		/* 64 BasionymAuthorship1 <- <('(' _? AuthorsGroup _? ')')> */
		func() bool {
			position481, tokenIndex481 := position, tokenIndex
			{
				position482 := position
				if buffer[position] != rune('(') {
					goto l481
				}
				position++
				{
					position483, tokenIndex483 := position, tokenIndex
					if !_rules[rule_]() {
						goto l483
					}
					goto l484
				l483:
					position, tokenIndex = position483, tokenIndex483
				}
			l484:
				if !_rules[ruleAuthorsGroup]() {
					goto l481
				}
				{
					position485, tokenIndex485 := position, tokenIndex
					if !_rules[rule_]() {
						goto l485
					}
					goto l486
				l485:
					position, tokenIndex = position485, tokenIndex485
				}
			l486:
				if buffer[position] != rune(')') {
					goto l481
				}
				position++
				add(ruleBasionymAuthorship1, position482)
			}
			return true
		l481:
			position, tokenIndex = position481, tokenIndex481
			return false
		},
		/* 65 BasionymAuthorship2Parens <- <('(' _? '(' _? AuthorsGroup _? ')' _? ')')> */
		func() bool {
			position487, tokenIndex487 := position, tokenIndex
			{
				position488 := position
				if buffer[position] != rune('(') {
					goto l487
				}
				position++
				{
					position489, tokenIndex489 := position, tokenIndex
					if !_rules[rule_]() {
						goto l489
					}
					goto l490
				l489:
					position, tokenIndex = position489, tokenIndex489
				}
			l490:
				if buffer[position] != rune('(') {
					goto l487
				}
				position++
				{
					position491, tokenIndex491 := position, tokenIndex
					if !_rules[rule_]() {
						goto l491
					}
					goto l492
				l491:
					position, tokenIndex = position491, tokenIndex491
				}
			l492:
				if !_rules[ruleAuthorsGroup]() {
					goto l487
				}
				{
					position493, tokenIndex493 := position, tokenIndex
					if !_rules[rule_]() {
						goto l493
					}
					goto l494
				l493:
					position, tokenIndex = position493, tokenIndex493
				}
			l494:
				if buffer[position] != rune(')') {
					goto l487
				}
				position++
				{
					position495, tokenIndex495 := position, tokenIndex
					if !_rules[rule_]() {
						goto l495
					}
					goto l496
				l495:
					position, tokenIndex = position495, tokenIndex495
				}
			l496:
				if buffer[position] != rune(')') {
					goto l487
				}
				position++
				add(ruleBasionymAuthorship2Parens, position488)
			}
			return true
		l487:
			position, tokenIndex = position487, tokenIndex487
			return false
		},
		/* 66 AuthorsGroup <- <(AuthorsTeam (_ (AuthorEmend / AuthorEx) AuthorsTeam)?)> */
		func() bool {
			position497, tokenIndex497 := position, tokenIndex
			{
				position498 := position
				if !_rules[ruleAuthorsTeam]() {
					goto l497
				}
				{
					position499, tokenIndex499 := position, tokenIndex
					if !_rules[rule_]() {
						goto l499
					}
					{
						position501, tokenIndex501 := position, tokenIndex
						if !_rules[ruleAuthorEmend]() {
							goto l502
						}
						goto l501
					l502:
						position, tokenIndex = position501, tokenIndex501
						if !_rules[ruleAuthorEx]() {
							goto l499
						}
					}
				l501:
					if !_rules[ruleAuthorsTeam]() {
						goto l499
					}
					goto l500
				l499:
					position, tokenIndex = position499, tokenIndex499
				}
			l500:
				add(ruleAuthorsGroup, position498)
			}
			return true
		l497:
			position, tokenIndex = position497, tokenIndex497
			return false
		},
		/* 67 AuthorsTeam <- <(Author (AuthorSep Author)* (_? ','? _? Year)?)> */
		func() bool {
			position503, tokenIndex503 := position, tokenIndex
			{
				position504 := position
				if !_rules[ruleAuthor]() {
					goto l503
				}
			l505:
				{
					position506, tokenIndex506 := position, tokenIndex
					if !_rules[ruleAuthorSep]() {
						goto l506
					}
					if !_rules[ruleAuthor]() {
						goto l506
					}
					goto l505
				l506:
					position, tokenIndex = position506, tokenIndex506
				}
				{
					position507, tokenIndex507 := position, tokenIndex
					{
						position509, tokenIndex509 := position, tokenIndex
						if !_rules[rule_]() {
							goto l509
						}
						goto l510
					l509:
						position, tokenIndex = position509, tokenIndex509
					}
				l510:
					{
						position511, tokenIndex511 := position, tokenIndex
						if buffer[position] != rune(',') {
							goto l511
						}
						position++
						goto l512
					l511:
						position, tokenIndex = position511, tokenIndex511
					}
				l512:
					{
						position513, tokenIndex513 := position, tokenIndex
						if !_rules[rule_]() {
							goto l513
						}
						goto l514
					l513:
						position, tokenIndex = position513, tokenIndex513
					}
				l514:
					if !_rules[ruleYear]() {
						goto l507
					}
					goto l508
				l507:
					position, tokenIndex = position507, tokenIndex507
				}
			l508:
				add(ruleAuthorsTeam, position504)
			}
			return true
		l503:
			position, tokenIndex = position503, tokenIndex503
			return false
		},
		/* 68 AuthorSep <- <(AuthorSep1 / AuthorSep2)> */
		func() bool {
			position515, tokenIndex515 := position, tokenIndex
			{
				position516 := position
				{
					position517, tokenIndex517 := position, tokenIndex
					if !_rules[ruleAuthorSep1]() {
						goto l518
					}
					goto l517
				l518:
					position, tokenIndex = position517, tokenIndex517
					if !_rules[ruleAuthorSep2]() {
						goto l515
					}
				}
			l517:
				add(ruleAuthorSep, position516)
			}
			return true
		l515:
			position, tokenIndex = position515, tokenIndex515
			return false
		},
		/* 69 AuthorSep1 <- <(_? (',' _)? ('&' / ('e' 't') / ('a' 'n' 'd') / ('a' 'p' 'u' 'd')) _?)> */
		func() bool {
			position519, tokenIndex519 := position, tokenIndex
			{
				position520 := position
				{
					position521, tokenIndex521 := position, tokenIndex
					if !_rules[rule_]() {
						goto l521
					}
					goto l522
				l521:
					position, tokenIndex = position521, tokenIndex521
				}
			l522:
				{
					position523, tokenIndex523 := position, tokenIndex
					if buffer[position] != rune(',') {
						goto l523
					}
					position++
					if !_rules[rule_]() {
						goto l523
					}
					goto l524
				l523:
					position, tokenIndex = position523, tokenIndex523
				}
			l524:
				{
					position525, tokenIndex525 := position, tokenIndex
					if buffer[position] != rune('&') {
						goto l526
					}
					position++
					goto l525
				l526:
					position, tokenIndex = position525, tokenIndex525
					if buffer[position] != rune('e') {
						goto l527
					}
					position++
					if buffer[position] != rune('t') {
						goto l527
					}
					position++
					goto l525
				l527:
					position, tokenIndex = position525, tokenIndex525
					if buffer[position] != rune('a') {
						goto l528
					}
					position++
					if buffer[position] != rune('n') {
						goto l528
					}
					position++
					if buffer[position] != rune('d') {
						goto l528
					}
					position++
					goto l525
				l528:
					position, tokenIndex = position525, tokenIndex525
					if buffer[position] != rune('a') {
						goto l519
					}
					position++
					if buffer[position] != rune('p') {
						goto l519
					}
					position++
					if buffer[position] != rune('u') {
						goto l519
					}
					position++
					if buffer[position] != rune('d') {
						goto l519
					}
					position++
				}
			l525:
				{
					position529, tokenIndex529 := position, tokenIndex
					if !_rules[rule_]() {
						goto l529
					}
					goto l530
				l529:
					position, tokenIndex = position529, tokenIndex529
				}
			l530:
				add(ruleAuthorSep1, position520)
			}
			return true
		l519:
			position, tokenIndex = position519, tokenIndex519
			return false
		},
		/* 70 AuthorSep2 <- <(_? ',' _?)> */
		func() bool {
			position531, tokenIndex531 := position, tokenIndex
			{
				position532 := position
				{
					position533, tokenIndex533 := position, tokenIndex
					if !_rules[rule_]() {
						goto l533
					}
					goto l534
				l533:
					position, tokenIndex = position533, tokenIndex533
				}
			l534:
				if buffer[position] != rune(',') {
					goto l531
				}
				position++
				{
					position535, tokenIndex535 := position, tokenIndex
					if !_rules[rule_]() {
						goto l535
					}
					goto l536
				l535:
					position, tokenIndex = position535, tokenIndex535
				}
			l536:
				add(ruleAuthorSep2, position532)
			}
			return true
		l531:
			position, tokenIndex = position531, tokenIndex531
			return false
		},
		/* 71 AuthorEx <- <((('e' 'x' '.'?) / ('i' 'n')) _)> */
		func() bool {
			position537, tokenIndex537 := position, tokenIndex
			{
				position538 := position
				{
					position539, tokenIndex539 := position, tokenIndex
					if buffer[position] != rune('e') {
						goto l540
					}
					position++
					if buffer[position] != rune('x') {
						goto l540
					}
					position++
					{
						position541, tokenIndex541 := position, tokenIndex
						if buffer[position] != rune('.') {
							goto l541
						}
						position++
						goto l542
					l541:
						position, tokenIndex = position541, tokenIndex541
					}
				l542:
					goto l539
				l540:
					position, tokenIndex = position539, tokenIndex539
					if buffer[position] != rune('i') {
						goto l537
					}
					position++
					if buffer[position] != rune('n') {
						goto l537
					}
					position++
				}
			l539:
				if !_rules[rule_]() {
					goto l537
				}
				add(ruleAuthorEx, position538)
			}
			return true
		l537:
			position, tokenIndex = position537, tokenIndex537
			return false
		},
		/* 72 AuthorEmend <- <('e' 'm' 'e' 'n' 'd' '.'? _)> */
		func() bool {
			position543, tokenIndex543 := position, tokenIndex
			{
				position544 := position
				if buffer[position] != rune('e') {
					goto l543
				}
				position++
				if buffer[position] != rune('m') {
					goto l543
				}
				position++
				if buffer[position] != rune('e') {
					goto l543
				}
				position++
				if buffer[position] != rune('n') {
					goto l543
				}
				position++
				if buffer[position] != rune('d') {
					goto l543
				}
				position++
				{
					position545, tokenIndex545 := position, tokenIndex
					if buffer[position] != rune('.') {
						goto l545
					}
					position++
					goto l546
				l545:
					position, tokenIndex = position545, tokenIndex545
				}
			l546:
				if !_rules[rule_]() {
					goto l543
				}
				add(ruleAuthorEmend, position544)
			}
			return true
		l543:
			position, tokenIndex = position543, tokenIndex543
			return false
		},
		/* 73 Author <- <(Author1 / Author2 / UnknownAuthor)> */
		func() bool {
			position547, tokenIndex547 := position, tokenIndex
			{
				position548 := position
				{
					position549, tokenIndex549 := position, tokenIndex
					if !_rules[ruleAuthor1]() {
						goto l550
					}
					goto l549
				l550:
					position, tokenIndex = position549, tokenIndex549
					if !_rules[ruleAuthor2]() {
						goto l551
					}
					goto l549
				l551:
					position, tokenIndex = position549, tokenIndex549
					if !_rules[ruleUnknownAuthor]() {
						goto l547
					}
				}
			l549:
				add(ruleAuthor, position548)
			}
			return true
		l547:
			position, tokenIndex = position547, tokenIndex547
			return false
		},
		/* 74 Author1 <- <(Author2 _? (Filius / AuthorSuffix))> */
		func() bool {
			position552, tokenIndex552 := position, tokenIndex
			{
				position553 := position
				if !_rules[ruleAuthor2]() {
					goto l552
				}
				{
					position554, tokenIndex554 := position, tokenIndex
					if !_rules[rule_]() {
						goto l554
					}
					goto l555
				l554:
					position, tokenIndex = position554, tokenIndex554
				}
			l555:
				{
					position556, tokenIndex556 := position, tokenIndex
					if !_rules[ruleFilius]() {
						goto l557
					}
					goto l556
				l557:
					position, tokenIndex = position556, tokenIndex556
					if !_rules[ruleAuthorSuffix]() {
						goto l552
					}
				}
			l556:
				add(ruleAuthor1, position553)
			}
			return true
		l552:
			position, tokenIndex = position552, tokenIndex552
			return false
		},
		/* 75 Author2 <- <(AuthorWord (_? AuthorWord)*)> */
		func() bool {
			position558, tokenIndex558 := position, tokenIndex
			{
				position559 := position
				if !_rules[ruleAuthorWord]() {
					goto l558
				}
			l560:
				{
					position561, tokenIndex561 := position, tokenIndex
					{
						position562, tokenIndex562 := position, tokenIndex
						if !_rules[rule_]() {
							goto l562
						}
						goto l563
					l562:
						position, tokenIndex = position562, tokenIndex562
					}
				l563:
					if !_rules[ruleAuthorWord]() {
						goto l561
					}
					goto l560
				l561:
					position, tokenIndex = position561, tokenIndex561
				}
				add(ruleAuthor2, position559)
			}
			return true
		l558:
			position, tokenIndex = position558, tokenIndex558
			return false
		},
		/* 76 UnknownAuthor <- <('?' / ((('a' 'u' 'c' 't') / ('a' 'n' 'o' 'n')) (&SpaceCharEOI / '.')))> */
		func() bool {
			position564, tokenIndex564 := position, tokenIndex
			{
				position565 := position
				{
					position566, tokenIndex566 := position, tokenIndex
					if buffer[position] != rune('?') {
						goto l567
					}
					position++
					goto l566
				l567:
					position, tokenIndex = position566, tokenIndex566
					{
						position568, tokenIndex568 := position, tokenIndex
						if buffer[position] != rune('a') {
							goto l569
						}
						position++
						if buffer[position] != rune('u') {
							goto l569
						}
						position++
						if buffer[position] != rune('c') {
							goto l569
						}
						position++
						if buffer[position] != rune('t') {
							goto l569
						}
						position++
						goto l568
					l569:
						position, tokenIndex = position568, tokenIndex568
						if buffer[position] != rune('a') {
							goto l564
						}
						position++
						if buffer[position] != rune('n') {
							goto l564
						}
						position++
						if buffer[position] != rune('o') {
							goto l564
						}
						position++
						if buffer[position] != rune('n') {
							goto l564
						}
						position++
					}
				l568:
					{
						position570, tokenIndex570 := position, tokenIndex
						{
							position572, tokenIndex572 := position, tokenIndex
							if !_rules[ruleSpaceCharEOI]() {
								goto l571
							}
							position, tokenIndex = position572, tokenIndex572
						}
						goto l570
					l571:
						position, tokenIndex = position570, tokenIndex570
						if buffer[position] != rune('.') {
							goto l564
						}
						position++
					}
				l570:
				}
			l566:
				add(ruleUnknownAuthor, position565)
			}
			return true
		l564:
			position, tokenIndex = position564, tokenIndex564
			return false
		},
		/* 77 AuthorWord <- <(!(('b' / 'B') ('o' / 'O') ('l' / 'L') ('d' / 'D') ':') (AuthorEtAl / AuthorWord2 / AuthorWord3 / AuthorPrefix))> */
		func() bool {
			position573, tokenIndex573 := position, tokenIndex
			{
				position574 := position
				{
					position575, tokenIndex575 := position, tokenIndex
					{
						position576, tokenIndex576 := position, tokenIndex
						if buffer[position] != rune('b') {
							goto l577
						}
						position++
						goto l576
					l577:
						position, tokenIndex = position576, tokenIndex576
						if buffer[position] != rune('B') {
							goto l575
						}
						position++
					}
				l576:
					{
						position578, tokenIndex578 := position, tokenIndex
						if buffer[position] != rune('o') {
							goto l579
						}
						position++
						goto l578
					l579:
						position, tokenIndex = position578, tokenIndex578
						if buffer[position] != rune('O') {
							goto l575
						}
						position++
					}
				l578:
					{
						position580, tokenIndex580 := position, tokenIndex
						if buffer[position] != rune('l') {
							goto l581
						}
						position++
						goto l580
					l581:
						position, tokenIndex = position580, tokenIndex580
						if buffer[position] != rune('L') {
							goto l575
						}
						position++
					}
				l580:
					{
						position582, tokenIndex582 := position, tokenIndex
						if buffer[position] != rune('d') {
							goto l583
						}
						position++
						goto l582
					l583:
						position, tokenIndex = position582, tokenIndex582
						if buffer[position] != rune('D') {
							goto l575
						}
						position++
					}
				l582:
					if buffer[position] != rune(':') {
						goto l575
					}
					position++
					goto l573
				l575:
					position, tokenIndex = position575, tokenIndex575
				}
				{
					position584, tokenIndex584 := position, tokenIndex
					if !_rules[ruleAuthorEtAl]() {
						goto l585
					}
					goto l584
				l585:
					position, tokenIndex = position584, tokenIndex584
					if !_rules[ruleAuthorWord2]() {
						goto l586
					}
					goto l584
				l586:
					position, tokenIndex = position584, tokenIndex584
					if !_rules[ruleAuthorWord3]() {
						goto l587
					}
					goto l584
				l587:
					position, tokenIndex = position584, tokenIndex584
					if !_rules[ruleAuthorPrefix]() {
						goto l573
					}
				}
			l584:
				add(ruleAuthorWord, position574)
			}
			return true
		l573:
			position, tokenIndex = position573, tokenIndex573
			return false
		},
		/* 78 AuthorEtAl <- <(('a' 'r' 'g' '.') / ('e' 't' ' ' 'a' 'l' '.' '{' '?' '}') / ((('e' 't') / '&') (' ' 'a' 'l') '.'?))> */
		func() bool {
			position588, tokenIndex588 := position, tokenIndex
			{
				position589 := position
				{
					position590, tokenIndex590 := position, tokenIndex
					if buffer[position] != rune('a') {
						goto l591
					}
					position++
					if buffer[position] != rune('r') {
						goto l591
					}
					position++
					if buffer[position] != rune('g') {
						goto l591
					}
					position++
					if buffer[position] != rune('.') {
						goto l591
					}
					position++
					goto l590
				l591:
					position, tokenIndex = position590, tokenIndex590
					if buffer[position] != rune('e') {
						goto l592
					}
					position++
					if buffer[position] != rune('t') {
						goto l592
					}
					position++
					if buffer[position] != rune(' ') {
						goto l592
					}
					position++
					if buffer[position] != rune('a') {
						goto l592
					}
					position++
					if buffer[position] != rune('l') {
						goto l592
					}
					position++
					if buffer[position] != rune('.') {
						goto l592
					}
					position++
					if buffer[position] != rune('{') {
						goto l592
					}
					position++
					if buffer[position] != rune('?') {
						goto l592
					}
					position++
					if buffer[position] != rune('}') {
						goto l592
					}
					position++
					goto l590
				l592:
					position, tokenIndex = position590, tokenIndex590
					{
						position593, tokenIndex593 := position, tokenIndex
						if buffer[position] != rune('e') {
							goto l594
						}
						position++
						if buffer[position] != rune('t') {
							goto l594
						}
						position++
						goto l593
					l594:
						position, tokenIndex = position593, tokenIndex593
						if buffer[position] != rune('&') {
							goto l588
						}
						position++
					}
				l593:
					if buffer[position] != rune(' ') {
						goto l588
					}
					position++
					if buffer[position] != rune('a') {
						goto l588
					}
					position++
					if buffer[position] != rune('l') {
						goto l588
					}
					position++
					{
						position595, tokenIndex595 := position, tokenIndex
						if buffer[position] != rune('.') {
							goto l595
						}
						position++
						goto l596
					l595:
						position, tokenIndex = position595, tokenIndex595
					}
				l596:
				}
			l590:
				add(ruleAuthorEtAl, position589)
			}
			return true
		l588:
			position, tokenIndex = position588, tokenIndex588
			return false
		},
		/* 79 AuthorWord2 <- <(AuthorWord3 Dash AuthorWordSoft)> */
		func() bool {
			position597, tokenIndex597 := position, tokenIndex
			{
				position598 := position
				if !_rules[ruleAuthorWord3]() {
					goto l597
				}
				if !_rules[ruleDash]() {
					goto l597
				}
				if !_rules[ruleAuthorWordSoft]() {
					goto l597
				}
				add(ruleAuthorWord2, position598)
			}
			return true
		l597:
			position, tokenIndex = position597, tokenIndex597
			return false
		},
		/* 80 AuthorWord3 <- <(AuthorPrefixGlued? (AllCapsAuthorWord / CapAuthorWord) '.'?)> */
		func() bool {
			position599, tokenIndex599 := position, tokenIndex
			{
				position600 := position
				{
					position601, tokenIndex601 := position, tokenIndex
					if !_rules[ruleAuthorPrefixGlued]() {
						goto l601
					}
					goto l602
				l601:
					position, tokenIndex = position601, tokenIndex601
				}
			l602:
				{
					position603, tokenIndex603 := position, tokenIndex
					if !_rules[ruleAllCapsAuthorWord]() {
						goto l604
					}
					goto l603
				l604:
					position, tokenIndex = position603, tokenIndex603
					if !_rules[ruleCapAuthorWord]() {
						goto l599
					}
				}
			l603:
				{
					position605, tokenIndex605 := position, tokenIndex
					if buffer[position] != rune('.') {
						goto l605
					}
					position++
					goto l606
				l605:
					position, tokenIndex = position605, tokenIndex605
				}
			l606:
				add(ruleAuthorWord3, position600)
			}
			return true
		l599:
			position, tokenIndex = position599, tokenIndex599
			return false
		},
		/* 81 AuthorWordSoft <- <(((AuthorUpperChar (AuthorUpperChar+ / AuthorLowerChar+)) / AuthorLowerChar+) '.'?)> */
		func() bool {
			position607, tokenIndex607 := position, tokenIndex
			{
				position608 := position
				{
					position609, tokenIndex609 := position, tokenIndex
					if !_rules[ruleAuthorUpperChar]() {
						goto l610
					}
					{
						position611, tokenIndex611 := position, tokenIndex
						if !_rules[ruleAuthorUpperChar]() {
							goto l612
						}
					l613:
						{
							position614, tokenIndex614 := position, tokenIndex
							if !_rules[ruleAuthorUpperChar]() {
								goto l614
							}
							goto l613
						l614:
							position, tokenIndex = position614, tokenIndex614
						}
						goto l611
					l612:
						position, tokenIndex = position611, tokenIndex611
						if !_rules[ruleAuthorLowerChar]() {
							goto l610
						}
					l615:
						{
							position616, tokenIndex616 := position, tokenIndex
							if !_rules[ruleAuthorLowerChar]() {
								goto l616
							}
							goto l615
						l616:
							position, tokenIndex = position616, tokenIndex616
						}
					}
				l611:
					goto l609
				l610:
					position, tokenIndex = position609, tokenIndex609
					if !_rules[ruleAuthorLowerChar]() {
						goto l607
					}
				l617:
					{
						position618, tokenIndex618 := position, tokenIndex
						if !_rules[ruleAuthorLowerChar]() {
							goto l618
						}
						goto l617
					l618:
						position, tokenIndex = position618, tokenIndex618
					}
				}
			l609:
				{
					position619, tokenIndex619 := position, tokenIndex
					if buffer[position] != rune('.') {
						goto l619
					}
					position++
					goto l620
				l619:
					position, tokenIndex = position619, tokenIndex619
				}
			l620:
				add(ruleAuthorWordSoft, position608)
			}
			return true
		l607:
			position, tokenIndex = position607, tokenIndex607
			return false
		},
		/* 82 CapAuthorWord <- <(AuthorUpperChar AuthorLowerChar*)> */
		func() bool {
			position621, tokenIndex621 := position, tokenIndex
			{
				position622 := position
				if !_rules[ruleAuthorUpperChar]() {
					goto l621
				}
			l623:
				{
					position624, tokenIndex624 := position, tokenIndex
					if !_rules[ruleAuthorLowerChar]() {
						goto l624
					}
					goto l623
				l624:
					position, tokenIndex = position624, tokenIndex624
				}
				add(ruleCapAuthorWord, position622)
			}
			return true
		l621:
			position, tokenIndex = position621, tokenIndex621
			return false
		},
		/* 83 AllCapsAuthorWord <- <(AuthorUpperChar AuthorUpperChar+)> */
		func() bool {
			position625, tokenIndex625 := position, tokenIndex
			{
				position626 := position
				if !_rules[ruleAuthorUpperChar]() {
					goto l625
				}
				if !_rules[ruleAuthorUpperChar]() {
					goto l625
				}
			l627:
				{
					position628, tokenIndex628 := position, tokenIndex
					if !_rules[ruleAuthorUpperChar]() {
						goto l628
					}
					goto l627
				l628:
					position, tokenIndex = position628, tokenIndex628
				}
				add(ruleAllCapsAuthorWord, position626)
			}
			return true
		l625:
			position, tokenIndex = position625, tokenIndex625
			return false
		},
		/* 84 Filius <- <(('f' '.') / ('f' 'i' 'l' '.') / ('f' 'i' 'l' 'i' 'u' 's'))> */
		func() bool {
			position629, tokenIndex629 := position, tokenIndex
			{
				position630 := position
				{
					position631, tokenIndex631 := position, tokenIndex
					if buffer[position] != rune('f') {
						goto l632
					}
					position++
					if buffer[position] != rune('.') {
						goto l632
					}
					position++
					goto l631
				l632:
					position, tokenIndex = position631, tokenIndex631
					if buffer[position] != rune('f') {
						goto l633
					}
					position++
					if buffer[position] != rune('i') {
						goto l633
					}
					position++
					if buffer[position] != rune('l') {
						goto l633
					}
					position++
					if buffer[position] != rune('.') {
						goto l633
					}
					position++
					goto l631
				l633:
					position, tokenIndex = position631, tokenIndex631
					if buffer[position] != rune('f') {
						goto l629
					}
					position++
					if buffer[position] != rune('i') {
						goto l629
					}
					position++
					if buffer[position] != rune('l') {
						goto l629
					}
					position++
					if buffer[position] != rune('i') {
						goto l629
					}
					position++
					if buffer[position] != rune('u') {
						goto l629
					}
					position++
					if buffer[position] != rune('s') {
						goto l629
					}
					position++
				}
			l631:
				add(ruleFilius, position630)
			}
			return true
		l629:
			position, tokenIndex = position629, tokenIndex629
			return false
		},
		/* 85 AuthorSuffix <- <('b' 'i' 's')> */
		func() bool {
			position634, tokenIndex634 := position, tokenIndex
			{
				position635 := position
				if buffer[position] != rune('b') {
					goto l634
				}
				position++
				if buffer[position] != rune('i') {
					goto l634
				}
				position++
				if buffer[position] != rune('s') {
					goto l634
				}
				position++
				add(ruleAuthorSuffix, position635)
			}
			return true
		l634:
			position, tokenIndex = position634, tokenIndex634
			return false
		},
		/* 86 AuthorPrefixGlued <- <(('d' / 'O' / 'L' / ('M' 'c') / 'M') Apostrophe)> */
		func() bool {
			position636, tokenIndex636 := position, tokenIndex
			{
				position637 := position
				{
					position638, tokenIndex638 := position, tokenIndex
					if buffer[position] != rune('d') {
						goto l639
					}
					position++
					goto l638
				l639:
					position, tokenIndex = position638, tokenIndex638
					if buffer[position] != rune('O') {
						goto l640
					}
					position++
					goto l638
				l640:
					position, tokenIndex = position638, tokenIndex638
					if buffer[position] != rune('L') {
						goto l641
					}
					position++
					goto l638
				l641:
					position, tokenIndex = position638, tokenIndex638
					if buffer[position] != rune('M') {
						goto l642
					}
					position++
					if buffer[position] != rune('c') {
						goto l642
					}
					position++
					goto l638
				l642:
					position, tokenIndex = position638, tokenIndex638
					if buffer[position] != rune('M') {
						goto l636
					}
					position++
				}
			l638:
				if !_rules[ruleApostrophe]() {
					goto l636
				}
				add(ruleAuthorPrefixGlued, position637)
			}
			return true
		l636:
			position, tokenIndex = position636, tokenIndex636
			return false
		},
		/* 87 AuthorPrefix <- <(AuthorPrefix1 / AuthorPrefix2)> */
		func() bool {
			position643, tokenIndex643 := position, tokenIndex
			{
				position644 := position
				{
					position645, tokenIndex645 := position, tokenIndex
					if !_rules[ruleAuthorPrefix1]() {
						goto l646
					}
					goto l645
				l646:
					position, tokenIndex = position645, tokenIndex645
					if !_rules[ruleAuthorPrefix2]() {
						goto l643
					}
				}
			l645:
				add(ruleAuthorPrefix, position644)
			}
			return true
		l643:
			position, tokenIndex = position643, tokenIndex643
			return false
		},
		/* 88 AuthorPrefix2 <- <(('v' '.' (_? ('d' '.'))?) / (Apostrophe 't'))> */
		func() bool {
			position647, tokenIndex647 := position, tokenIndex
			{
				position648 := position
				{
					position649, tokenIndex649 := position, tokenIndex
					if buffer[position] != rune('v') {
						goto l650
					}
					position++
					if buffer[position] != rune('.') {
						goto l650
					}
					position++
					{
						position651, tokenIndex651 := position, tokenIndex
						{
							position653, tokenIndex653 := position, tokenIndex
							if !_rules[rule_]() {
								goto l653
							}
							goto l654
						l653:
							position, tokenIndex = position653, tokenIndex653
						}
					l654:
						if buffer[position] != rune('d') {
							goto l651
						}
						position++
						if buffer[position] != rune('.') {
							goto l651
						}
						position++
						goto l652
					l651:
						position, tokenIndex = position651, tokenIndex651
					}
				l652:
					goto l649
				l650:
					position, tokenIndex = position649, tokenIndex649
					if !_rules[ruleApostrophe]() {
						goto l647
					}
					if buffer[position] != rune('t') {
						goto l647
					}
					position++
				}
			l649:
				add(ruleAuthorPrefix2, position648)
			}
			return true
		l647:
			position, tokenIndex = position647, tokenIndex647
			return false
		},
		/* 89 AuthorPrefix1 <- <((('a' 'b') / ('a' 'f') / ('b' 'i' 's') / ('d' 'a') / ('d' 'e' 'r') / ('d' 'e' 's') / ('d' 'e' 'n') / ('d' 'e' 'l') / ('d' 'e' 'l' 'l' 'a') / ('d' 'e' 'l' 'a') / ('d' 'e') / ('d' 'i') / ('d' 'u') / ('e' 'l') / ('l' 'a') / ('l' 'e') / ('t' 'e' 'r') / ('v' 'a' 'n') / ('d' Apostrophe) / ('i' 'n' Apostrophe 't') / ('z' 'u' 'r') / ('z' 'u') / ('v' 'o' 'n' (_ (('d' '.') / ('d' 'e' 'm')))?) / ('v' (_ 'd')?)) &_)> */
		func() bool {
			position655, tokenIndex655 := position, tokenIndex
			{
				position656 := position
				{
					position657, tokenIndex657 := position, tokenIndex
					if buffer[position] != rune('a') {
						goto l658
					}
					position++
					if buffer[position] != rune('b') {
						goto l658
					}
					position++
					goto l657
				l658:
					position, tokenIndex = position657, tokenIndex657
					if buffer[position] != rune('a') {
						goto l659
					}
					position++
					if buffer[position] != rune('f') {
						goto l659
					}
					position++
					goto l657
				l659:
					position, tokenIndex = position657, tokenIndex657
					if buffer[position] != rune('b') {
						goto l660
					}
					position++
					if buffer[position] != rune('i') {
						goto l660
					}
					position++
					if buffer[position] != rune('s') {
						goto l660
					}
					position++
					goto l657
				l660:
					position, tokenIndex = position657, tokenIndex657
					if buffer[position] != rune('d') {
						goto l661
					}
					position++
					if buffer[position] != rune('a') {
						goto l661
					}
					position++
					goto l657
				l661:
					position, tokenIndex = position657, tokenIndex657
					if buffer[position] != rune('d') {
						goto l662
					}
					position++
					if buffer[position] != rune('e') {
						goto l662
					}
					position++
					if buffer[position] != rune('r') {
						goto l662
					}
					position++
					goto l657
				l662:
					position, tokenIndex = position657, tokenIndex657
					if buffer[position] != rune('d') {
						goto l663
					}
					position++
					if buffer[position] != rune('e') {
						goto l663
					}
					position++
					if buffer[position] != rune('s') {
						goto l663
					}
					position++
					goto l657
				l663:
					position, tokenIndex = position657, tokenIndex657
					if buffer[position] != rune('d') {
						goto l664
					}
					position++
					if buffer[position] != rune('e') {
						goto l664
					}
					position++
					if buffer[position] != rune('n') {
						goto l664
					}
					position++
					goto l657
				l664:
					position, tokenIndex = position657, tokenIndex657
					if buffer[position] != rune('d') {
						goto l665
					}
					position++
					if buffer[position] != rune('e') {
						goto l665
					}
					position++
					if buffer[position] != rune('l') {
						goto l665
					}
					position++
					goto l657
				l665:
					position, tokenIndex = position657, tokenIndex657
					if buffer[position] != rune('d') {
						goto l666
					}
					position++
					if buffer[position] != rune('e') {
						goto l666
					}
					position++
					if buffer[position] != rune('l') {
						goto l666
					}
					position++
					if buffer[position] != rune('l') {
						goto l666
					}
					position++
					if buffer[position] != rune('a') {
						goto l666
					}
					position++
					goto l657
				l666:
					position, tokenIndex = position657, tokenIndex657
					if buffer[position] != rune('d') {
						goto l667
					}
					position++
					if buffer[position] != rune('e') {
						goto l667
					}
					position++
					if buffer[position] != rune('l') {
						goto l667
					}
					position++
					if buffer[position] != rune('a') {
						goto l667
					}
					position++
					goto l657
				l667:
					position, tokenIndex = position657, tokenIndex657
					if buffer[position] != rune('d') {
						goto l668
					}
					position++
					if buffer[position] != rune('e') {
						goto l668
					}
					position++
					goto l657
				l668:
					position, tokenIndex = position657, tokenIndex657
					if buffer[position] != rune('d') {
						goto l669
					}
					position++
					if buffer[position] != rune('i') {
						goto l669
					}
					position++
					goto l657
				l669:
					position, tokenIndex = position657, tokenIndex657
					if buffer[position] != rune('d') {
						goto l670
					}
					position++
					if buffer[position] != rune('u') {
						goto l670
					}
					position++
					goto l657
				l670:
					position, tokenIndex = position657, tokenIndex657
					if buffer[position] != rune('e') {
						goto l671
					}
					position++
					if buffer[position] != rune('l') {
						goto l671
					}
					position++
					goto l657
				l671:
					position, tokenIndex = position657, tokenIndex657
					if buffer[position] != rune('l') {
						goto l672
					}
					position++
					if buffer[position] != rune('a') {
						goto l672
					}
					position++
					goto l657
				l672:
					position, tokenIndex = position657, tokenIndex657
					if buffer[position] != rune('l') {
						goto l673
					}
					position++
					if buffer[position] != rune('e') {
						goto l673
					}
					position++
					goto l657
				l673:
					position, tokenIndex = position657, tokenIndex657
					if buffer[position] != rune('t') {
						goto l674
					}
					position++
					if buffer[position] != rune('e') {
						goto l674
					}
					position++
					if buffer[position] != rune('r') {
						goto l674
					}
					position++
					goto l657
				l674:
					position, tokenIndex = position657, tokenIndex657
					if buffer[position] != rune('v') {
						goto l675
					}
					position++
					if buffer[position] != rune('a') {
						goto l675
					}
					position++
					if buffer[position] != rune('n') {
						goto l675
					}
					position++
					goto l657
				l675:
					position, tokenIndex = position657, tokenIndex657
					if buffer[position] != rune('d') {
						goto l676
					}
					position++
					if !_rules[ruleApostrophe]() {
						goto l676
					}
					goto l657
				l676:
					position, tokenIndex = position657, tokenIndex657
					if buffer[position] != rune('i') {
						goto l677
					}
					position++
					if buffer[position] != rune('n') {
						goto l677
					}
					position++
					if !_rules[ruleApostrophe]() {
						goto l677
					}
					if buffer[position] != rune('t') {
						goto l677
					}
					position++
					goto l657
				l677:
					position, tokenIndex = position657, tokenIndex657
					if buffer[position] != rune('z') {
						goto l678
					}
					position++
					if buffer[position] != rune('u') {
						goto l678
					}
					position++
					if buffer[position] != rune('r') {
						goto l678
					}
					position++
					goto l657
				l678:
					position, tokenIndex = position657, tokenIndex657
					if buffer[position] != rune('z') {
						goto l679
					}
					position++
					if buffer[position] != rune('u') {
						goto l679
					}
					position++
					goto l657
				l679:
					position, tokenIndex = position657, tokenIndex657
					if buffer[position] != rune('v') {
						goto l680
					}
					position++
					if buffer[position] != rune('o') {
						goto l680
					}
					position++
					if buffer[position] != rune('n') {
						goto l680
					}
					position++
					{
						position681, tokenIndex681 := position, tokenIndex
						if !_rules[rule_]() {
							goto l681
						}
						{
							position683, tokenIndex683 := position, tokenIndex
							if buffer[position] != rune('d') {
								goto l684
							}
							position++
							if buffer[position] != rune('.') {
								goto l684
							}
							position++
							goto l683
						l684:
							position, tokenIndex = position683, tokenIndex683
							if buffer[position] != rune('d') {
								goto l681
							}
							position++
							if buffer[position] != rune('e') {
								goto l681
							}
							position++
							if buffer[position] != rune('m') {
								goto l681
							}
							position++
						}
					l683:
						goto l682
					l681:
						position, tokenIndex = position681, tokenIndex681
					}
				l682:
					goto l657
				l680:
					position, tokenIndex = position657, tokenIndex657
					if buffer[position] != rune('v') {
						goto l655
					}
					position++
					{
						position685, tokenIndex685 := position, tokenIndex
						if !_rules[rule_]() {
							goto l685
						}
						if buffer[position] != rune('d') {
							goto l685
						}
						position++
						goto l686
					l685:
						position, tokenIndex = position685, tokenIndex685
					}
				l686:
				}
			l657:
				{
					position687, tokenIndex687 := position, tokenIndex
					if !_rules[rule_]() {
						goto l655
					}
					position, tokenIndex = position687, tokenIndex687
				}
				add(ruleAuthorPrefix1, position656)
			}
			return true
		l655:
			position, tokenIndex = position655, tokenIndex655
			return false
		},
		/* 90 AuthorUpperChar <- <(UpperASCII / MiscodedChar / ('À' / 'Á' / 'Â' / 'Ã' / 'Ä' / 'Å' / 'Æ' / 'Ç' / 'È' / 'É' / 'Ê' / 'Ë' / 'Ì' / 'Í' / 'Î' / 'Ï' / 'Ð' / 'Ñ' / 'Ò' / 'Ó' / 'Ô' / 'Õ' / 'Ö' / 'Ø' / 'Ù' / 'Ú' / 'Û' / 'Ü' / 'Ý' / 'Ć' / 'Č' / 'Ď' / 'İ' / 'Ķ' / 'Ĺ' / 'ĺ' / 'Ľ' / 'ľ' / 'Ł' / 'ł' / 'Ņ' / 'Ō' / 'Ő' / 'Œ' / 'Ř' / 'Ś' / 'Ŝ' / 'Ş' / 'Š' / 'Ÿ' / 'Ź' / 'Ż' / 'Ž' / 'ƒ' / 'Ǿ' / 'Ș' / 'Ț'))> */
		func() bool {
			position688, tokenIndex688 := position, tokenIndex
			{
				position689 := position
				{
					position690, tokenIndex690 := position, tokenIndex
					if !_rules[ruleUpperASCII]() {
						goto l691
					}
					goto l690
				l691:
					position, tokenIndex = position690, tokenIndex690
					if !_rules[ruleMiscodedChar]() {
						goto l692
					}
					goto l690
				l692:
					position, tokenIndex = position690, tokenIndex690
					{
						position693, tokenIndex693 := position, tokenIndex
						if buffer[position] != rune('À') {
							goto l694
						}
						position++
						goto l693
					l694:
						position, tokenIndex = position693, tokenIndex693
						if buffer[position] != rune('Á') {
							goto l695
						}
						position++
						goto l693
					l695:
						position, tokenIndex = position693, tokenIndex693
						if buffer[position] != rune('Â') {
							goto l696
						}
						position++
						goto l693
					l696:
						position, tokenIndex = position693, tokenIndex693
						if buffer[position] != rune('Ã') {
							goto l697
						}
						position++
						goto l693
					l697:
						position, tokenIndex = position693, tokenIndex693
						if buffer[position] != rune('Ä') {
							goto l698
						}
						position++
						goto l693
					l698:
						position, tokenIndex = position693, tokenIndex693
						if buffer[position] != rune('Å') {
							goto l699
						}
						position++
						goto l693
					l699:
						position, tokenIndex = position693, tokenIndex693
						if buffer[position] != rune('Æ') {
							goto l700
						}
						position++
						goto l693
					l700:
						position, tokenIndex = position693, tokenIndex693
						if buffer[position] != rune('Ç') {
							goto l701
						}
						position++
						goto l693
					l701:
						position, tokenIndex = position693, tokenIndex693
						if buffer[position] != rune('È') {
							goto l702
						}
						position++
						goto l693
					l702:
						position, tokenIndex = position693, tokenIndex693
						if buffer[position] != rune('É') {
							goto l703
						}
						position++
						goto l693
					l703:
						position, tokenIndex = position693, tokenIndex693
						if buffer[position] != rune('Ê') {
							goto l704
						}
						position++
						goto l693
					l704:
						position, tokenIndex = position693, tokenIndex693
						if buffer[position] != rune('Ë') {
							goto l705
						}
						position++
						goto l693
					l705:
						position, tokenIndex = position693, tokenIndex693
						if buffer[position] != rune('Ì') {
							goto l706
						}
						position++
						goto l693
					l706:
						position, tokenIndex = position693, tokenIndex693
						if buffer[position] != rune('Í') {
							goto l707
						}
						position++
						goto l693
					l707:
						position, tokenIndex = position693, tokenIndex693
						if buffer[position] != rune('Î') {
							goto l708
						}
						position++
						goto l693
					l708:
						position, tokenIndex = position693, tokenIndex693
						if buffer[position] != rune('Ï') {
							goto l709
						}
						position++
						goto l693
					l709:
						position, tokenIndex = position693, tokenIndex693
						if buffer[position] != rune('Ð') {
							goto l710
						}
						position++
						goto l693
					l710:
						position, tokenIndex = position693, tokenIndex693
						if buffer[position] != rune('Ñ') {
							goto l711
						}
						position++
						goto l693
					l711:
						position, tokenIndex = position693, tokenIndex693
						if buffer[position] != rune('Ò') {
							goto l712
						}
						position++
						goto l693
					l712:
						position, tokenIndex = position693, tokenIndex693
						if buffer[position] != rune('Ó') {
							goto l713
						}
						position++
						goto l693
					l713:
						position, tokenIndex = position693, tokenIndex693
						if buffer[position] != rune('Ô') {
							goto l714
						}
						position++
						goto l693
					l714:
						position, tokenIndex = position693, tokenIndex693
						if buffer[position] != rune('Õ') {
							goto l715
						}
						position++
						goto l693
					l715:
						position, tokenIndex = position693, tokenIndex693
						if buffer[position] != rune('Ö') {
							goto l716
						}
						position++
						goto l693
					l716:
						position, tokenIndex = position693, tokenIndex693
						if buffer[position] != rune('Ø') {
							goto l717
						}
						position++
						goto l693
					l717:
						position, tokenIndex = position693, tokenIndex693
						if buffer[position] != rune('Ù') {
							goto l718
						}
						position++
						goto l693
					l718:
						position, tokenIndex = position693, tokenIndex693
						if buffer[position] != rune('Ú') {
							goto l719
						}
						position++
						goto l693
					l719:
						position, tokenIndex = position693, tokenIndex693
						if buffer[position] != rune('Û') {
							goto l720
						}
						position++
						goto l693
					l720:
						position, tokenIndex = position693, tokenIndex693
						if buffer[position] != rune('Ü') {
							goto l721
						}
						position++
						goto l693
					l721:
						position, tokenIndex = position693, tokenIndex693
						if buffer[position] != rune('Ý') {
							goto l722
						}
						position++
						goto l693
					l722:
						position, tokenIndex = position693, tokenIndex693
						if buffer[position] != rune('Ć') {
							goto l723
						}
						position++
						goto l693
					l723:
						position, tokenIndex = position693, tokenIndex693
						if buffer[position] != rune('Č') {
							goto l724
						}
						position++
						goto l693
					l724:
						position, tokenIndex = position693, tokenIndex693
						if buffer[position] != rune('Ď') {
							goto l725
						}
						position++
						goto l693
					l725:
						position, tokenIndex = position693, tokenIndex693
						if buffer[position] != rune('İ') {
							goto l726
						}
						position++
						goto l693
					l726:
						position, tokenIndex = position693, tokenIndex693
						if buffer[position] != rune('Ķ') {
							goto l727
						}
						position++
						goto l693
					l727:
						position, tokenIndex = position693, tokenIndex693
						if buffer[position] != rune('Ĺ') {
							goto l728
						}
						position++
						goto l693
					l728:
						position, tokenIndex = position693, tokenIndex693
						if buffer[position] != rune('ĺ') {
							goto l729
						}
						position++
						goto l693
					l729:
						position, tokenIndex = position693, tokenIndex693
						if buffer[position] != rune('Ľ') {
							goto l730
						}
						position++
						goto l693
					l730:
						position, tokenIndex = position693, tokenIndex693
						if buffer[position] != rune('ľ') {
							goto l731
						}
						position++
						goto l693
					l731:
						position, tokenIndex = position693, tokenIndex693
						if buffer[position] != rune('Ł') {
							goto l732
						}
						position++
						goto l693
					l732:
						position, tokenIndex = position693, tokenIndex693
						if buffer[position] != rune('ł') {
							goto l733
						}
						position++
						goto l693
					l733:
						position, tokenIndex = position693, tokenIndex693
						if buffer[position] != rune('Ņ') {
							goto l734
						}
						position++
						goto l693
					l734:
						position, tokenIndex = position693, tokenIndex693
						if buffer[position] != rune('Ō') {
							goto l735
						}
						position++
						goto l693
					l735:
						position, tokenIndex = position693, tokenIndex693
						if buffer[position] != rune('Ő') {
							goto l736
						}
						position++
						goto l693
					l736:
						position, tokenIndex = position693, tokenIndex693
						if buffer[position] != rune('Œ') {
							goto l737
						}
						position++
						goto l693
					l737:
						position, tokenIndex = position693, tokenIndex693
						if buffer[position] != rune('Ř') {
							goto l738
						}
						position++
						goto l693
					l738:
						position, tokenIndex = position693, tokenIndex693
						if buffer[position] != rune('Ś') {
							goto l739
						}
						position++
						goto l693
					l739:
						position, tokenIndex = position693, tokenIndex693
						if buffer[position] != rune('Ŝ') {
							goto l740
						}
						position++
						goto l693
					l740:
						position, tokenIndex = position693, tokenIndex693
						if buffer[position] != rune('Ş') {
							goto l741
						}
						position++
						goto l693
					l741:
						position, tokenIndex = position693, tokenIndex693
						if buffer[position] != rune('Š') {
							goto l742
						}
						position++
						goto l693
					l742:
						position, tokenIndex = position693, tokenIndex693
						if buffer[position] != rune('Ÿ') {
							goto l743
						}
						position++
						goto l693
					l743:
						position, tokenIndex = position693, tokenIndex693
						if buffer[position] != rune('Ź') {
							goto l744
						}
						position++
						goto l693
					l744:
						position, tokenIndex = position693, tokenIndex693
						if buffer[position] != rune('Ż') {
							goto l745
						}
						position++
						goto l693
					l745:
						position, tokenIndex = position693, tokenIndex693
						if buffer[position] != rune('Ž') {
							goto l746
						}
						position++
						goto l693
					l746:
						position, tokenIndex = position693, tokenIndex693
						if buffer[position] != rune('ƒ') {
							goto l747
						}
						position++
						goto l693
					l747:
						position, tokenIndex = position693, tokenIndex693
						if buffer[position] != rune('Ǿ') {
							goto l748
						}
						position++
						goto l693
					l748:
						position, tokenIndex = position693, tokenIndex693
						if buffer[position] != rune('Ș') {
							goto l749
						}
						position++
						goto l693
					l749:
						position, tokenIndex = position693, tokenIndex693
						if buffer[position] != rune('Ț') {
							goto l688
						}
						position++
					}
				l693:
				}
			l690:
				add(ruleAuthorUpperChar, position689)
			}
			return true
		l688:
			position, tokenIndex = position688, tokenIndex688
			return false
		},
		/* 91 AuthorLowerChar <- <(LowerASCII / MiscodedChar / ('à' / 'á' / 'â' / 'ã' / 'ä' / 'å' / 'æ' / 'ç' / 'è' / 'é' / 'ê' / 'ë' / 'ì' / 'í' / 'î' / 'ï' / 'ð' / 'ñ' / 'ò' / 'ó' / 'ó' / 'ô' / 'õ' / 'ö' / 'ø' / 'ù' / 'ú' / 'û' / 'ü' / 'ý' / 'ÿ' / 'ā' / 'ă' / 'ą' / 'ć' / 'ĉ' / 'č' / 'ď' / 'đ' / '\'' / 'ē' / 'ĕ' / 'ė' / 'ę' / 'ě' / 'ğ' / 'ī' / 'ĭ' / 'İ' / 'ı' / 'ĺ' / 'ľ' / 'ł' / 'ń' / 'ņ' / 'ň' / 'ŏ' / 'ő' / 'œ' / 'ŕ' / 'ř' / 'ś' / 'ş' / 'š' / 'ţ' / 'ť' / 'ũ' / 'ū' / 'ŭ' / 'ů' / 'ű' / 'ź' / 'ż' / 'ž' / 'ſ' / 'ǎ' / 'ǔ' / 'ǧ' / 'ș' / 'ț' / 'ȳ' / 'ß'))> */
		func() bool {
			position750, tokenIndex750 := position, tokenIndex
			{
				position751 := position
				{
					position752, tokenIndex752 := position, tokenIndex
					if !_rules[ruleLowerASCII]() {
						goto l753
					}
					goto l752
				l753:
					position, tokenIndex = position752, tokenIndex752
					if !_rules[ruleMiscodedChar]() {
						goto l754
					}
					goto l752
				l754:
					position, tokenIndex = position752, tokenIndex752
					{
						position755, tokenIndex755 := position, tokenIndex
						if buffer[position] != rune('à') {
							goto l756
						}
						position++
						goto l755
					l756:
						position, tokenIndex = position755, tokenIndex755
						if buffer[position] != rune('á') {
							goto l757
						}
						position++
						goto l755
					l757:
						position, tokenIndex = position755, tokenIndex755
						if buffer[position] != rune('â') {
							goto l758
						}
						position++
						goto l755
					l758:
						position, tokenIndex = position755, tokenIndex755
						if buffer[position] != rune('ã') {
							goto l759
						}
						position++
						goto l755
					l759:
						position, tokenIndex = position755, tokenIndex755
						if buffer[position] != rune('ä') {
							goto l760
						}
						position++
						goto l755
					l760:
						position, tokenIndex = position755, tokenIndex755
						if buffer[position] != rune('å') {
							goto l761
						}
						position++
						goto l755
					l761:
						position, tokenIndex = position755, tokenIndex755
						if buffer[position] != rune('æ') {
							goto l762
						}
						position++
						goto l755
					l762:
						position, tokenIndex = position755, tokenIndex755
						if buffer[position] != rune('ç') {
							goto l763
						}
						position++
						goto l755
					l763:
						position, tokenIndex = position755, tokenIndex755
						if buffer[position] != rune('è') {
							goto l764
						}
						position++
						goto l755
					l764:
						position, tokenIndex = position755, tokenIndex755
						if buffer[position] != rune('é') {
							goto l765
						}
						position++
						goto l755
					l765:
						position, tokenIndex = position755, tokenIndex755
						if buffer[position] != rune('ê') {
							goto l766
						}
						position++
						goto l755
					l766:
						position, tokenIndex = position755, tokenIndex755
						if buffer[position] != rune('ë') {
							goto l767
						}
						position++
						goto l755
					l767:
						position, tokenIndex = position755, tokenIndex755
						if buffer[position] != rune('ì') {
							goto l768
						}
						position++
						goto l755
					l768:
						position, tokenIndex = position755, tokenIndex755
						if buffer[position] != rune('í') {
							goto l769
						}
						position++
						goto l755
					l769:
						position, tokenIndex = position755, tokenIndex755
						if buffer[position] != rune('î') {
							goto l770
						}
						position++
						goto l755
					l770:
						position, tokenIndex = position755, tokenIndex755
						if buffer[position] != rune('ï') {
							goto l771
						}
						position++
						goto l755
					l771:
						position, tokenIndex = position755, tokenIndex755
						if buffer[position] != rune('ð') {
							goto l772
						}
						position++
						goto l755
					l772:
						position, tokenIndex = position755, tokenIndex755
						if buffer[position] != rune('ñ') {
							goto l773
						}
						position++
						goto l755
					l773:
						position, tokenIndex = position755, tokenIndex755
						if buffer[position] != rune('ò') {
							goto l774
						}
						position++
						goto l755
					l774:
						position, tokenIndex = position755, tokenIndex755
						if buffer[position] != rune('ó') {
							goto l775
						}
						position++
						goto l755
					l775:
						position, tokenIndex = position755, tokenIndex755
						if buffer[position] != rune('ó') {
							goto l776
						}
						position++
						goto l755
					l776:
						position, tokenIndex = position755, tokenIndex755
						if buffer[position] != rune('ô') {
							goto l777
						}
						position++
						goto l755
					l777:
						position, tokenIndex = position755, tokenIndex755
						if buffer[position] != rune('õ') {
							goto l778
						}
						position++
						goto l755
					l778:
						position, tokenIndex = position755, tokenIndex755
						if buffer[position] != rune('ö') {
							goto l779
						}
						position++
						goto l755
					l779:
						position, tokenIndex = position755, tokenIndex755
						if buffer[position] != rune('ø') {
							goto l780
						}
						position++
						goto l755
					l780:
						position, tokenIndex = position755, tokenIndex755
						if buffer[position] != rune('ù') {
							goto l781
						}
						position++
						goto l755
					l781:
						position, tokenIndex = position755, tokenIndex755
						if buffer[position] != rune('ú') {
							goto l782
						}
						position++
						goto l755
					l782:
						position, tokenIndex = position755, tokenIndex755
						if buffer[position] != rune('û') {
							goto l783
						}
						position++
						goto l755
					l783:
						position, tokenIndex = position755, tokenIndex755
						if buffer[position] != rune('ü') {
							goto l784
						}
						position++
						goto l755
					l784:
						position, tokenIndex = position755, tokenIndex755
						if buffer[position] != rune('ý') {
							goto l785
						}
						position++
						goto l755
					l785:
						position, tokenIndex = position755, tokenIndex755
						if buffer[position] != rune('ÿ') {
							goto l786
						}
						position++
						goto l755
					l786:
						position, tokenIndex = position755, tokenIndex755
						if buffer[position] != rune('ā') {
							goto l787
						}
						position++
						goto l755
					l787:
						position, tokenIndex = position755, tokenIndex755
						if buffer[position] != rune('ă') {
							goto l788
						}
						position++
						goto l755
					l788:
						position, tokenIndex = position755, tokenIndex755
						if buffer[position] != rune('ą') {
							goto l789
						}
						position++
						goto l755
					l789:
						position, tokenIndex = position755, tokenIndex755
						if buffer[position] != rune('ć') {
							goto l790
						}
						position++
						goto l755
					l790:
						position, tokenIndex = position755, tokenIndex755
						if buffer[position] != rune('ĉ') {
							goto l791
						}
						position++
						goto l755
					l791:
						position, tokenIndex = position755, tokenIndex755
						if buffer[position] != rune('č') {
							goto l792
						}
						position++
						goto l755
					l792:
						position, tokenIndex = position755, tokenIndex755
						if buffer[position] != rune('ď') {
							goto l793
						}
						position++
						goto l755
					l793:
						position, tokenIndex = position755, tokenIndex755
						if buffer[position] != rune('đ') {
							goto l794
						}
						position++
						goto l755
					l794:
						position, tokenIndex = position755, tokenIndex755
						if buffer[position] != rune('\'') {
							goto l795
						}
						position++
						goto l755
					l795:
						position, tokenIndex = position755, tokenIndex755
						if buffer[position] != rune('ē') {
							goto l796
						}
						position++
						goto l755
					l796:
						position, tokenIndex = position755, tokenIndex755
						if buffer[position] != rune('ĕ') {
							goto l797
						}
						position++
						goto l755
					l797:
						position, tokenIndex = position755, tokenIndex755
						if buffer[position] != rune('ė') {
							goto l798
						}
						position++
						goto l755
					l798:
						position, tokenIndex = position755, tokenIndex755
						if buffer[position] != rune('ę') {
							goto l799
						}
						position++
						goto l755
					l799:
						position, tokenIndex = position755, tokenIndex755
						if buffer[position] != rune('ě') {
							goto l800
						}
						position++
						goto l755
					l800:
						position, tokenIndex = position755, tokenIndex755
						if buffer[position] != rune('ğ') {
							goto l801
						}
						position++
						goto l755
					l801:
						position, tokenIndex = position755, tokenIndex755
						if buffer[position] != rune('ī') {
							goto l802
						}
						position++
						goto l755
					l802:
						position, tokenIndex = position755, tokenIndex755
						if buffer[position] != rune('ĭ') {
							goto l803
						}
						position++
						goto l755
					l803:
						position, tokenIndex = position755, tokenIndex755
						if buffer[position] != rune('İ') {
							goto l804
						}
						position++
						goto l755
					l804:
						position, tokenIndex = position755, tokenIndex755
						if buffer[position] != rune('ı') {
							goto l805
						}
						position++
						goto l755
					l805:
						position, tokenIndex = position755, tokenIndex755
						if buffer[position] != rune('ĺ') {
							goto l806
						}
						position++
						goto l755
					l806:
						position, tokenIndex = position755, tokenIndex755
						if buffer[position] != rune('ľ') {
							goto l807
						}
						position++
						goto l755
					l807:
						position, tokenIndex = position755, tokenIndex755
						if buffer[position] != rune('ł') {
							goto l808
						}
						position++
						goto l755
					l808:
						position, tokenIndex = position755, tokenIndex755
						if buffer[position] != rune('ń') {
							goto l809
						}
						position++
						goto l755
					l809:
						position, tokenIndex = position755, tokenIndex755
						if buffer[position] != rune('ņ') {
							goto l810
						}
						position++
						goto l755
					l810:
						position, tokenIndex = position755, tokenIndex755
						if buffer[position] != rune('ň') {
							goto l811
						}
						position++
						goto l755
					l811:
						position, tokenIndex = position755, tokenIndex755
						if buffer[position] != rune('ŏ') {
							goto l812
						}
						position++
						goto l755
					l812:
						position, tokenIndex = position755, tokenIndex755
						if buffer[position] != rune('ő') {
							goto l813
						}
						position++
						goto l755
					l813:
						position, tokenIndex = position755, tokenIndex755
						if buffer[position] != rune('œ') {
							goto l814
						}
						position++
						goto l755
					l814:
						position, tokenIndex = position755, tokenIndex755
						if buffer[position] != rune('ŕ') {
							goto l815
						}
						position++
						goto l755
					l815:
						position, tokenIndex = position755, tokenIndex755
						if buffer[position] != rune('ř') {
							goto l816
						}
						position++
						goto l755
					l816:
						position, tokenIndex = position755, tokenIndex755
						if buffer[position] != rune('ś') {
							goto l817
						}
						position++
						goto l755
					l817:
						position, tokenIndex = position755, tokenIndex755
						if buffer[position] != rune('ş') {
							goto l818
						}
						position++
						goto l755
					l818:
						position, tokenIndex = position755, tokenIndex755
						if buffer[position] != rune('š') {
							goto l819
						}
						position++
						goto l755
					l819:
						position, tokenIndex = position755, tokenIndex755
						if buffer[position] != rune('ţ') {
							goto l820
						}
						position++
						goto l755
					l820:
						position, tokenIndex = position755, tokenIndex755
						if buffer[position] != rune('ť') {
							goto l821
						}
						position++
						goto l755
					l821:
						position, tokenIndex = position755, tokenIndex755
						if buffer[position] != rune('ũ') {
							goto l822
						}
						position++
						goto l755
					l822:
						position, tokenIndex = position755, tokenIndex755
						if buffer[position] != rune('ū') {
							goto l823
						}
						position++
						goto l755
					l823:
						position, tokenIndex = position755, tokenIndex755
						if buffer[position] != rune('ŭ') {
							goto l824
						}
						position++
						goto l755
					l824:
						position, tokenIndex = position755, tokenIndex755
						if buffer[position] != rune('ů') {
							goto l825
						}
						position++
						goto l755
					l825:
						position, tokenIndex = position755, tokenIndex755
						if buffer[position] != rune('ű') {
							goto l826
						}
						position++
						goto l755
					l826:
						position, tokenIndex = position755, tokenIndex755
						if buffer[position] != rune('ź') {
							goto l827
						}
						position++
						goto l755
					l827:
						position, tokenIndex = position755, tokenIndex755
						if buffer[position] != rune('ż') {
							goto l828
						}
						position++
						goto l755
					l828:
						position, tokenIndex = position755, tokenIndex755
						if buffer[position] != rune('ž') {
							goto l829
						}
						position++
						goto l755
					l829:
						position, tokenIndex = position755, tokenIndex755
						if buffer[position] != rune('ſ') {
							goto l830
						}
						position++
						goto l755
					l830:
						position, tokenIndex = position755, tokenIndex755
						if buffer[position] != rune('ǎ') {
							goto l831
						}
						position++
						goto l755
					l831:
						position, tokenIndex = position755, tokenIndex755
						if buffer[position] != rune('ǔ') {
							goto l832
						}
						position++
						goto l755
					l832:
						position, tokenIndex = position755, tokenIndex755
						if buffer[position] != rune('ǧ') {
							goto l833
						}
						position++
						goto l755
					l833:
						position, tokenIndex = position755, tokenIndex755
						if buffer[position] != rune('ș') {
							goto l834
						}
						position++
						goto l755
					l834:
						position, tokenIndex = position755, tokenIndex755
						if buffer[position] != rune('ț') {
							goto l835
						}
						position++
						goto l755
					l835:
						position, tokenIndex = position755, tokenIndex755
						if buffer[position] != rune('ȳ') {
							goto l836
						}
						position++
						goto l755
					l836:
						position, tokenIndex = position755, tokenIndex755
						if buffer[position] != rune('ß') {
							goto l750
						}
						position++
					}
				l755:
				}
			l752:
				add(ruleAuthorLowerChar, position751)
			}
			return true
		l750:
			position, tokenIndex = position750, tokenIndex750
			return false
		},
		/* 92 Year <- <(YearRange / YearApprox / YearWithParens / YearWithPage / YearWithDot / YearWithChar / YearNum)> */
		func() bool {
			position837, tokenIndex837 := position, tokenIndex
			{
				position838 := position
				{
					position839, tokenIndex839 := position, tokenIndex
					if !_rules[ruleYearRange]() {
						goto l840
					}
					goto l839
				l840:
					position, tokenIndex = position839, tokenIndex839
					if !_rules[ruleYearApprox]() {
						goto l841
					}
					goto l839
				l841:
					position, tokenIndex = position839, tokenIndex839
					if !_rules[ruleYearWithParens]() {
						goto l842
					}
					goto l839
				l842:
					position, tokenIndex = position839, tokenIndex839
					if !_rules[ruleYearWithPage]() {
						goto l843
					}
					goto l839
				l843:
					position, tokenIndex = position839, tokenIndex839
					if !_rules[ruleYearWithDot]() {
						goto l844
					}
					goto l839
				l844:
					position, tokenIndex = position839, tokenIndex839
					if !_rules[ruleYearWithChar]() {
						goto l845
					}
					goto l839
				l845:
					position, tokenIndex = position839, tokenIndex839
					if !_rules[ruleYearNum]() {
						goto l837
					}
				}
			l839:
				add(ruleYear, position838)
			}
			return true
		l837:
			position, tokenIndex = position837, tokenIndex837
			return false
		},
		/* 93 YearRange <- <(YearNum (Dash / Slash) (Nums+ ('a' / 'b' / 'c' / 'd' / 'e' / 'f' / 'g' / 'h' / 'i' / 'j' / 'k' / 'l' / 'm' / 'n' / 'o' / 'p' / 'q' / 'r' / 's' / 't' / 'u' / 'v' / 'w' / 'x' / 'y' / 'z' / '?')*))> */
		func() bool {
			position846, tokenIndex846 := position, tokenIndex
			{
				position847 := position
				if !_rules[ruleYearNum]() {
					goto l846
				}
				{
					position848, tokenIndex848 := position, tokenIndex
					if !_rules[ruleDash]() {
						goto l849
					}
					goto l848
				l849:
					position, tokenIndex = position848, tokenIndex848
					if !_rules[ruleSlash]() {
						goto l846
					}
				}
			l848:
				if !_rules[ruleNums]() {
					goto l846
				}
			l850:
				{
					position851, tokenIndex851 := position, tokenIndex
					if !_rules[ruleNums]() {
						goto l851
					}
					goto l850
				l851:
					position, tokenIndex = position851, tokenIndex851
				}
			l852:
				{
					position853, tokenIndex853 := position, tokenIndex
					{
						position854, tokenIndex854 := position, tokenIndex
						if buffer[position] != rune('a') {
							goto l855
						}
						position++
						goto l854
					l855:
						position, tokenIndex = position854, tokenIndex854
						if buffer[position] != rune('b') {
							goto l856
						}
						position++
						goto l854
					l856:
						position, tokenIndex = position854, tokenIndex854
						if buffer[position] != rune('c') {
							goto l857
						}
						position++
						goto l854
					l857:
						position, tokenIndex = position854, tokenIndex854
						if buffer[position] != rune('d') {
							goto l858
						}
						position++
						goto l854
					l858:
						position, tokenIndex = position854, tokenIndex854
						if buffer[position] != rune('e') {
							goto l859
						}
						position++
						goto l854
					l859:
						position, tokenIndex = position854, tokenIndex854
						if buffer[position] != rune('f') {
							goto l860
						}
						position++
						goto l854
					l860:
						position, tokenIndex = position854, tokenIndex854
						if buffer[position] != rune('g') {
							goto l861
						}
						position++
						goto l854
					l861:
						position, tokenIndex = position854, tokenIndex854
						if buffer[position] != rune('h') {
							goto l862
						}
						position++
						goto l854
					l862:
						position, tokenIndex = position854, tokenIndex854
						if buffer[position] != rune('i') {
							goto l863
						}
						position++
						goto l854
					l863:
						position, tokenIndex = position854, tokenIndex854
						if buffer[position] != rune('j') {
							goto l864
						}
						position++
						goto l854
					l864:
						position, tokenIndex = position854, tokenIndex854
						if buffer[position] != rune('k') {
							goto l865
						}
						position++
						goto l854
					l865:
						position, tokenIndex = position854, tokenIndex854
						if buffer[position] != rune('l') {
							goto l866
						}
						position++
						goto l854
					l866:
						position, tokenIndex = position854, tokenIndex854
						if buffer[position] != rune('m') {
							goto l867
						}
						position++
						goto l854
					l867:
						position, tokenIndex = position854, tokenIndex854
						if buffer[position] != rune('n') {
							goto l868
						}
						position++
						goto l854
					l868:
						position, tokenIndex = position854, tokenIndex854
						if buffer[position] != rune('o') {
							goto l869
						}
						position++
						goto l854
					l869:
						position, tokenIndex = position854, tokenIndex854
						if buffer[position] != rune('p') {
							goto l870
						}
						position++
						goto l854
					l870:
						position, tokenIndex = position854, tokenIndex854
						if buffer[position] != rune('q') {
							goto l871
						}
						position++
						goto l854
					l871:
						position, tokenIndex = position854, tokenIndex854
						if buffer[position] != rune('r') {
							goto l872
						}
						position++
						goto l854
					l872:
						position, tokenIndex = position854, tokenIndex854
						if buffer[position] != rune('s') {
							goto l873
						}
						position++
						goto l854
					l873:
						position, tokenIndex = position854, tokenIndex854
						if buffer[position] != rune('t') {
							goto l874
						}
						position++
						goto l854
					l874:
						position, tokenIndex = position854, tokenIndex854
						if buffer[position] != rune('u') {
							goto l875
						}
						position++
						goto l854
					l875:
						position, tokenIndex = position854, tokenIndex854
						if buffer[position] != rune('v') {
							goto l876
						}
						position++
						goto l854
					l876:
						position, tokenIndex = position854, tokenIndex854
						if buffer[position] != rune('w') {
							goto l877
						}
						position++
						goto l854
					l877:
						position, tokenIndex = position854, tokenIndex854
						if buffer[position] != rune('x') {
							goto l878
						}
						position++
						goto l854
					l878:
						position, tokenIndex = position854, tokenIndex854
						if buffer[position] != rune('y') {
							goto l879
						}
						position++
						goto l854
					l879:
						position, tokenIndex = position854, tokenIndex854
						if buffer[position] != rune('z') {
							goto l880
						}
						position++
						goto l854
					l880:
						position, tokenIndex = position854, tokenIndex854
						if buffer[position] != rune('?') {
							goto l853
						}
						position++
					}
				l854:
					goto l852
				l853:
					position, tokenIndex = position853, tokenIndex853
				}
				add(ruleYearRange, position847)
			}
			return true
		l846:
			position, tokenIndex = position846, tokenIndex846
			return false
		},
		/* 94 YearWithDot <- <(YearNum '.')> */
		func() bool {
			position881, tokenIndex881 := position, tokenIndex
			{
				position882 := position
				if !_rules[ruleYearNum]() {
					goto l881
				}
				if buffer[position] != rune('.') {
					goto l881
				}
				position++
				add(ruleYearWithDot, position882)
			}
			return true
		l881:
			position, tokenIndex = position881, tokenIndex881
			return false
		},
		/* 95 YearApprox <- <('[' _? YearNum _? ']')> */
		func() bool {
			position883, tokenIndex883 := position, tokenIndex
			{
				position884 := position
				if buffer[position] != rune('[') {
					goto l883
				}
				position++
				{
					position885, tokenIndex885 := position, tokenIndex
					if !_rules[rule_]() {
						goto l885
					}
					goto l886
				l885:
					position, tokenIndex = position885, tokenIndex885
				}
			l886:
				if !_rules[ruleYearNum]() {
					goto l883
				}
				{
					position887, tokenIndex887 := position, tokenIndex
					if !_rules[rule_]() {
						goto l887
					}
					goto l888
				l887:
					position, tokenIndex = position887, tokenIndex887
				}
			l888:
				if buffer[position] != rune(']') {
					goto l883
				}
				position++
				add(ruleYearApprox, position884)
			}
			return true
		l883:
			position, tokenIndex = position883, tokenIndex883
			return false
		},
		/* 96 YearWithPage <- <((YearWithChar / YearNum) _? ':' _? Nums+)> */
		func() bool {
			position889, tokenIndex889 := position, tokenIndex
			{
				position890 := position
				{
					position891, tokenIndex891 := position, tokenIndex
					if !_rules[ruleYearWithChar]() {
						goto l892
					}
					goto l891
				l892:
					position, tokenIndex = position891, tokenIndex891
					if !_rules[ruleYearNum]() {
						goto l889
					}
				}
			l891:
				{
					position893, tokenIndex893 := position, tokenIndex
					if !_rules[rule_]() {
						goto l893
					}
					goto l894
				l893:
					position, tokenIndex = position893, tokenIndex893
				}
			l894:
				if buffer[position] != rune(':') {
					goto l889
				}
				position++
				{
					position895, tokenIndex895 := position, tokenIndex
					if !_rules[rule_]() {
						goto l895
					}
					goto l896
				l895:
					position, tokenIndex = position895, tokenIndex895
				}
			l896:
				if !_rules[ruleNums]() {
					goto l889
				}
			l897:
				{
					position898, tokenIndex898 := position, tokenIndex
					if !_rules[ruleNums]() {
						goto l898
					}
					goto l897
				l898:
					position, tokenIndex = position898, tokenIndex898
				}
				add(ruleYearWithPage, position890)
			}
			return true
		l889:
			position, tokenIndex = position889, tokenIndex889
			return false
		},
		/* 97 YearWithParens <- <('(' (YearWithChar / YearNum) ')')> */
		func() bool {
			position899, tokenIndex899 := position, tokenIndex
			{
				position900 := position
				if buffer[position] != rune('(') {
					goto l899
				}
				position++
				{
					position901, tokenIndex901 := position, tokenIndex
					if !_rules[ruleYearWithChar]() {
						goto l902
					}
					goto l901
				l902:
					position, tokenIndex = position901, tokenIndex901
					if !_rules[ruleYearNum]() {
						goto l899
					}
				}
			l901:
				if buffer[position] != rune(')') {
					goto l899
				}
				position++
				add(ruleYearWithParens, position900)
			}
			return true
		l899:
			position, tokenIndex = position899, tokenIndex899
			return false
		},
		/* 98 YearWithChar <- <(YearNum LowerASCII Action0)> */
		func() bool {
			position903, tokenIndex903 := position, tokenIndex
			{
				position904 := position
				if !_rules[ruleYearNum]() {
					goto l903
				}
				if !_rules[ruleLowerASCII]() {
					goto l903
				}
				if !_rules[ruleAction0]() {
					goto l903
				}
				add(ruleYearWithChar, position904)
			}
			return true
		l903:
			position, tokenIndex = position903, tokenIndex903
			return false
		},
		/* 99 YearNum <- <(('1' / '2') ('0' / '7' / '8' / '9') Nums (Nums / '?') '?'*)> */
		func() bool {
			position905, tokenIndex905 := position, tokenIndex
			{
				position906 := position
				{
					position907, tokenIndex907 := position, tokenIndex
					if buffer[position] != rune('1') {
						goto l908
					}
					position++
					goto l907
				l908:
					position, tokenIndex = position907, tokenIndex907
					if buffer[position] != rune('2') {
						goto l905
					}
					position++
				}
			l907:
				{
					position909, tokenIndex909 := position, tokenIndex
					if buffer[position] != rune('0') {
						goto l910
					}
					position++
					goto l909
				l910:
					position, tokenIndex = position909, tokenIndex909
					if buffer[position] != rune('7') {
						goto l911
					}
					position++
					goto l909
				l911:
					position, tokenIndex = position909, tokenIndex909
					if buffer[position] != rune('8') {
						goto l912
					}
					position++
					goto l909
				l912:
					position, tokenIndex = position909, tokenIndex909
					if buffer[position] != rune('9') {
						goto l905
					}
					position++
				}
			l909:
				if !_rules[ruleNums]() {
					goto l905
				}
				{
					position913, tokenIndex913 := position, tokenIndex
					if !_rules[ruleNums]() {
						goto l914
					}
					goto l913
				l914:
					position, tokenIndex = position913, tokenIndex913
					if buffer[position] != rune('?') {
						goto l905
					}
					position++
				}
			l913:
			l915:
				{
					position916, tokenIndex916 := position, tokenIndex
					if buffer[position] != rune('?') {
						goto l916
					}
					position++
					goto l915
				l916:
					position, tokenIndex = position916, tokenIndex916
				}
				add(ruleYearNum, position906)
			}
			return true
		l905:
			position, tokenIndex = position905, tokenIndex905
			return false
		},
		/* 100 NameUpperChar <- <(UpperChar / UpperCharExtended)> */
		func() bool {
			position917, tokenIndex917 := position, tokenIndex
			{
				position918 := position
				{
					position919, tokenIndex919 := position, tokenIndex
					if !_rules[ruleUpperChar]() {
						goto l920
					}
					goto l919
				l920:
					position, tokenIndex = position919, tokenIndex919
					if !_rules[ruleUpperCharExtended]() {
						goto l917
					}
				}
			l919:
				add(ruleNameUpperChar, position918)
			}
			return true
		l917:
			position, tokenIndex = position917, tokenIndex917
			return false
		},
		/* 101 UpperCharExtended <- <('Æ' / 'Œ' / 'Ö')> */
		func() bool {
			position921, tokenIndex921 := position, tokenIndex
			{
				position922 := position
				{
					position923, tokenIndex923 := position, tokenIndex
					if buffer[position] != rune('Æ') {
						goto l924
					}
					position++
					goto l923
				l924:
					position, tokenIndex = position923, tokenIndex923
					if buffer[position] != rune('Œ') {
						goto l925
					}
					position++
					goto l923
				l925:
					position, tokenIndex = position923, tokenIndex923
					if buffer[position] != rune('Ö') {
						goto l921
					}
					position++
				}
			l923:
				add(ruleUpperCharExtended, position922)
			}
			return true
		l921:
			position, tokenIndex = position921, tokenIndex921
			return false
		},
		/* 102 UpperChar <- <UpperASCII> */
		func() bool {
			position926, tokenIndex926 := position, tokenIndex
			{
				position927 := position
				if !_rules[ruleUpperASCII]() {
					goto l926
				}
				add(ruleUpperChar, position927)
			}
			return true
		l926:
			position, tokenIndex = position926, tokenIndex926
			return false
		},
		/* 103 NameLowerChar <- <(LowerChar / LowerCharExtended / MiscodedChar)> */
		func() bool {
			position928, tokenIndex928 := position, tokenIndex
			{
				position929 := position
				{
					position930, tokenIndex930 := position, tokenIndex
					if !_rules[ruleLowerChar]() {
						goto l931
					}
					goto l930
				l931:
					position, tokenIndex = position930, tokenIndex930
					if !_rules[ruleLowerCharExtended]() {
						goto l932
					}
					goto l930
				l932:
					position, tokenIndex = position930, tokenIndex930
					if !_rules[ruleMiscodedChar]() {
						goto l928
					}
				}
			l930:
				add(ruleNameLowerChar, position929)
			}
			return true
		l928:
			position, tokenIndex = position928, tokenIndex928
			return false
		},
		/* 104 MiscodedChar <- <'�'> */
		func() bool {
			position933, tokenIndex933 := position, tokenIndex
			{
				position934 := position
				if buffer[position] != rune('�') {
					goto l933
				}
				position++
				add(ruleMiscodedChar, position934)
			}
			return true
		l933:
			position, tokenIndex = position933, tokenIndex933
			return false
		},
		/* 105 LowerCharExtended <- <('æ' / 'œ' / 'à' / 'â' / 'å' / 'ã' / 'ä' / 'á' / 'ç' / 'č' / 'é' / 'è' / 'ë' / 'í' / 'ì' / 'ï' / 'ň' / 'ñ' / 'ñ' / 'ó' / 'ò' / 'ô' / 'ø' / 'õ' / 'ö' / 'ú' / 'ù' / 'ü' / 'ŕ' / 'ř' / 'ŗ' / 'ſ' / 'š' / 'š' / 'ş' / 'ß' / 'ž')> */
		func() bool {
			position935, tokenIndex935 := position, tokenIndex
			{
				position936 := position
				{
					position937, tokenIndex937 := position, tokenIndex
					if buffer[position] != rune('æ') {
						goto l938
					}
					position++
					goto l937
				l938:
					position, tokenIndex = position937, tokenIndex937
					if buffer[position] != rune('œ') {
						goto l939
					}
					position++
					goto l937
				l939:
					position, tokenIndex = position937, tokenIndex937
					if buffer[position] != rune('à') {
						goto l940
					}
					position++
					goto l937
				l940:
					position, tokenIndex = position937, tokenIndex937
					if buffer[position] != rune('â') {
						goto l941
					}
					position++
					goto l937
				l941:
					position, tokenIndex = position937, tokenIndex937
					if buffer[position] != rune('å') {
						goto l942
					}
					position++
					goto l937
				l942:
					position, tokenIndex = position937, tokenIndex937
					if buffer[position] != rune('ã') {
						goto l943
					}
					position++
					goto l937
				l943:
					position, tokenIndex = position937, tokenIndex937
					if buffer[position] != rune('ä') {
						goto l944
					}
					position++
					goto l937
				l944:
					position, tokenIndex = position937, tokenIndex937
					if buffer[position] != rune('á') {
						goto l945
					}
					position++
					goto l937
				l945:
					position, tokenIndex = position937, tokenIndex937
					if buffer[position] != rune('ç') {
						goto l946
					}
					position++
					goto l937
				l946:
					position, tokenIndex = position937, tokenIndex937
					if buffer[position] != rune('č') {
						goto l947
					}
					position++
					goto l937
				l947:
					position, tokenIndex = position937, tokenIndex937
					if buffer[position] != rune('é') {
						goto l948
					}
					position++
					goto l937
				l948:
					position, tokenIndex = position937, tokenIndex937
					if buffer[position] != rune('è') {
						goto l949
					}
					position++
					goto l937
				l949:
					position, tokenIndex = position937, tokenIndex937
					if buffer[position] != rune('ë') {
						goto l950
					}
					position++
					goto l937
				l950:
					position, tokenIndex = position937, tokenIndex937
					if buffer[position] != rune('í') {
						goto l951
					}
					position++
					goto l937
				l951:
					position, tokenIndex = position937, tokenIndex937
					if buffer[position] != rune('ì') {
						goto l952
					}
					position++
					goto l937
				l952:
					position, tokenIndex = position937, tokenIndex937
					if buffer[position] != rune('ï') {
						goto l953
					}
					position++
					goto l937
				l953:
					position, tokenIndex = position937, tokenIndex937
					if buffer[position] != rune('ň') {
						goto l954
					}
					position++
					goto l937
				l954:
					position, tokenIndex = position937, tokenIndex937
					if buffer[position] != rune('ñ') {
						goto l955
					}
					position++
					goto l937
				l955:
					position, tokenIndex = position937, tokenIndex937
					if buffer[position] != rune('ñ') {
						goto l956
					}
					position++
					goto l937
				l956:
					position, tokenIndex = position937, tokenIndex937
					if buffer[position] != rune('ó') {
						goto l957
					}
					position++
					goto l937
				l957:
					position, tokenIndex = position937, tokenIndex937
					if buffer[position] != rune('ò') {
						goto l958
					}
					position++
					goto l937
				l958:
					position, tokenIndex = position937, tokenIndex937
					if buffer[position] != rune('ô') {
						goto l959
					}
					position++
					goto l937
				l959:
					position, tokenIndex = position937, tokenIndex937
					if buffer[position] != rune('ø') {
						goto l960
					}
					position++
					goto l937
				l960:
					position, tokenIndex = position937, tokenIndex937
					if buffer[position] != rune('õ') {
						goto l961
					}
					position++
					goto l937
				l961:
					position, tokenIndex = position937, tokenIndex937
					if buffer[position] != rune('ö') {
						goto l962
					}
					position++
					goto l937
				l962:
					position, tokenIndex = position937, tokenIndex937
					if buffer[position] != rune('ú') {
						goto l963
					}
					position++
					goto l937
				l963:
					position, tokenIndex = position937, tokenIndex937
					if buffer[position] != rune('ù') {
						goto l964
					}
					position++
					goto l937
				l964:
					position, tokenIndex = position937, tokenIndex937
					if buffer[position] != rune('ü') {
						goto l965
					}
					position++
					goto l937
				l965:
					position, tokenIndex = position937, tokenIndex937
					if buffer[position] != rune('ŕ') {
						goto l966
					}
					position++
					goto l937
				l966:
					position, tokenIndex = position937, tokenIndex937
					if buffer[position] != rune('ř') {
						goto l967
					}
					position++
					goto l937
				l967:
					position, tokenIndex = position937, tokenIndex937
					if buffer[position] != rune('ŗ') {
						goto l968
					}
					position++
					goto l937
				l968:
					position, tokenIndex = position937, tokenIndex937
					if buffer[position] != rune('ſ') {
						goto l969
					}
					position++
					goto l937
				l969:
					position, tokenIndex = position937, tokenIndex937
					if buffer[position] != rune('š') {
						goto l970
					}
					position++
					goto l937
				l970:
					position, tokenIndex = position937, tokenIndex937
					if buffer[position] != rune('š') {
						goto l971
					}
					position++
					goto l937
				l971:
					position, tokenIndex = position937, tokenIndex937
					if buffer[position] != rune('ş') {
						goto l972
					}
					position++
					goto l937
				l972:
					position, tokenIndex = position937, tokenIndex937
					if buffer[position] != rune('ß') {
						goto l973
					}
					position++
					goto l937
				l973:
					position, tokenIndex = position937, tokenIndex937
					if buffer[position] != rune('ž') {
						goto l935
					}
					position++
				}
			l937:
				add(ruleLowerCharExtended, position936)
			}
			return true
		l935:
			position, tokenIndex = position935, tokenIndex935
			return false
		},
		/* 106 LowerChar <- <LowerASCII> */
		func() bool {
			position974, tokenIndex974 := position, tokenIndex
			{
				position975 := position
				if !_rules[ruleLowerASCII]() {
					goto l974
				}
				add(ruleLowerChar, position975)
			}
			return true
		l974:
			position, tokenIndex = position974, tokenIndex974
			return false
		},
		/* 107 SpaceCharEOI <- <(_ / !.)> */
		func() bool {
			position976, tokenIndex976 := position, tokenIndex
			{
				position977 := position
				{
					position978, tokenIndex978 := position, tokenIndex
					if !_rules[rule_]() {
						goto l979
					}
					goto l978
				l979:
					position, tokenIndex = position978, tokenIndex978
					{
						position980, tokenIndex980 := position, tokenIndex
						if !matchDot() {
							goto l980
						}
						goto l976
					l980:
						position, tokenIndex = position980, tokenIndex980
					}
				}
			l978:
				add(ruleSpaceCharEOI, position977)
			}
			return true
		l976:
			position, tokenIndex = position976, tokenIndex976
			return false
		},
		/* 108 Nums <- <[0-9]> */
		func() bool {
			position981, tokenIndex981 := position, tokenIndex
			{
				position982 := position
				if c := buffer[position]; c < rune('0') || c > rune('9') {
					goto l981
				}
				position++
				add(ruleNums, position982)
			}
			return true
		l981:
			position, tokenIndex = position981, tokenIndex981
			return false
		},
		/* 109 LowerGreek <- <[α-ω]> */
		func() bool {
			position983, tokenIndex983 := position, tokenIndex
			{
				position984 := position
				if c := buffer[position]; c < rune('α') || c > rune('ω') {
					goto l983
				}
				position++
				add(ruleLowerGreek, position984)
			}
			return true
		l983:
			position, tokenIndex = position983, tokenIndex983
			return false
		},
		/* 110 LowerASCII <- <[a-z]> */
		func() bool {
			position985, tokenIndex985 := position, tokenIndex
			{
				position986 := position
				if c := buffer[position]; c < rune('a') || c > rune('z') {
					goto l985
				}
				position++
				add(ruleLowerASCII, position986)
			}
			return true
		l985:
			position, tokenIndex = position985, tokenIndex985
			return false
		},
		/* 111 UpperASCII <- <[A-Z]> */
		func() bool {
			position987, tokenIndex987 := position, tokenIndex
			{
				position988 := position
				if c := buffer[position]; c < rune('A') || c > rune('Z') {
					goto l987
				}
				position++
				add(ruleUpperASCII, position988)
			}
			return true
		l987:
			position, tokenIndex = position987, tokenIndex987
			return false
		},
		/* 112 Apostrophe <- <(ApostrOther / ApostrASCII)> */
		func() bool {
			position989, tokenIndex989 := position, tokenIndex
			{
				position990 := position
				{
					position991, tokenIndex991 := position, tokenIndex
					if !_rules[ruleApostrOther]() {
						goto l992
					}
					goto l991
				l992:
					position, tokenIndex = position991, tokenIndex991
					if !_rules[ruleApostrASCII]() {
						goto l989
					}
				}
			l991:
				add(ruleApostrophe, position990)
			}
			return true
		l989:
			position, tokenIndex = position989, tokenIndex989
			return false
		},
		/* 113 ApostrASCII <- <'\''> */
		func() bool {
			position993, tokenIndex993 := position, tokenIndex
			{
				position994 := position
				if buffer[position] != rune('\'') {
					goto l993
				}
				position++
				add(ruleApostrASCII, position994)
			}
			return true
		l993:
			position, tokenIndex = position993, tokenIndex993
			return false
		},
		/* 114 ApostrOther <- <('‘' / '’')> */
		func() bool {
			position995, tokenIndex995 := position, tokenIndex
			{
				position996 := position
				{
					position997, tokenIndex997 := position, tokenIndex
					if buffer[position] != rune('‘') {
						goto l998
					}
					position++
					goto l997
				l998:
					position, tokenIndex = position997, tokenIndex997
					if buffer[position] != rune('’') {
						goto l995
					}
					position++
				}
			l997:
				add(ruleApostrOther, position996)
			}
			return true
		l995:
			position, tokenIndex = position995, tokenIndex995
			return false
		},
		/* 115 Dash <- <'-'> */
		func() bool {
			position999, tokenIndex999 := position, tokenIndex
			{
				position1000 := position
				if buffer[position] != rune('-') {
					goto l999
				}
				position++
				add(ruleDash, position1000)
			}
			return true
		l999:
			position, tokenIndex = position999, tokenIndex999
			return false
		},
		/* 116 Slash <- <'/'> */
		func() bool {
			position1001, tokenIndex1001 := position, tokenIndex
			{
				position1002 := position
				if buffer[position] != rune('/') {
					goto l1001
				}
				position++
				add(ruleSlash, position1002)
			}
			return true
		l1001:
			position, tokenIndex = position1001, tokenIndex1001
			return false
		},
		/* 117 _ <- <(MultipleSpace / SingleSpace)> */
		func() bool {
			position1003, tokenIndex1003 := position, tokenIndex
			{
				position1004 := position
				{
					position1005, tokenIndex1005 := position, tokenIndex
					if !_rules[ruleMultipleSpace]() {
						goto l1006
					}
					goto l1005
				l1006:
					position, tokenIndex = position1005, tokenIndex1005
					if !_rules[ruleSingleSpace]() {
						goto l1003
					}
				}
			l1005:
				add(rule_, position1004)
			}
			return true
		l1003:
			position, tokenIndex = position1003, tokenIndex1003
			return false
		},
		/* 118 MultipleSpace <- <(SingleSpace SingleSpace+)> */
		func() bool {
			position1007, tokenIndex1007 := position, tokenIndex
			{
				position1008 := position
				if !_rules[ruleSingleSpace]() {
					goto l1007
				}
				if !_rules[ruleSingleSpace]() {
					goto l1007
				}
			l1009:
				{
					position1010, tokenIndex1010 := position, tokenIndex
					if !_rules[ruleSingleSpace]() {
						goto l1010
					}
					goto l1009
				l1010:
					position, tokenIndex = position1010, tokenIndex1010
				}
				add(ruleMultipleSpace, position1008)
			}
			return true
		l1007:
			position, tokenIndex = position1007, tokenIndex1007
			return false
		},
		/* 119 SingleSpace <- <(' ' / OtherSpace)> */
		func() bool {
			position1011, tokenIndex1011 := position, tokenIndex
			{
				position1012 := position
				{
					position1013, tokenIndex1013 := position, tokenIndex
					if buffer[position] != rune(' ') {
						goto l1014
					}
					position++
					goto l1013
				l1014:
					position, tokenIndex = position1013, tokenIndex1013
					if !_rules[ruleOtherSpace]() {
						goto l1011
					}
				}
			l1013:
				add(ruleSingleSpace, position1012)
			}
			return true
		l1011:
			position, tokenIndex = position1011, tokenIndex1011
			return false
		},
		/* 120 OtherSpace <- <('\u3000' / '\u00a0' / '\t' / '\r' / '\n' / '\f' / '\v')> */
		func() bool {
			position1015, tokenIndex1015 := position, tokenIndex
			{
				position1016 := position
				{
					position1017, tokenIndex1017 := position, tokenIndex
					if buffer[position] != rune('\u3000') {
						goto l1018
					}
					position++
					goto l1017
				l1018:
					position, tokenIndex = position1017, tokenIndex1017
					if buffer[position] != rune('\u00a0') {
						goto l1019
					}
					position++
					goto l1017
				l1019:
					position, tokenIndex = position1017, tokenIndex1017
					if buffer[position] != rune('\t') {
						goto l1020
					}
					position++
					goto l1017
				l1020:
					position, tokenIndex = position1017, tokenIndex1017
					if buffer[position] != rune('\r') {
						goto l1021
					}
					position++
					goto l1017
				l1021:
					position, tokenIndex = position1017, tokenIndex1017
					if buffer[position] != rune('\n') {
						goto l1022
					}
					position++
					goto l1017
				l1022:
					position, tokenIndex = position1017, tokenIndex1017
					if buffer[position] != rune('\f') {
						goto l1023
					}
					position++
					goto l1017
				l1023:
					position, tokenIndex = position1017, tokenIndex1017
					if buffer[position] != rune('\v') {
						goto l1015
					}
					position++
				}
			l1017:
				add(ruleOtherSpace, position1016)
			}
			return true
		l1015:
			position, tokenIndex = position1015, tokenIndex1015
			return false
		},
		/* 122 Action0 <- <{ p.AddWarn(YearCharWarn) }> */
		func() bool {
			{
				add(ruleAction0, position)
			}
			return true
		},
	}
	p.rules = _rules
	return nil
}
